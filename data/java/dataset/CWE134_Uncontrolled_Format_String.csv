input,label
"public void WEPQZE3 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } if ( data != null ) { System . out . format ( data ) ; } }",1
public void SZB6OPS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ALO9PXCG2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . format ( data ) ; } }",0
"private void GNIU1S2B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 7JZ93E2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void AUWGNKPG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 0BJZRMJG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 0OM9JMZB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 5EX4WWNB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void B1RL0GE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RMOGTU5 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void IQSTLS2G2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void ITA8Y7KG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void NYXK0DGB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void RG8R6KWB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void EF1UHK2 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void GC6OGQ0 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void KIF2PBMG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void ICOZKIPG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void P9A3BIOB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void J0ALLHBB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void YT5NT1M ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void ZKGID8P ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void Q57J1SRG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void I148H09G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void OAM5E7EB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void M6QH67TB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void EH1U275 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 6SVU7NC ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void WW9ZUZTG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void Z8LYOSRG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void XOBT8MVB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 1YDPCGFB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void RVG6K84 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 7XMORHL ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 22CXVCRG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void D8JDDZ2G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void V3RXKDLB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void BEE8BL5B2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void NIEH49C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void KYZVPJJ ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void IXEXMXBG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 066ED9CG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void EVFOORMB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 16WH4U8B2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void NL8T5QR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void YZ2H164 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void E80XICSG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void LFGXERNG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void EL29YK1B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void LAOKUW5B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 4QEFYOB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void SBTOOXY ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 2G253UVG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void U3UXKYMG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void VKLOA4LB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void EMQKRZWB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void HDHI7KS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void ZXQEM33 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 9JR2QXBG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void MUV89W1G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void AIVUEM0B2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void V9HLCGCB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void K0OXBBA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void ANS1S2E ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",1
"private void PP4LOUCG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void V2M83XHB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 8ZSCGIY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void QJ1CAP4 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void QRAGZOGG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void NEPFQ99G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void U6KXY13B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void TRQANJCB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 0L5P9BA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void YO3I5EK ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void GN13RBSG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 61EXHNJG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 5KL4ZMNB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void YFKC4AAB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 2JG8PBL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void G5RCFL3 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void 3K4RZFTG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void OT4KEXKG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void KEIK5MDB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
"private void NOL54QCB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void 4HIGKJF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 9QGKUEB ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",1
"private void FWB63NRG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",0
"private void EIA2LNEB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
public void 8HTENYU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void X10GFLE ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void T770EF6G2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void WHESSB1B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 9RE4VRY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void B3CDOWB ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void D45OEXISink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },1
public void H0W7HFH ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void I95RC5UB2G1 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void OXWI73SB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void LSP64QPB2G2 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void L0A8FB6B2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void PZ4T4XUG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void EZJF83XG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },0
"public void 9D0377M ( ) throws Throwable { String data = null ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_22b ( ) ) . badSink ( data ) ; }",1
public void Y091UBA ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void QIHWBQ4B2G1 ( ) throws Throwable { String data = null ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void 71A5JD2B2G2 ( ) throws Throwable { String data = null ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void OFKVECIG2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void L67DTULSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__connect_tcp_format_22a . badPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },1
"public void MI8RT6HB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__connect_tcp_format_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"public void 4O137RGB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__connect_tcp_format_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void A90T9V4G2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__connect_tcp_format_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },0
"public void OWUXI3P ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",1
public void SX8UZRL ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void E17YT6VG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 9O7MVL1B2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
private void PLBT4L1Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
"public void 49ODP4Q ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void I57KKIC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 476KP5GG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"private void 4SJPLNLG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void JBTALYNB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void F0E83F8B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String 8YEUDTISource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public void F8LQZ68 ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
"private String QMV6R9IG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void XVUNGHLG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private String F3UGGG7B2GSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",0
"private void LNU3SEQB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void N3RJQ10 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void E9XHMTLSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . format ( data ) ; } },1
"public void CKQNRGA ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void OJO5F69 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void SGW6UI0G2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void 2JN9JW5G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void OE5C06BB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void O0UJM76B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void 0HWHWH5 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_51b ( ) ) . badSink ( data ) ; }",1
public void YVCJ288 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 3XRRHYVG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 9AT8RBGB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void A9OILTGSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void 011XMYRG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void PBK9YQSB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void JE8VEAC ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_52b ( ) ) . badSink ( data ) ; }",1
public void HD0NNCV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 2TCHAGNG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void Z573WKYB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void 6QD70IJSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_52c ( ) ) . badSink ( data ) ; },1
public void NC2TP3KG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_52c ( ) ) . goodG2BSink ( data ) ; },0
public void FXPCPH1B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_52c ( ) ) . goodB2GSink ( data ) ; },0
public void 3K2K5T0Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void R86GLCAG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void C72IM2MB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void FUZ3G1K ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_53b ( ) ) . badSink ( data ) ; }",1
public void YU8C9EI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 2FD17C6G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void A565I0ZB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void 4XT48F9Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_53c ( ) ) . badSink ( data ) ; },1
public void LN3PHEHG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_53c ( ) ) . goodG2BSink ( data ) ; },0
public void M6U792UB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_53c ( ) ) . goodB2GSink ( data ) ; },0
public void TRHM7N9Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_53d ( ) ) . badSink ( data ) ; },1
public void CWTP0XDG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_53d ( ) ) . goodG2BSink ( data ) ; },0
public void KR5FSXCB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_53d ( ) ) . goodB2GSink ( data ) ; },0
public void HJ6D9H3Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void Z6UC7P4G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 121MLFXB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void NO3XRTJ ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54b ( ) ) . badSink ( data ) ; }",1
public void X93K3DP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void RBAVAX2G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void T6479N5B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void WRJCKG1Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54c ( ) ) . badSink ( data ) ; },1
public void OO4YO24G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54c ( ) ) . goodG2BSink ( data ) ; },0
public void VMMVCQHB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54c ( ) ) . goodB2GSink ( data ) ; },0
public void IABJBT5Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54d ( ) ) . badSink ( data ) ; },1
public void RXVKQJNG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 2RH24DBB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54d ( ) ) . goodB2GSink ( data ) ; },0
public void G37F0QLSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54e ( ) ) . badSink ( data ) ; },1
public void BUFDO9FG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 05GI04EB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_54e ( ) ) . goodB2GSink ( data ) ; },0
public void QK1TOL1Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void AA849IRG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 3NYWKQ8B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void 3HMJFZ3 ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void IANGU0H ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void XHZG0AEG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void BHJ7IFKB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public String 4YAMESISource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public String MTE8F3TG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String MM7PWDFB2GSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",0
"public void 3WQ5Z6B ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_66b ( ) ) . badSink ( dataArray ) ; }",1
public void JWVUPYW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 2NZJVUEG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void JKRSG7XB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void NA1R5RCSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },1
public void PSPK4U7G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 1GP8ZYDB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void KQ7E1QM ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 9IAESXQ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 93PZKT3G2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void VKMW962B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void 19IV78QSink ( CWE134_Uncontrolled_Format_String__connect_tcp_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },1
public void H9NW2D0G2BSink ( CWE134_Uncontrolled_Format_String__connect_tcp_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 094TGT2B2GSink ( CWE134_Uncontrolled_Format_String__connect_tcp_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void PF2W9NL ( ) throws Throwable { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_68b ( ) ) . badSink ( ) ; }",1
public void Z91FGMH ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4FX49RVG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void UUUMLSKB2G ( ) throws Throwable { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_68b ( ) ) . goodB2GSink ( ) ; }",0
public void C69NVR2Sink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__connect_tcp_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },1
public void NLS76PNG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__connect_tcp_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void S9NNJ7XB2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__connect_tcp_format_68a . data ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void Q75YSIF ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void P9LUR1B ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void TI15V5WG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void JKU7R3KB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void RDE4IPVSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },1
public void AA2QHXEG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void O0N7URMB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void L5N9Y2P ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 4NSDED6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HBVP5AQG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void NT4J2JCB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void QLH7WA2Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 1HRP2CMG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 4I0OXSWB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void YMR4BMV ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 9AJPDLO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void J7KCY9RG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void D8BVMPXB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void DPH53R5Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void VOKV8HCG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 80NYSJ8B2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 4B5T1CC ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 7O0A622 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void SBHJ9T3G2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void 4D1MGG4B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void J7NGAD4Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
"public void IJG2H1TG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",0
"public void 9W7X13DB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void UMVGCTS ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 2U2VMTW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void KUPIZ00G2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void 8WVR7H9B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_format_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void LKULWO0Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 4HDGMFLG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void U5KWR53B2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 2TVQWC8 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__connect_tcp_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__connect_tcp_format_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void UBP9I25 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void FRY1O2QG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__connect_tcp_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__connect_tcp_format_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 7HI33P4B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__connect_tcp_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__connect_tcp_format_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void ERZFE3O ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } if ( data != null ) { System . out . printf ( data ) ; } }",1
public void GMCMK92 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 7F470I9G2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"private void ECMXLBTB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void ROXL8NU ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void CAEP6YIG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 2VXLV0WG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 5RMTOLRB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void AOIPQIEB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 404FWF1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void KY8LHVA ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void JXU5S2YG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void UAXI3I8G2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void PDS49HIB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 3DMHYH5B2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void S3SH2PN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 8QNXRL7 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void JUB3TSKG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WSLATF0G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void V3MZST9B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 4UVAOCUB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 80VAPOG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void Q87F97K ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void KNHBPO1G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void GFFF6I7G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void AX2C4V2B2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void Q8U17EYB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void ETT4KQ8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0PD763K ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void Y5AQ4B7G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 3C62MO9G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void GXTWQP0B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 3FS9MOHB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void CH63LHU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void SMWNCRI ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void NC6QBD6G2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void OOV8N28G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void HZU83WBB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void V7SPQY9B2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void B3C80GU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RZLE0YG ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 4H1Z2ORG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void E0PJJNMG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void O815S4EB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void HQBYDK3B2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 0F2ZH6X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void X0BYJ6S ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 3LWGQN4G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void NAFN4N5G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void XVGF8XAB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void K47N9DXB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 2U0XIWI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void J2WNQX9 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 6PG4GTWG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 0ZEG3YQG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void BIZYZ9KB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void S7IORYVB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void ZBLZ3A6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 8YFJ3WA ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void MWDLZSFG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void VXL5GNBG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void VODRVX4B2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 4JJWQYCB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void VVOHI4O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void XGNI72H ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",1
"private void OHELF63G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 3M1XUOJB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void SMIXJJ2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void KL48QQU ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void AVRGRGEG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void Z94N1WLG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WH03DZYB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void B59VTPYB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void LM8WUSN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void UXHTWDO ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void U1ZQV5ZG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void Y5U495FG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void BY5VZBCB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void SM2AHWMB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void E9BDSFO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DBJAP4S ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void QOTA8R0G2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void LI10MK6G2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void YT4GHI0B2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
"private void T667N04B2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void 3X9R2W8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void IH46MHY ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",1
"private void VSEF1P8G2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",0
"private void WFQF975B2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
public void 4I5CYED ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 8Q7DRFF ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void EINR3EPG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void W0ZLY7KB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 7507QOU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void E30OJ6W ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void CW6RX88Sink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },1
public void XKBA3UM ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void S2CYQJKB2G1 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void 2Z81R25B2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void PMCKSWAB2G2 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void VD6XC7AB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void XYDHMNNG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void Y6LS0HWG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },0
"public void YHSKZCV ( ) throws Throwable { String data = null ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_22b ( ) ) . badSink ( data ) ; }",1
public void EVYZ8M2 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void ARQRPCTB2G1 ( ) throws Throwable { String data = null ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void 1S6HR5UB2G2 ( ) throws Throwable { String data = null ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void O33S6KXG2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void U0LUJXNSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__connect_tcp_printf_22a . badPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },1
"public void D4RRYOWB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__connect_tcp_printf_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"public void 6Y0IND3B2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__connect_tcp_printf_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void GYNNZMQG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__connect_tcp_printf_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },0
"public void Y7XX6QV ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",1
public void 5BBB63T ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void VH30073G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void RTD3ERKB2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
private void M0J6B71Sink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
"public void WKNMHEI ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void FAKRCFV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 0UUXRIRG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"private void Q5R9ICJG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void D6O4LMZB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void MY30I0HB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String O0CQ0D1Source ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
public void LR7CJMO ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
"private String OFKH7IBG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void RALQORJG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private String RNOEEMNB2GSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",0
"private void O4HJN2SB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void T4U0LJ3 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void XWOGA3FSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . printf ( data ) ; } },1
"public void VR18VO7 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void IQRFXU4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void FT1VQ5GG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void 5N7DRN1G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void B0ITBDKB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void 7WT310HB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void MWJ2IU3 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_51b ( ) ) . badSink ( data ) ; }",1
public void D1THENH ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void H3ZSKD6G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void YBRI2BBB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void Z8YK7KRSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 1I1FPLSG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 4P0D7SVB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void JFS9UAU ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_52b ( ) ) . badSink ( data ) ; }",1
public void UILK9JW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void E5ZOGEYG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 1DMBULYB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void 92XMJ1XSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_52c ( ) ) . badSink ( data ) ; },1
public void RXMBU5DG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_52c ( ) ) . goodG2BSink ( data ) ; },0
public void WYICYP2B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_52c ( ) ) . goodB2GSink ( data ) ; },0
public void J60IWVJSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 5EMOXM3G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void O6MJGNZB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void CDNKZ77 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_53b ( ) ) . badSink ( data ) ; }",1
public void M2MGNY5 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void VUVXH4PG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void BY6847FB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void WLBD85ISink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_53c ( ) ) . badSink ( data ) ; },1
public void A0JBQFTG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_53c ( ) ) . goodG2BSink ( data ) ; },0
public void WYFMHVHB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_53c ( ) ) . goodB2GSink ( data ) ; },0
public void 9FG9SDASink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_53d ( ) ) . badSink ( data ) ; },1
public void EWVQ6D1G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_53d ( ) ) . goodG2BSink ( data ) ; },0
public void L5XOAL0B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_53d ( ) ) . goodB2GSink ( data ) ; },0
public void MIWVTSCSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void J15P4F4G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void QXQAFIEB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void SHC4VBV ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54b ( ) ) . badSink ( data ) ; }",1
public void ME9B7KG ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BFDNZ3RG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void VCBJ7DEB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void 2ECDI30Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54c ( ) ) . badSink ( data ) ; },1
public void 6KC3S32G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54c ( ) ) . goodG2BSink ( data ) ; },0
public void GW6009PB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54c ( ) ) . goodB2GSink ( data ) ; },0
public void OQLR1WNSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54d ( ) ) . badSink ( data ) ; },1
public void R0Y35TGG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54d ( ) ) . goodG2BSink ( data ) ; },0
public void ONW8R0JB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54d ( ) ) . goodB2GSink ( data ) ; },0
public void GK4QMK3Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54e ( ) ) . badSink ( data ) ; },1
public void SRPEZWOG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 0ADMODRB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_54e ( ) ) . goodB2GSink ( data ) ; },0
public void WUFEFZISink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void N7J4JSMG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void MKQDZAGB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void 8MJZ949 ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void CXFH31F ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void HWCPES7G2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void L4C29TLB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public String LH8ROMHSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public String MNQNW8KG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String BGNJOFFB2GSource ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",0
"public void 6WL4264 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 6BDAD9U ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void B1KF9K2G2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void KO73IC8B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void G9J7QJZSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void JPCO54UG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void YOJ6465B2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void LY2TK8M ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void DMTOJXR ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ATUD33YG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void M8TJ9YTB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void 4VX8E0VSink ( CWE134_Uncontrolled_Format_String__connect_tcp_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void XNF18QTG2BSink ( CWE134_Uncontrolled_Format_String__connect_tcp_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 25BHK6HB2GSink ( CWE134_Uncontrolled_Format_String__connect_tcp_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void JQA3KIH ( ) throws Throwable { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_68b ( ) ) . badSink ( ) ; }",1
public void 06RXLHM ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void RTDGWY9G2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void Y8WWLE8B2G ( ) throws Throwable { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_68b ( ) ) . goodB2GSink ( ) ; }",0
public void TVQIJOASink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__connect_tcp_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 98T8MN3G2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__connect_tcp_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void HECRDTSB2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__connect_tcp_printf_68a . data ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void DTRBRRK ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void Q92N553 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BRJNQ0QG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void Z497DM2B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void MFX6S8LSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 0TCM1PZG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 5PLIOAGB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void PGHVNYD ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_72b ( ) ) . badSink ( dataVector ) ; }",1
public void C9G669A ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 71YSAO7G2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void E5N4PJNB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void J56A51QSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void H9Y3UD8G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 5LZH3ZHB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void TRAW896 ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void Q7BF32E ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 5B1XPMLG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void Q7J257XB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void OH5R9USSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void MVRR38FG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void AFAPHY4B2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 9JU0DTB ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 6EDFWY2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void CTGDDB9G2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void 9GYM8BTB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void NTV93L8Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
"public void BHDRTSXG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"public void 0NOJW2FB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void TQ6VIXM ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void FDFYF6L ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4GG1WCQG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void CI5R043B2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__connect_tcp_printf_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void X6WI96USink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void EXBHA1RG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 1OWV894B2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 208DEDR ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__connect_tcp_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__connect_tcp_printf_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void DVZSWJZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void CR6G21FG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__connect_tcp_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__connect_tcp_printf_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void W69HAYQB2G ( ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__connect_tcp_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__connect_tcp_printf_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void 64D0Y7A ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } if ( data != null ) { System . out . format ( data ) ; } }",1
public void 4N2XPBK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HU6D89KG2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . format ( data ) ; } }",0
"private void 3F0OBXXB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void ECNSJC7 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void EUZIKYRG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void DU85DAJG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 5955R37B2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 4ERP5KBB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void OJOZ4B1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void VJHJZYS ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 0WC6HJOG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void UQBROYRG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void ED282ZKB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void MVJ7XZPB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 7TJ7REQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void A55AXTV ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void VQA568MG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void I1P55TSG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void DGZGZ2RB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void C9ORJNMB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void RHD7U71 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void F6TTSYS ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void FEVHF10G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void PC5XRIZG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 78PXETPB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void P8WMU2FB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void RZF9W04 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 29Q2R55 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 6KNMM76G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 0SK94VKG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 5FZC2OAB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void W5BY829B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 04BKPJT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BJWAMTJ ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void P0TP53WG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 3H63EPDG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 9FQSBJQB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 4EFZM1AB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void UJ1MA9K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void JD858RU ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void OCV8V35G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void IWEKTUYG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void CLGVX5KB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void ZLIYDFQB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void CL24D6B ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 1I1WNKQ ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void QU0HA04G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 3TUQDYCG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void OYM33WHB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void N8RTLRVB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void QVU1WR6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 35BDBL9 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void VGVWFQ2G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void NCGFMGLG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void Y90YDP1B2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 2VAOYGRB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void DQLBZ7V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void VOC8TYG ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 11UDOR5G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void FM366H0G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 7ZAUS3LB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void I7MO5JYB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void OO29IO7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void YXF4F89 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",1
"private void 204OQV0G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void GPGD0RFB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void LIQI3VY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 1P40LZX ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 16RESGBG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void P6IQF4DG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void TM4DOMQB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void ROBF18QB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void DVORT8C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void AZS9TW3 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void HQDXXYHG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void QWJ0JPMG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void KFOXXK7B2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void HDDWZ2HB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void KNIFYMC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 2BLQ0RZ ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void R7V3HXRG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void JQEKR73G2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void Z8P37XBB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
"private void UA4HZ1BB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void JRF73N1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BEUVNVR ( ) throws Throwable { String data ; while ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",1
"private void PUZJBVZG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",0
"private void 635OA0IB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
public void N3UTWM9 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 5CB7BLK ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void M4ZJ64LG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 490Y32QB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void ZSJAL41 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 1HK1R1T ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void WX1VIQKSink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },1
public void A79REQI ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void KT0IMYHB2G1 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void 7LQU3G9B2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 4NCM6X3B2G2 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void IFUD9P7B2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 6W8M4G1G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void F8RQUVEG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },0
"public void WG3OTKF ( ) throws Throwable { String data = null ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_22b ( ) ) . badSink ( data ) ; }",1
public void 300GCGZ ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void VZYLID5B2G1 ( ) throws Throwable { String data = null ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void UN6KGELB2G2 ( ) throws Throwable { String data = null ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void FM9WT7YG2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void OAFM4F7Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__console_readLine_format_22a . badPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },1
"public void AR4E1IFB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__console_readLine_format_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"public void DQF36D4B2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__console_readLine_format_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void NK9HSP1G2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__console_readLine_format_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },0
"public void KQTORYF ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",1
public void XFSLA9V ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void LU1FDVUG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 3GCY3S3B2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
private void RQZIR0SSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
"public void 61S0D1G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 0TMENZ4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void KD5QXN2G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"private void PVHM4U4G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void 7ZZISH1B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void MHX6TRZB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String PUU0HZ8Source ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public void KIF429S ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
"private String E4ZB6X0G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void GJNEAI0G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private String POK3OC5B2GSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",0
"private void XT70QWMB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void WO1TMVG ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void I5HRZV3Sink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . format ( data ) ; } },1
"public void P7U77W2 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void BCZBBTD ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void PKERRROG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void G9BZJG6G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void B51LKVKB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void TVG8U0ZB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void WZ8WJVU ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_51b ( ) ) . badSink ( data ) ; }",1
public void TMX0WKU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void AL549UGG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void KM8QLFUB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void YW96VCVSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void FZ78INOG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 1AB93UKB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void LNQ4KHI ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_52b ( ) ) . badSink ( data ) ; }",1
public void UJJYJ19 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void WHRE8FZG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void IGZW4T1B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void BC6LLNQSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_52c ( ) ) . badSink ( data ) ; },1
public void RAUPRIQG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_52c ( ) ) . goodG2BSink ( data ) ; },0
public void JB5V0I7B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_52c ( ) ) . goodB2GSink ( data ) ; },0
public void MSUNKHYSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void OZ91HJ9G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void E8IPZXYB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void S81FYBS ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_53b ( ) ) . badSink ( data ) ; }",1
public void FAIP479 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1YRIOUYG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void FD1NP7UB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void X7JV7CHSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_53c ( ) ) . badSink ( data ) ; },1
public void ME7DJ5NG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 572SR78B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_53c ( ) ) . goodB2GSink ( data ) ; },0
public void WH38SHUSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_53d ( ) ) . badSink ( data ) ; },1
public void K5KEQKOG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 8ZNRLDPB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_53d ( ) ) . goodB2GSink ( data ) ; },0
public void MJR67SRSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void 64MKWKRG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void HSOXDZBB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void C62Q28F ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54b ( ) ) . badSink ( data ) ; }",1
public void WM0M8V1 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 5ESAQ3VG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void VNOBJT7B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void EMUUJ9XSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54c ( ) ) . badSink ( data ) ; },1
public void 1ELN8MRG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54c ( ) ) . goodG2BSink ( data ) ; },0
public void MLNZSZ0B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54c ( ) ) . goodB2GSink ( data ) ; },0
public void R08LABSSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54d ( ) ) . badSink ( data ) ; },1
public void BBW7HRSG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54d ( ) ) . goodG2BSink ( data ) ; },0
public void BLE6E0RB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54d ( ) ) . goodB2GSink ( data ) ; },0
public void SA8VEPJSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54e ( ) ) . badSink ( data ) ; },1
public void 4XMSGI6G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54e ( ) ) . goodG2BSink ( data ) ; },0
public void H6AWWMQB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_format_54e ( ) ) . goodB2GSink ( data ) ; },0
public void OVN28PRSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void BU1R8OXG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void S975LB6B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void YFJELB4 ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__console_readLine_format_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void NWWZ907 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 0NKO65VG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__console_readLine_format_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void 0780B08B2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__console_readLine_format_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public String 6YTJWLASource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
"public String K7UY5F0G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String X66VIJCB2GSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",0
"public void 3QU3IHT ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_66b ( ) ) . badSink ( dataArray ) ; }",1
public void TDD6R36 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 3W4FMRSG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void DGFBHHFB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void L82MSOZSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 1VGMA7HG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void DCUSUBSB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void JV4T5CV ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void SNQT22K ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void T9W2XDJG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void 0E1IW8UB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void ENIO567Sink ( CWE134_Uncontrolled_Format_String__console_readLine_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },1
public void HI28W9CG2BSink ( CWE134_Uncontrolled_Format_String__console_readLine_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 8WRYT27B2GSink ( CWE134_Uncontrolled_Format_String__console_readLine_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void UP098G4 ( ) throws Throwable { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_68b ( ) ) . badSink ( ) ; }",1
public void 45NEMHY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void REUA09NG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void L980R7DB2G ( ) throws Throwable { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_68b ( ) ) . goodB2GSink ( ) ; }",0
public void 95Z998NSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__console_readLine_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 5L65Z2WG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__console_readLine_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void D2GI56YB2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__console_readLine_format_68a . data ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void KJBBC2K ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void U62U4UB ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PWFNPKZG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void TTGEY4HB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_format_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void PC85BYMSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },1
public void IWXB6AOG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 55871WKB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void X0UI5V7 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_72b ( ) ) . badSink ( dataVector ) ; }",1
public void F9PM6PH ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void UFD5EUWG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void VZE1IAGB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void 95P40UHSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void TC75X1DG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void LD7JNMJB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void KX6QAB1 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void KZRDLGP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void WN1FVSXG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void R6ZJUWPB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void FAUNUY0Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void E59TJNVG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void USUHIJPB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void L77N0M2 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 6GLV3RR ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 6OCHK48G2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void 1HU60Y7B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void X9K5K40Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
"public void AXMYR6NG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",0
"public void E5I2LG7B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void WYJ56XK ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 9JY533Y ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void EKF92K2G2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void 2M84WW6B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_format_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 7KDDTJDSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void LPYOEXNG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void ZVC84J1B2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void AQOI6HY ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__console_readLine_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__console_readLine_format_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 50041ST ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void RVYE79OG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__console_readLine_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__console_readLine_format_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 1LW5NMSB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__console_readLine_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__console_readLine_format_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void DRYO53T ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } if ( data != null ) { System . out . printf ( data ) ; } }",1
public void K968CXF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QIEHD4XG2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"private void OTE3TZEB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void KB8UQAF ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void QKZPK55G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void AH5H1NMG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void PAQUWV9B2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void J4JL4R8B2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 1T03ZPL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void SA8IP2V ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void C1WGJ03G2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void ERHTLZAG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void S80PE69B2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void VLSN01KB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 2HYAHUW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void EL1NKQL ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void OTO6WE1G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void QBDZ9ROG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void M1M40B2B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void Z7RF1VAB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void T6MVTIJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 329JASQ ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void ZV4V1SVG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void NZOBWECG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void GJPRFK7B2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 3WSYMPYB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void JP8S62V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BCM3LS8 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void R5GYTLRG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 6QP07EPG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WAKMY40B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void DYC6X4DB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 9U1ENHB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void SHAO53F ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void BC01C5LG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void VBMZ4MXG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 86F85BOB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void PL7SI4KB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 461JMB5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void NWTW8PM ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void TR582HBG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void Y3NC294G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 2MC8AIUB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void B0L9Y0MB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void F79YZN0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RBF0FX5 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 5VK4N68G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void RMGJSNCG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void XQIYY2PB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void LS1GXOAB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void GOFR4RN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void K8X7RYE ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void YGLZJW6G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void BLUVW8SG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void F4N9Q82B2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void AMVQITNB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void GOL2U68 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void PIUV4MB ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void TP23XLOG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void YFCULRYG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void R9JXE9JB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void EHJQQPXB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void UV5N8TH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DES2UV6 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",1
"private void 5WX62UOG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void Q8E9NKIB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 5JVZDS2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void C9WFEX5 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void MND44V9G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void XCDUU74G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void H30P940B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void KF6OJABB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void OWXTDAL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void D9FFP9V ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void FKJC8M2G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WTTQ6AKG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void JRNE1JDB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void XQ2SQ5QB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void UZLO1PD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 5J3AIBG ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void 63UCQRJG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void RL3N16SG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void VB85WPXB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
"private void MB3142LB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void VIAULF4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 4YIRMKI ( ) throws Throwable { String data ; while ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",1
"private void UZMFNQMG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",0
"private void 16PQCEPB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
public void IN868Y8 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void EPZP9VI ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void SEDNLQMG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void VCIRSSSB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void RQK9H6S ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void ARX2JYP ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void 8PGVLVSSink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },1
public void 67481VH ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void WEOYMMAB2G1 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void BPNDYELB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 1IV5AR6B2G2 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void 8807L3NB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void UFZ8BZWG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void KW3692YG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },0
"public void GN77N7A ( ) throws Throwable { String data = null ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_22b ( ) ) . badSink ( data ) ; }",1
public void UT1OOL2 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void YESIS47B2G1 ( ) throws Throwable { String data = null ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void UKBO3UBB2G2 ( ) throws Throwable { String data = null ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void R159ANAG2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void 9YSD4BWSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__console_readLine_printf_22a . badPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },1
"public void S8I337NB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__console_readLine_printf_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"public void JRPNUXPB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__console_readLine_printf_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void KQPS6RBG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__console_readLine_printf_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },0
"public void J86Z42E ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",1
public void B7C5TFY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void W7B9MLCG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void Z9N8SDSB2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
private void P1K326JSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
"public void GAN0XDH ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void EQAZPLI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void VUTFUC2G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"private void U957X6XG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void KEGDJ43B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void QP4LAVCB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String 25J2HPQSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
public void DSJ6TGI ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
"private String 90ZUOYBG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void LL6VRIGG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private String 0R968G7B2GSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",0
"private void TB0EGAQB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void P56ZFGQ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 9X9VMEKSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . printf ( data ) ; } },1
"public void EFVR70C ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void R0A9ZSZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void KSZUCVRG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void 5TV66F3G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void ON3H2URB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void QM9DT8XB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void AP6UNG0 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_51b ( ) ) . badSink ( data ) ; }",1
public void B6LNM7Z ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void EL3KYQTG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void PBE5IQPB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void 4RG8IQBSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 2YMKZLSG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void B91WS85B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void M2PYCH8 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_52b ( ) ) . badSink ( data ) ; }",1
public void T56VY7J ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 8A8WLTZG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void HR7J0O7B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void BVHVWAJSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_52c ( ) ) . badSink ( data ) ; },1
public void GBRW46YG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_52c ( ) ) . goodG2BSink ( data ) ; },0
public void E5TVKZZB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_52c ( ) ) . goodB2GSink ( data ) ; },0
public void ORH4RQHSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void TB0J5BRG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 8J635LUB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 5LTUXPU ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_53b ( ) ) . badSink ( data ) ; }",1
public void C3A3JP9 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void OWDESCYG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void WHBGRNLB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void 28SLEVLSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_53c ( ) ) . badSink ( data ) ; },1
public void S9JWMKDG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_53c ( ) ) . goodG2BSink ( data ) ; },0
public void I41P4UCB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_53c ( ) ) . goodB2GSink ( data ) ; },0
public void B62CJ7KSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_53d ( ) ) . badSink ( data ) ; },1
public void H5INEB4G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 0ID0GWMB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_53d ( ) ) . goodB2GSink ( data ) ; },0
public void 3DIBZK3Sink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void ZBSD52XG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void DEFXD86B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void V0VHZ6L ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54b ( ) ) . badSink ( data ) ; }",1
public void CGK07QU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void AHSN8RXG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void VQRYNJGB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void 4VISN2KSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54c ( ) ) . badSink ( data ) ; },1
public void 7EPZ9SGG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54c ( ) ) . goodG2BSink ( data ) ; },0
public void R4YVEB9B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54c ( ) ) . goodB2GSink ( data ) ; },0
public void 90BQDYMSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54d ( ) ) . badSink ( data ) ; },1
public void JKGG617G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54d ( ) ) . goodG2BSink ( data ) ; },0
public void FVRXHUCB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54d ( ) ) . goodB2GSink ( data ) ; },0
public void V6XVVM0Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54e ( ) ) . badSink ( data ) ; },1
public void 2SKT1E5G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 7ST4N1AB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_54e ( ) ) . goodB2GSink ( data ) ; },0
public void IFRYHEZSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void P1HGR7IG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void NH30P2HB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void AX6W64F ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void OBSQKVC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 7CA8TFDG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void LDZO9YZB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public String KRT5GOKSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",1
"public String UVZ8E8YG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String WK609POB2GSource ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } return data ; }",0
"public void 2KKGAWE ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 3YPIH79 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 5B9I4XXG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void YRAMFQ7B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void QHDNNEKSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 3WGMXYEG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void ZDDO2G0B2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 6B18N5K ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 8NY8D1H ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void NSLXXRJG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void 4U2H2S1B2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void NSBRRFQSink ( CWE134_Uncontrolled_Format_String__console_readLine_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 1OP87W2G2BSink ( CWE134_Uncontrolled_Format_String__console_readLine_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void BP9B1QTB2GSink ( CWE134_Uncontrolled_Format_String__console_readLine_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void OYUM6WV ( ) throws Throwable { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_68b ( ) ) . badSink ( ) ; }",1
public void WEJC8MY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void J3R4RNOG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void 67F8ITRB2G ( ) throws Throwable { data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_68b ( ) ) . goodB2GSink ( ) ; }",0
public void 4JE1KV4Sink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__console_readLine_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void OC2Y1SPG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__console_readLine_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void MTIYIKGB2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__console_readLine_printf_68a . data ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void CELW884 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void D2FDBO0 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ZUYOMOLG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void J4NYM0PB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void F314VMRSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void AH60DWAG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void M110693B2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void OCISG0W ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_72b ( ) ) . badSink ( dataVector ) ; }",1
public void H576WH9 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void G8ZJ66MG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void DD03Z7MB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void 4KL8KKMSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void QG21ALEG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void WXMQ4P8B2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void IKIQJIY ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void XC6C0BU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ZTUD9ORG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void GJZEE7GB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void C5E5X9GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 6RX3MPKG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void OWCC3ONB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void D1I5EUJ ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void O6UNRHK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void WVD96YMG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void EPNP8SMB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void 8LX0BKLSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
"public void YWAC4UDG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"public void BKP9NJSB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void V32YQ91 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 8WYK0JF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QMHGLONG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void VS4XO8IB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__console_readLine_printf_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void QYAEM3CSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void CLE20BPG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void UD9ZN56B2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void W5FRRM2 ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__console_readLine_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__console_readLine_printf_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void US0ZQ9Z ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4WRQXDNG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__console_readLine_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__console_readLine_printf_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void C3XUFJVB2G ( ) throws Throwable { String data ; data = """" ; { InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { readerInputStream = new InputStreamReader ( System . in , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__console_readLine_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__console_readLine_printf_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void 8C02TRT ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } if ( data != null ) { System . out . format ( data ) ; } }",1
public void 5P66IVN ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void YTSZ42TG2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . format ( data ) ; } }",0
"private void FNUGVLCB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void BQR1CJ6 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void MXUI93QG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void UTB3ZR3G2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void KTFX8FXB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 8VIUGREB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void TY3JUN5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void GRT9IJX ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void JDSRUTFG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void A087VAJG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 6TTSHV0B2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void P1WE4F5B2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void YUDN56T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void X0PQNBD ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void W1DQ5NJG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 64VYXMRG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void AA8CP1BB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void F5XKQNZB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void YWDKS9Q ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void J5M9845 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void N03SC58G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void LX2LUYYG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 4ACWFDAB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void AN19YY2B2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void WS5MNLM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void HBMVXPN ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 3BU61WJG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void LLH0KI3G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void AZ20S99B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void IEEOTJKB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 3FVDIBY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0TYGOC0 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void W12FUAYG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void EV2QAR5G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void FBJWXLHB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 1C5JSBRB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void JU40UBT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0F4KFK2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 83G3UIOG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void IMEW3KAG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void FWNV4R3B2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 2FCQ2C6B2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void JYYSVAG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void I9ZN5MQ ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void CRJ7XGWG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void GDACO1AG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void S6OQSU5B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void L60BPDMB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 3GGZKFY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void G15UTS1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void ZV4C57PG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 0CINBENG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void MWC9BSBB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 5MUBTKWB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void EGT5Z3Y ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 2T6G33W ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void VJHQ9AEG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void DG42JRTG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void ZGP8635B2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void KX904O0B2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void Y9X2MZF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BRML4W8 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",1
"private void JJ18RT0G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void USR1L4GB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void RBCDBQK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void ZGU5BDD ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void HIMVVZ6G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 70818LLG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void RKJ811QB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void CMEPWNDB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void P5FZL9G ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 4RJWQUV ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void WFKA9VOG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 432BZTLG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void L7RSBZ8B2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void XJFQHRDB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 6E4TVP3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0J33W12 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void OQ9ETM5G2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void Y3OLTJJG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 1A7NTACB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
"private void 0WFV2OTB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void WF4VNKU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 9HOGZK1 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",1
"private void 5HSPGHRG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",0
"private void YV9XJJXB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
public void 64X0QPF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 4CVEWE9 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void ECU24IVG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void SAAG93IB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void QIY24B6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void FTUYIWU ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void JLQG51FSink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },1
public void KIX8Z1J ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void CW5TO2OB2G1 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void 24QWUQZB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 1EDQJRXB2G2 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void J6OP9GZB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void XLUAFD1G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void Q9XE9TWG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },0
"public void 0PUQMN5 ( ) throws Throwable { String data = null ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__database_format_22b ( ) ) . badSink ( data ) ; }",1
public void 0RBG09T ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void K3NSK6QB2G1 ( ) throws Throwable { String data = null ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__database_format_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void CW1DVX4B2G2 ( ) throws Throwable { String data = null ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__database_format_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void BUEVBW1G2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__database_format_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void IN9A9SDSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__database_format_22a . badPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },1
"public void 6R26FTAB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__database_format_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"public void NFY9S8HB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__database_format_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void PPAV78AG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__database_format_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },0
"public void XUDSIVM ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",1
public void ZR47W66 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void Q7UYEZDG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 2YT938WB2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
private void BWUTSTTSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
"public void 9JJN6YD ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void 08DSONE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void L8IJNKHG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"private void 9HISZOBG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void RZDAZKFB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void BXAC8X7B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2GSink ( data ) ; }",0
"private String U8DFU47Source ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public void AOB7KMP ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
"private String K5I1JECG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void S2B1DPEG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private String MHRAZPWB2GSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",0
"private void QW67EXPB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void 8MFZ476 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void NSFQJHFSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . format ( data ) ; } },1
"public void F28QHIO ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void FZ5NA9T ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void IBI9RY3G2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void XH9F93KG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void 85VJME0B2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void B7DHQS7B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void VWHGN7I ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_51b ( ) ) . badSink ( data ) ; }",1
public void 9NLF5OS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 848NKJ0G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_format_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void TNW5OIOB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void 97NR76PSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void XQOTS11G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void ZHINV73B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void QGK0CH7 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_52b ( ) ) . badSink ( data ) ; }",1
public void XDEJSMS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 9LW3V78G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_format_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void UHFH4V6B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void OFJUVWRSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_52c ( ) ) . badSink ( data ) ; },1
public void 27SKUSLG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_52c ( ) ) . goodG2BSink ( data ) ; },0
public void T9M99DZB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_52c ( ) ) . goodB2GSink ( data ) ; },0
public void LGI2YEMSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void EH36B0OG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void ZO1NLUNB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 7DU4271 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_53b ( ) ) . badSink ( data ) ; }",1
public void SUN5BF2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 2XENN8LG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_format_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 278T4M8B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void D8RZYELSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_53c ( ) ) . badSink ( data ) ; },1
public void BU5FBOTG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_53c ( ) ) . goodG2BSink ( data ) ; },0
public void R20TPCOB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_53c ( ) ) . goodB2GSink ( data ) ; },0
public void G7NWG84Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_53d ( ) ) . badSink ( data ) ; },1
public void 0C62SW3G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_53d ( ) ) . goodG2BSink ( data ) ; },0
public void FJJPX6YB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_53d ( ) ) . goodB2GSink ( data ) ; },0
public void Q8KQOJ4Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void LP9LNGDG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 2CY03X1B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 31HITHO ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_54b ( ) ) . badSink ( data ) ; }",1
public void 5YEJG61 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void TA1A2AEG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_format_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void RP962E7B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void 2OMEG6DSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_54c ( ) ) . badSink ( data ) ; },1
public void AKIOF9SG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 26WCMHCB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_54c ( ) ) . goodB2GSink ( data ) ; },0
public void HEQFTZLSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_54d ( ) ) . badSink ( data ) ; },1
public void 1GSZT4GG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_54d ( ) ) . goodG2BSink ( data ) ; },0
public void FE51Z13B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_54d ( ) ) . goodB2GSink ( data ) ; },0
public void ZI8WYGGSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_54e ( ) ) . badSink ( data ) ; },1
public void ZJ6XUXBG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_54e ( ) ) . goodG2BSink ( data ) ; },0
public void UD3OKVEB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_format_54e ( ) ) . goodB2GSink ( data ) ; },0
public void KBP0LF3Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void 8LSUBUIG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void T4QNJM2B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void TSQOOG3 ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__database_format_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 3CYCFDS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void UUVJVPCG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__database_format_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void PEQCYQSB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__database_format_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public String TZ41D2CSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public String K9SVNXIG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String EXXYXTFB2GSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",0
"public void 9EZG7ZX ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__database_format_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 450EK52 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 7T8XP34G2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__database_format_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void 2SGEQ5UB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__database_format_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void 1USGOKISink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },1
public void V56Y6WYG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void PIU5JG8B2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 15938EC ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__database_format_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void IHS0DCN ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void IBMP26LG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__database_format_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void OTCB1ZVB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__database_format_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void T4YRC7CSink ( CWE134_Uncontrolled_Format_String__database_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },1
public void Y5ZWHBOG2BSink ( CWE134_Uncontrolled_Format_String__database_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void QHTVG3VB2GSink ( CWE134_Uncontrolled_Format_String__database_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void C0O7F0N ( ) throws Throwable { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_68b ( ) ) . badSink ( ) ; }",1
public void Q9PKF0O ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 3RGC5HPG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_format_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void 8Y20BYRB2G ( ) throws Throwable { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_68b ( ) ) . goodB2GSink ( ) ; }",0
public void HYRT0GLSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__database_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },1
public void TQ5I207G2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__database_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void SOCIME8B2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__database_format_68a . data ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 5ECRNT3 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void E3FT1WT ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 5AEYZD0G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_format_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void 13OMF78B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_format_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void MR8WXE9Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },1
public void Z1IN0J0G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void ENXWCMXB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void RFFZAHS ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_format_72b ( ) ) . badSink ( dataVector ) ; }",1
public void OCFS2QG ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ZFP8A9MG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_format_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void FBB528ZB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_format_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void B3M1F09Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void EVTXRDBG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 5T2SVMGB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void JNHWWR0 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_format_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void I3L0V62 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QOOIP6QG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_format_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void 38RWI4TB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_format_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void 96BB882Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void B9E64O0G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void NCF97HMB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void ZWVDIQB ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_format_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void DM1E0N3 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 70PWE6TG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_format_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void WNTPPR8B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_format_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void KE3FG8SSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
"public void LW5BJ7XG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",0
"public void T66KVKJB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void UA6Q27V ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__database_format_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void BSKSRR4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HQKWVX4G2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__database_format_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void JP56WXTB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__database_format_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void FSZLBUPSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void OII73K2G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 4CVDE16B2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void SHIJTKT ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE134_Uncontrolled_Format_String__database_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__database_format_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void R8DOJIY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void U0U7Y1YG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__database_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__database_format_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void CR73YXDB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE134_Uncontrolled_Format_String__database_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__database_format_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void 5C6X6NA ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } if ( data != null ) { System . out . printf ( data ) ; } }",1
public void M0116O7 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void DTL7HB4G2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"private void 8E8TCSMB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 45DTY7U ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void UM531S6G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void RKTVZIFG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void VQQCCDJB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 4PY7ONLB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 1QDYYRI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BVFBINM ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 9K03T6QG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void LWN3C7MG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 9OV9AEBB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void BUMAK0CB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void IEODAJB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void OOZMBJO ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void WFSR88QG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void GFOYRVCG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 7GHW2X6B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void SB65A88B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void THPZ2US ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void N28X14P ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void LH42FDLG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 8F04H2RG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 6Z3AVGJB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void PSZ5U58B2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void AZYKEUG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BG9UHMR ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void ZZW2HRDG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void MPV62EOG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 3D6SDGOB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void NN3FIVMB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void VLP598O ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void A1LIP5E ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 9O6IZK3G2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void UIL8NCUG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void AHV077SB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void ZNPL3OHB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 2RF4J80 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void LO01L0Y ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 1B5Z7BKG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void BSJ6569G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void IQITAHAB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void F91HBE4B2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void S74L3EU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void S7DGA1G ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 0V66SYQG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void YV2FLBZG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void MQYAQEJB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 04WCWZLB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 4JRRNSJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void YOECA3Z ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void FZJUQO5G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void GG7XAHKG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void JSBSRUYB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 51HTHIIB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void E62W90F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 5NM2CMF ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void Q6RL316G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void S7CFHNDG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 9NJMS3UB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 6KJDIQCB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 7BGG9AI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void QUGXQNJ ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",1
"private void JKCS28NG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 4GC3FMMB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 6MIKJ0B ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void PFMO6M8 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 35TXJC8G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void E67XVP3G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WSNY2I3B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void TGN7MA8B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void V268AX6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void R4JTLYB ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void MANS14GG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void M9BRA61G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void DKRO66EB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void Y7S929ZB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void S5A25UU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void JZTT54J ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void 0X64WZLG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void IM340TBG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void RXQNVQMB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
"private void ZULP706B2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void 5GP6ODU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void QMI2EJ3 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",1
"private void 9ZU15XPG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",0
"private void SGAK3R6B2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
public void 64OCUPE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void H8BSY7E ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void TV91YXQG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void B3CV49IB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void KYISCTM ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void ZVQDHOU ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void BNC99G3Sink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },1
public void DEYC7C8 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void K71WZJMB2G1 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void XLLPBNVB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void D6TKYV9B2G2 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void GR5VUU5B2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 8LNXEFKG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void YYWI0PTG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },0
"public void CDN73D8 ( ) throws Throwable { String data = null ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__database_printf_22b ( ) ) . badSink ( data ) ; }",1
public void RC0FOYM ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void W01CYC1B2G1 ( ) throws Throwable { String data = null ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__database_printf_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void 4V4S0EVB2G2 ( ) throws Throwable { String data = null ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__database_printf_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void DG47C81G2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__database_printf_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void LHG5C59Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__database_printf_22a . badPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },1
"public void CRDZNJJB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__database_printf_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"public void 0LIGBSXB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__database_printf_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void T6N8YMXG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__database_printf_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },0
"public void HYPKINU ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",1
public void 6IB7YME ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4UY9PPRG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void S2H0C73B2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
private void B2ZJQ10Sink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
"public void G896LNA ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data ) ; }",1
public void U43T2NZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void HJI1FKOG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"private void XJHJHLRG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void DZD264JB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void N6KURB5B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } goodB2GSink ( data ) ; }",0
"private String 6BMXNR6Source ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
public void MXR2XUO ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
"private String ZCZKC20G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void XUX6RBSG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private String MNTFQENB2GSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",0
"private void YYCUWWXB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void OEQ5QHF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 5JEXRUUSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . printf ( data ) ; } },1
"public void NJ2J1ON ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void 96GG9GT ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void APZ1O64G2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void WFVZMJLG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void 42L08X6B2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void VP8NRZNB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void HGOYBHD ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_51b ( ) ) . badSink ( data ) ; }",1
public void EWGX39A ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void EVD6BDWG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_printf_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void A5MM7UOB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void TNCI1G3Sink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void HWC73T2G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void K3WJFE6B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void YD1UIWQ ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_52b ( ) ) . badSink ( data ) ; }",1
public void IHIODLP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 36WL4VIG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_printf_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void JOEGZGYB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void CQAH3IDSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_52c ( ) ) . badSink ( data ) ; },1
public void QGXW2ADG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 1VJREOTB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_52c ( ) ) . goodB2GSink ( data ) ; },0
public void 3VRCGV2Sink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void ORV2AZBG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void TNJX09SB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void GV89J9Z ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_53b ( ) ) . badSink ( data ) ; }",1
public void LXMFSPT ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1ASWFBJG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_printf_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void SC62PWAB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void VVS8TA4Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_53c ( ) ) . badSink ( data ) ; },1
public void C41N24MG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_53c ( ) ) . goodG2BSink ( data ) ; },0
public void B2FIGARB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_53c ( ) ) . goodB2GSink ( data ) ; },0
public void PYAKDSWSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_53d ( ) ) . badSink ( data ) ; },1
public void W69DVEVG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_53d ( ) ) . goodG2BSink ( data ) ; },0
public void WD32V4TB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_53d ( ) ) . goodB2GSink ( data ) ; },0
public void 9YAT01HSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 7R14OM0G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void E2LHPXSB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 0QRA54H ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_54b ( ) ) . badSink ( data ) ; }",1
public void DBQNLT6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 8F23XO5G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_printf_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void NKZ2EFBB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void 1JU6USNSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_54c ( ) ) . badSink ( data ) ; },1
public void PGUOYKSG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_54c ( ) ) . goodG2BSink ( data ) ; },0
public void KSHEPA3B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_54c ( ) ) . goodB2GSink ( data ) ; },0
public void UNOBTMXSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_54d ( ) ) . badSink ( data ) ; },1
public void E0269J9G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_54d ( ) ) . goodG2BSink ( data ) ; },0
public void DU49DC0B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_54d ( ) ) . goodB2GSink ( data ) ; },0
public void 3LESWCZSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_54e ( ) ) . badSink ( data ) ; },1
public void 6VF3URHG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 4UA64N7B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__database_printf_54e ( ) ) . goodB2GSink ( data ) ; },0
public void 8RWCIUVSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void YWNXPDSG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 9KX0FB4B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void WJWCFBB ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__database_printf_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void Y6WZITZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 50WTHZXG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__database_printf_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void AUCB3TJB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__database_printf_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public String N1GLRD7Source ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public String 6P8RH20G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String OPZC1P0B2GSource ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",0
"public void PVH66W7 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__database_printf_66b ( ) ) . badSink ( dataArray ) ; }",1
public void HQ1CZBV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 375811WG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__database_printf_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void MA2T00FB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__database_printf_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void E1V5BENSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 899XNSAG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 34HG23RB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 609LU5K ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__database_printf_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void L6TSOC2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void T5JXOWXG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__database_printf_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void VEF3FT1B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__database_printf_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void ODVU25VSink ( CWE134_Uncontrolled_Format_String__database_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void UXX0VPAG2BSink ( CWE134_Uncontrolled_Format_String__database_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void F3IFE1RB2GSink ( CWE134_Uncontrolled_Format_String__database_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 9FM18VS ( ) throws Throwable { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_68b ( ) ) . badSink ( ) ; }",1
public void RAZIWDZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ABRUQRMG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_printf_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void GPYXNEZB2G ( ) throws Throwable { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_68b ( ) ) . goodB2GSink ( ) ; }",0
public void 75X10HWSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__database_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void ZC6MUVZG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__database_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void L9ISV12B2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__database_printf_68a . data ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void JYNCP14 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void I7VJZMD ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 3KL4XFLG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__database_printf_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void WK9X2PWB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE134_Uncontrolled_Format_String__database_printf_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void ROVGQPHSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void G0LQ902G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void QAK5H1LB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 1EL9WQX ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_72b ( ) ) . badSink ( dataVector ) ; }",1
public void WD1LS35 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void Z4TFJZHG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void RMYGKR6B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void NH7OMVCSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void YB14YZIG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 0PWL05LB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void A0K4129 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void EU3FPIE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 25XUT7MG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void EW6LSGTB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void 89APLMQSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void NNA2H6CG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void XQU2WRQB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void F2OF0SH ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 7P919T1 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void N9KOX4PG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void MEJ4NMNB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void Y5H4NT7Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
"public void 6DAYHP7G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"public void BOVS7FVB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 362LKBS ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void P07H8OT ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void RRDKEIRG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void MKV6AA9B2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__database_printf_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void EVU58BOSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 16KGM6EG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void LQS9HZZB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 8W10PR7 ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE134_Uncontrolled_Format_String__database_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__database_printf_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void RLO1YP6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void KAY6Y3BG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__database_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__database_printf_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 83TRIEFB2G ( ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE134_Uncontrolled_Format_String__database_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__database_printf_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void IAN4K3D ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
public void QMUFEE4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void H5746ZWG2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . format ( data ) ; } }",0
"private void F5GHLVKB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void GQM7XAV ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void EDIWVQAG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void X4XBVB4G2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void CGHAVC2B2G1 ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void Y217OQ3B2G2 ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 81L0F9J ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 3GP5PFJ ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void NHJKP2NG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void RUV1AW6G2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void WCFM97CB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void C2KWINEB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void JI71MK1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0UUKJJ3 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 99MRVBBG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void ZQIVMRKG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void V5R7QJCB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 6NMRPCEB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void AQQ3L3T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void XO5AZ5J ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void YXPG2R5G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void S0Z841JG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void HV8VM8MB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void UQ5YIU4B2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void L3KV5F7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void GHY8ORB ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void K5FEYFXG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void LO58JTRG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void MHOT5SZB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void C1A2616B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void VKT4XQJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void PG1KSJR ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void ZPD7JQQG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void Y9J88DAG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 4ZDC1EPB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 8ZJRJHCB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void NMCRUUR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void HYC5M3P ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void KX0LF5KG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void XXN1WD0G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 9QJ0ASSB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void J2O0A3AB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void R19O80I ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void UWAUQXL ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void J1Y7O8OG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void VDBTAFKG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 0MVOEXBB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void TOX3SMUB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void UKTHX8S ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void WPN5D9Z ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void UXD6MIHG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 2T7VQ7FG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void D5UJYFCB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void HQCX9VTB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void XJP9IWH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void KUKVX2T ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void FAA3MFJG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 5WMHA8WG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void JJDHR4QB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 18VB6QGB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 593J7WF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void VMCB98M ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",1
"private void P8DTHJ3G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 0DJQE7FB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = System . getenv ( ""ADD"" ) ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void X3OUK76 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 82E9FGA ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void ZKKYLFIG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 5ZKS7VJG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 2DENDHYB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void T4FCLHHB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void P3SGDV6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 7JXMGO7 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void O4WI30JG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void KGVIPIJG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void D76UCW0B2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 2Y2Q5Z1B2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void PTD8BKK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void MQ0MEAO ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void YT9UTMWG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void M2MT6TJG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void UN75522B2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
"private void B0RNJQBB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void VIW0IQS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void FYEIYPA ( ) throws Throwable { String data ; while ( true ) { data = System . getenv ( ""ADD"" ) ; break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",1
"private void 6VUUZDBG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",0
"private void LYGLAQ8B2G ( ) throws Throwable { String data ; while ( true ) { data = System . getenv ( ""ADD"" ) ; break ; } while ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
public void NF2XD4F ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 3JVHPDL ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 7IOBDYRG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 8W1VQKTB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void SKML010 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void OSE057W ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; badPrivate = true ; badSink ( data ) ; }",1
private void Q54NZRLSink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },1
public void PH846UF ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void 99YW1OKB2G1 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void 5BH9H7WB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 9PSJNC0B2G2 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void QQYFC65B2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void Z9VPTNAG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void E5WTLG7G2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },0
"public void NFEHM7W ( ) throws Throwable { String data = null ; data = System . getenv ( ""ADD"" ) ; badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Environment_format_22b ( ) ) . badSink ( data ) ; }",1
public void GCJW1DY ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void ISVG6FHB2G1 ( ) throws Throwable { String data = null ; data = System . getenv ( ""ADD"" ) ; goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__Environment_format_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void UR2XK67B2G2 ( ) throws Throwable { String data = null ; data = System . getenv ( ""ADD"" ) ; goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Environment_format_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void AI609GYG2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Environment_format_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void 9Q9Q4SISink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Environment_format_22a . badPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },1
"public void F0X40XLB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Environment_format_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"public void I8T8BI7B2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Environment_format_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void FQZI7G7G2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Environment_format_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },0
"public void UY51VMU ( ) throws Throwable { String dataCopy ; { String data ; data = System . getenv ( ""ADD"" ) ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",1
public void 8RPE5WN ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 7Y30BLRG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void Q9PM2OTB2G ( ) throws Throwable { String dataCopy ; { String data ; data = System . getenv ( ""ADD"" ) ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
private void FCIVU99Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
"public void B3SBCSA ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; badSink ( data ) ; }",1
public void 9VAV901 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 74F34RFG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"private void 98UAIYCG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void A85750OB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void CCC8723B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; goodB2GSink ( data ) ; }",0
"private String WLILBE7Source ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
public void G2GK6VW ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
"private String TXHVX23G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void 91YVKDHG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private String 12DSA52B2GSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",0
"private void 2TNOBPGB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void 1RFRYAT ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void N3T6O2DSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . format ( data ) ; } },1
"public void 5GOLHQK ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; dataBad = data ; badSink ( ) ; }",1
public void ANA6YD5 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void YAYM1GPG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void LSC2T87G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void YAA62CEB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void BH1AS20B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void JZRFYO5 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_51b ( ) ) . badSink ( data ) ; }",1
public void JIDP9SK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void EVW83PIG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_format_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void V7TYNC8B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void UDLATM5Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void J62CPCOG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void BSXETOCB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void XDF82WU ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_52b ( ) ) . badSink ( data ) ; }",1
public void K2EB3YF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void EBY41TKG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_format_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void XHWBEAOB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void PCUFJVSSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_52c ( ) ) . badSink ( data ) ; },1
public void T2AKQ9RG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_52c ( ) ) . goodG2BSink ( data ) ; },0
public void S500WJOB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_52c ( ) ) . goodB2GSink ( data ) ; },0
public void D7XCKE4Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void TX7H96TG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void RUJKS83B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void PEBG1JJ ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_53b ( ) ) . badSink ( data ) ; }",1
public void O8OGN1E ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 9VOOYADG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_format_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void VKNVJ5QB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void F0VHCKQSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_53c ( ) ) . badSink ( data ) ; },1
public void HSBOMFOG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_53c ( ) ) . goodG2BSink ( data ) ; },0
public void RI63L87B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_53c ( ) ) . goodB2GSink ( data ) ; },0
public void P36X24BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_53d ( ) ) . badSink ( data ) ; },1
public void RT5GY9LG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_53d ( ) ) . goodG2BSink ( data ) ; },0
public void Z4JYO93B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_53d ( ) ) . goodB2GSink ( data ) ; },0
public void IDKVIHNSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void G88W2QIG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 8KBTNCMB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void JS5FNBN ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_54b ( ) ) . badSink ( data ) ; }",1
public void A3VO5T4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void N040870G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_format_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void E2ULLJTB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void SXPOJSQSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_54c ( ) ) . badSink ( data ) ; },1
public void AYMBH4QG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_54c ( ) ) . goodG2BSink ( data ) ; },0
public void DCBZZELB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_54c ( ) ) . goodB2GSink ( data ) ; },0
public void BY4S9QWSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_54d ( ) ) . badSink ( data ) ; },1
public void 280MZT2G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_54d ( ) ) . goodG2BSink ( data ) ; },0
public void C9561P5B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_54d ( ) ) . goodB2GSink ( data ) ; },0
public void 3ZHCTP8Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_54e ( ) ) . badSink ( data ) ; },1
public void 6AY6FDTG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 2861C04B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_format_54e ( ) ) . goodB2GSink ( data ) ; },0
public void 4B6CVIRSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void CS1W5JMG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 1ZEOKRTB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void A8246C2 ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Environment_format_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void M95G4P8 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void I9V988BG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Environment_format_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void IGAC93XB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Environment_format_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public String QSAXFSDSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
"public String Q0BVJ1QG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String PJ7ZQQPB2GSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",0
"public void GK0V6CJ ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Environment_format_66b ( ) ) . badSink ( dataArray ) ; }",1
public void UZ3VDG4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 768BMVRG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Environment_format_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void CWNGRLHB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Environment_format_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void O7M50YESink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 55SI6B7G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 04Y1T9MB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void A2E0T9E ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Environment_format_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 5BYLJC3 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void YF4WZ1AG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Environment_format_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void PVZZ9MTB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Environment_format_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void HNSNBIKSink ( CWE134_Uncontrolled_Format_String__Environment_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 5V9H9MPG2BSink ( CWE134_Uncontrolled_Format_String__Environment_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void P2B7MXRB2GSink ( CWE134_Uncontrolled_Format_String__Environment_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void WANAV9O ( ) throws Throwable { data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_68b ( ) ) . badSink ( ) ; }",1
public void 6JI0CYB ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void O0JMT5FG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_format_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void T68EJCIB2G ( ) throws Throwable { data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_68b ( ) ) . goodB2GSink ( ) ; }",0
public void AIZXYZKSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Environment_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },1
public void M9LEF2JG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Environment_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void BT638NAB2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Environment_format_68a . data ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void LFUGDM5 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void QWG9L30 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void P2FER18G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_format_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void E1XBH4ZB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void CZO0JJWSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 8H1P80AG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void DS73N62B2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void VYI68LA ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_72b ( ) ) . badSink ( dataVector ) ; }",1
public void CQHU8LL ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void VD6AS5RG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void DQWA7TBB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void PYWMW7USink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 9W67AI8G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void HU9PNV1B2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void VK0FV3O ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 6I3H4A4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QNHRBLEG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void JH6D54TB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void CBGYLI5Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void T5FHJM8G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void JUC6KL0B2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 4686TZK ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void E0WWRED ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HX5POO7G2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void OYRYGO1B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void HOEQ7L4Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
"public void 8MMX4SWG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",0
"public void 5WS9Y90B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 8D687R0 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void P8NTL88 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void MQDO79WG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void JDEFJH1B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Environment_format_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void EMUQ7MYSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 2SGFG4FG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void ACJCPYSB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void VGJYV18 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; CWE134_Uncontrolled_Format_String__Environment_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__Environment_format_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void F4PIKFG ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void FCSMIZ9G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__Environment_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__Environment_format_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void UTPAYGMB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; CWE134_Uncontrolled_Format_String__Environment_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__Environment_format_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void LS03JTM ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
public void KOSJ6YE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void JW76870G2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"private void O2QDRO0B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void C6T4ON7 ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 2RG7W4MG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void TDC90GKG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void J5D3KKHB2G1 ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 760PQG2B2G2 ( ) throws Throwable { String data ; if ( true ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 01XNUNF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DF1OBGW ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void R5I3QWJG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WT3RKHIG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 4MPUFTWB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void TKZNCQSB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 8C7L5T0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void KKSTGY2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void Q37I32QG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void RM1BMSFG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void EVP10Y1B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void SQR2P9XB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void L0GMX33 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void UL3VTN6 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void GVRC1HNG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void T0WK2Y8G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void DM3KNQJB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 0E5AHGPB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void EREDEIN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void D2EPG3D ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void JDN8WY4G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void IIUWTXVG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void ILLOPRTB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void GK5PUOYB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void J5J78AQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0LM1DPA ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 7CI105BG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void NRN0G8UG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void LVKMLMXB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void XT13XHJB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void OG311KF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 4G8H4A3 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void RUBY8SUG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void GVV71Y2G2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void D3EOF5OB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void DMFEXQPB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void WTFUNYR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void S405I0X ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void YSTO999G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void SYICGEXG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 8F7CXCOB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void XUCM2X2B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void KN6YIFJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 93KYXPM ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void NC9N0ROG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void COKJ1D2G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void ZMVHVUJB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void S7PSG56B2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void Q8NHDR7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 350G42D ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void EJIBRCFG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void KUU28W4G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void LBKPI36B2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void TP1MFWCB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void JRX241A ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void S2A00CZ ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",1
"private void SXZH8BSG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void DNS2ECLB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getenv ( ""ADD"" ) ; } else { data = System . getenv ( ""ADD"" ) ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 4B8B09P ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void D5EDFCX ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void HPEOWMKG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void M4XCPUEG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void L2SNKO5B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void A2S3XIEB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void PVMJS4E ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void WBGUJKV ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void X3QRE25G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 4RK63D9G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void CAG5MVSB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 4JZTNQSB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getenv ( ""ADD"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void AWZS1V9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DADHJDY ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void J74A6GPG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 3ZYVYXMG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 1IORPUGB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
"private void 11965WLB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getenv ( ""ADD"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void O2D4PO0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void X7GZR7Z ( ) throws Throwable { String data ; while ( true ) { data = System . getenv ( ""ADD"" ) ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",1
"private void SKNIBFWG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",0
"private void 62FIO59B2G ( ) throws Throwable { String data ; while ( true ) { data = System . getenv ( ""ADD"" ) ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
public void BL8BIMM ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void LK30T6C ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 2S9X1A8G2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WUY15NJB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void J3TTLLZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 25T2KRL ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; badPrivate = true ; badSink ( data ) ; }",1
private void TRED3Z7Sink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },1
public void ZCUXWTZ ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void RJC4MWDB2G1 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void HIS0VGJB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void D0KPFEOB2G2 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void 6U2FQS1B2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void X4YMX1BG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void 23EV486G2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },0
"public void OV93716 ( ) throws Throwable { String data = null ; data = System . getenv ( ""ADD"" ) ; badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_22b ( ) ) . badSink ( data ) ; }",1
public void WBZLQ8Q ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void NS3CP57B2G1 ( ) throws Throwable { String data = null ; data = System . getenv ( ""ADD"" ) ; goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void R8SGNB5B2G2 ( ) throws Throwable { String data = null ; data = System . getenv ( ""ADD"" ) ; goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void NE4ZRA7G2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void EMXWCXGSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Environment_printf_22a . badPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },1
"public void ZL7A3SNB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Environment_printf_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"public void 2BBI23GB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Environment_printf_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void 3GGFZMCG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Environment_printf_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },0
"public void JP7GVJ5 ( ) throws Throwable { String dataCopy ; { String data ; data = System . getenv ( ""ADD"" ) ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",1
public void ENYI9LZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ENDS6A7G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void A2Z0SI6B2G ( ) throws Throwable { String dataCopy ; { String data ; data = System . getenv ( ""ADD"" ) ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
private void WMBD9T3Sink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
"public void 3765B9H ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; badSink ( data ) ; }",1
public void V3B0IDS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void XNKBHQLG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"private void TC60X8JG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void 9OACVQEB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void GKA97HUB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; goodB2GSink ( data ) ; }",0
"private String DAX5KEYSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
public void ZR4XL7H ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
"private String 5F62N8EG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void QBORQ86G2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private String UQNJW31B2GSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",0
"private void 1FIB33EB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void KFJNDD8 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 3YCEOIMSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . printf ( data ) ; } },1
"public void 9GHIXBA ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; dataBad = data ; badSink ( ) ; }",1
public void PIFWKMY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void WM331RZG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void LIMDKA2G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void TRXJQWVB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void 02UFKY9B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void KDYZF59 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_51b ( ) ) . badSink ( data ) ; }",1
public void 46NWO8J ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 2BWQ6R8G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void AWFLHRHB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void 5QU94XESink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void GSOZLE3G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 1JVMCZRB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void CJVX62D ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_52b ( ) ) . badSink ( data ) ; }",1
public void IMY59XN ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void GWXEJ0VG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void WUP9DKAB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void 6ALIHCASink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_52c ( ) ) . badSink ( data ) ; },1
public void I6KZUERG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_52c ( ) ) . goodG2BSink ( data ) ; },0
public void XDEIFCYB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_52c ( ) ) . goodB2GSink ( data ) ; },0
public void GHYMW8TSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void Y9UYFPPG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void ZZH5SL4B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 07LIAE2 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_53b ( ) ) . badSink ( data ) ; }",1
public void DRDJ8K7 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void LYRIW88G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void QYBY2BPB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void WGJ5VGASink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_53c ( ) ) . badSink ( data ) ; },1
public void SP5AJT1G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_53c ( ) ) . goodG2BSink ( data ) ; },0
public void U543I5FB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_53c ( ) ) . goodB2GSink ( data ) ; },0
public void JDC22H1Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_53d ( ) ) . badSink ( data ) ; },1
public void H7ITXKKG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_53d ( ) ) . goodG2BSink ( data ) ; },0
public void BBVYEY4B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_53d ( ) ) . goodB2GSink ( data ) ; },0
public void VTC5DIUSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 2Q6WIXXG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 3HX893ZB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void HKL2B5W ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_54b ( ) ) . badSink ( data ) ; }",1
public void FRZD7NA ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BN4S48HG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void VCKBX31B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void RE8TDKJSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_54c ( ) ) . badSink ( data ) ; },1
public void AGBZOEPG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 1TL3LJKB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_54c ( ) ) . goodB2GSink ( data ) ; },0
public void 3BAYMGTSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_54d ( ) ) . badSink ( data ) ; },1
public void MCJLCK7G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 0LQSZ0RB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_54d ( ) ) . goodB2GSink ( data ) ; },0
public void DP8U6ZQSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_54e ( ) ) . badSink ( data ) ; },1
public void KOFFIFAG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_54e ( ) ) . goodG2BSink ( data ) ; },0
public void M5MZKE9B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Environment_printf_54e ( ) ) . goodB2GSink ( data ) ; },0
public void 3DVTYWDSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void CYZ48I0G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void XKV388VB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void 8H6CNAR ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Environment_printf_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void CM68NJ6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 249N47FG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Environment_printf_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void DVIG1HUB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Environment_printf_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public String 4KEDSAPSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",1
"public String PA4IQ67G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String R85S6M3B2GSource ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; return data ; }",0
"public void XNHM3Z2 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_66b ( ) ) . badSink ( dataArray ) ; }",1
public void PHGH205 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void WX1UNZBG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void 1SKEGFEB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void JPF1QB3Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void IW174TRG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void L3YXXLBB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void M35JLYI ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 77EN0XC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void N1739DCG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void TJRU2GIB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void ZPK7JVJSink ( CWE134_Uncontrolled_Format_String__Environment_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void IG04LIZG2BSink ( CWE134_Uncontrolled_Format_String__Environment_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 5KKF68FB2GSink ( CWE134_Uncontrolled_Format_String__Environment_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void H7ACOX6 ( ) throws Throwable { data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_68b ( ) ) . badSink ( ) ; }",1
public void LQJDX7P ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 9LHC7DJG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void SJBNNP2B2G ( ) throws Throwable { data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_68b ( ) ) . goodB2GSink ( ) ; }",0
public void VCYFGNQSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Environment_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void LJCOTDIG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Environment_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void JJIW19KB2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Environment_printf_68a . data ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void MSNAWH1 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void AIFRBNR ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void EKSG9PAG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void W4ZQBNRB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void 2X1445YSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void TMCYFH3G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void OOYRN1QB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void DNAB2CR ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_72b ( ) ) . badSink ( dataVector ) ; }",1
public void ICV1216 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 3F2DPGZG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void 5Z08XH1B2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void 3JT9AKRSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void PNC8MY6G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 0CC7WV4B2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 2ZHY08A ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void M4FXGRP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4A5RIUNG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void 2R3MILUB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void WDZ4TN2Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void PWATK4TG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void COOAXWBB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 2CN091W ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void O5GA3SZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void B6US91RG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void KJ64RSZB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void XS8T8T0Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
"public void 4EN5T54G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"public void ITXP07DB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void EWA7RY6 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 3CCSTW1 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BFANXHNG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void VB7GY2IB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Environment_printf_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void AC4GB31Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void Z1RNOU4G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 2PANXFYB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void G2T54G9 ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; CWE134_Uncontrolled_Format_String__Environment_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__Environment_printf_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void P8HBHE2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void WPH1V26G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__Environment_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__Environment_printf_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void OZ0FURRB2G ( ) throws Throwable { String data ; data = System . getenv ( ""ADD"" ) ; CWE134_Uncontrolled_Format_String__Environment_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__Environment_printf_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void ZIYLA1F ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } if ( data != null ) { System . out . format ( data ) ; } }",1
public void CAFMAJ8 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 3UPEU2PG2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . format ( data ) ; } }",0
"private void XHCKRWSB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void P48TOI6 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void OJXM2SCG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void NXS6TLIG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void P6GH5OLB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void E6IDOF6B2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void IO5H0LJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void CB6ERX4 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void DWTT4RGG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void RBOLPYEG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 12TTZJ5B2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 7LXV9QOB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 2A06953 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 5PYWP8S ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void V4R8NX6G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 19S4QC4G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void QSYTEH4B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void G1MALPRB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void YD4VGDF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void LMTXB5N ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void BENMWXNG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void YX53FX8G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void A1QCHNCB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void BINCCSOB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void ZO230E8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 4TFEWCW ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 3HRPTECG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void KUKIUVYG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void IBE1G4HB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void BPCH27MB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void Q8J3V0F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void CBVKXHX ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void AJ2BYT4G2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void HP4VROMG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 1WX16GJB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void JG1C3FBB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 8JD6I49 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void IBZUACI ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void C7Y7LJDG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void SIU61DSG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void LRT5EAYB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void XF2OYF8B2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void XG22470 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void KGTI0P7 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void UPRC2JUG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void G2SBE99G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void JXQKO5ZB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void P286E8DB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void VY8JHD9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void PYNEGL1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 0FACA3WG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void FVA2HF9G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void C8TNI6OB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 2HXDNSDB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void LNYU9LA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0P8MOW5 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void WAB6VVPG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 819BH46G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void XNQAA9ZB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void S4JMVTLB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void YHB2I6X ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void U2F5OCR ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",1
"private void Y3RKIMRG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void APT6NP0B2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void ZY2CY1O ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void Q83XC70 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void E03VYKCG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void NCPLDCZG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void DG1I5ATB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 9ZI7M4WB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void GXPHMA0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 57V3EEH ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 7HUTEIKG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 1F8QT3VG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void LJ6J6R9B2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void YBA6HL5B2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void JLYT8BJ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 1M0QGVV ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void RGBNASMG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void APST9QFG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void X0UCAR8B2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
"private void B6F6E3QB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void 491K4DS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void JOE85SJ ( ) throws Throwable { String data ; while ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",1
"private void T4P7R3QG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",0
"private void VXCWYPLB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
public void XZ5K26L ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 9TGHC6E ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void ZVXZRGSG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void O5ZHOSQB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void BFHTMG9 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void Y68XBBZ ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void 22WU8CWSink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },1
public void PDL2H9R ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void FEQ95G4B2G1 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void CLPFNA6B2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 64KU5H0B2G2 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void LFKOKPLB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 483XAIVG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void I9Q1ST4G2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },0
"public void CI9H7NE ( ) throws Throwable { String data = null ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__File_format_22b ( ) ) . badSink ( data ) ; }",1
public void 8AIHU6L ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void DNV7F3UB2G1 ( ) throws Throwable { String data = null ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__File_format_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void UT1ZUU0B2G2 ( ) throws Throwable { String data = null ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__File_format_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void JVIHOGIG2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__File_format_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void TNBRZXISink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__File_format_22a . badPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },1
"public void NIQTYT8B2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__File_format_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"public void N71EFTTB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__File_format_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void MC0OETHG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__File_format_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },0
"public void YGVC68H ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",1
public void S1M0CTP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 78RHW03G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void RNEMVRCB2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
private void D4KW5DNSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
"public void R9A5RBQ ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 4CB3JFS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void ZUT0I4DG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"private void TM1WHEVG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void ET59KXYB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void E9BWP5NB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String ZRS0C6GSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void 4RMWUKH ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
"private String K2IUXLOG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void 33LNIIQG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private String NG8MUNSB2GSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"private void P9I9QM3B2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void ARN2CFQ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void OEMRD1LSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . format ( data ) ; } },1
"public void CNAOLAU ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void A1M81YD ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void FAWPFOQG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void VV1IWGOG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void 5CV4S0EB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void 9BNMSVZB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void 8O2MO5Y ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_51b ( ) ) . badSink ( data ) ; }",1
public void 6ZRBWS4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void J3U1DD1G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_format_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void G6WGTOGB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void RLUMFO7Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void 9H5TQBAG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 6KV043SB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 7RCVZWJ ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_52b ( ) ) . badSink ( data ) ; }",1
public void 0V2RYP9 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void JYA5725G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_format_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 6YV3765B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void OY11XARSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_52c ( ) ) . badSink ( data ) ; },1
public void Y5A11FNG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_52c ( ) ) . goodG2BSink ( data ) ; },0
public void GXCDKU2B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_52c ( ) ) . goodB2GSink ( data ) ; },0
public void FZ5EU6FSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void 3W6U8AEG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void VLZEA57B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 6BXSJ5N ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_53b ( ) ) . badSink ( data ) ; }",1
public void 7FOQRR9 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void TKMG6T6G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_format_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void BEXQCAHB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void 8VP1RR2Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_53c ( ) ) . badSink ( data ) ; },1
public void JZU8X6ZG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 499RY1BB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_53c ( ) ) . goodB2GSink ( data ) ; },0
public void KBMVUT3Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_53d ( ) ) . badSink ( data ) ; },1
public void EM4MRKSG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 0J2FSBHB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_53d ( ) ) . goodB2GSink ( data ) ; },0
public void GI9ZOSOSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void FY2FY6OG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void WZA1OOIB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void D8T6Z2H ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_54b ( ) ) . badSink ( data ) ; }",1
public void R4XIN09 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4QT2EGCG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_format_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 77WEB86B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void XUVO0UFSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_54c ( ) ) . badSink ( data ) ; },1
public void AF1WG5IG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_54c ( ) ) . goodG2BSink ( data ) ; },0
public void G28W3LUB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_54c ( ) ) . goodB2GSink ( data ) ; },0
public void WJAZCXESink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_54d ( ) ) . badSink ( data ) ; },1
public void J3GY319G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_54d ( ) ) . goodG2BSink ( data ) ; },0
public void Y6I35STB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_54d ( ) ) . goodB2GSink ( data ) ; },0
public void FCEEXB7Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_54e ( ) ) . badSink ( data ) ; },1
public void 64KE0B9G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 28VUHE4B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_format_54e ( ) ) . goodB2GSink ( data ) ; },0
public void BGLH2IVSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void 0KH66N2G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void XBA3ERAB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void 89RTRKQ ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__File_format_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 0DAIR4L ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void E3U1C51G2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__File_format_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void FW791OGB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__File_format_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public String 74B5UIHSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String 68RBQ7NG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String 3F2051ZB2GSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"public void 1RSWU4W ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__File_format_66b ( ) ) . badSink ( dataArray ) ; }",1
public void WPPHE9P ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 0UE03TYG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__File_format_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void X5XYZZJB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__File_format_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void U5HS10BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },1
public void RDAJ7OWG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void GCKP2V0B2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void R0M24NU ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__File_format_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void C9TIUDI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void CLG5G0IG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__File_format_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void DX4QQVIB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__File_format_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void H2GYYTFSink ( CWE134_Uncontrolled_Format_String__File_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },1
public void LI73QZ4G2BSink ( CWE134_Uncontrolled_Format_String__File_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void WOCRPA7B2GSink ( CWE134_Uncontrolled_Format_String__File_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void J0JBSTO ( ) throws Throwable { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_68b ( ) ) . badSink ( ) ; }",1
public void WE1TMED ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void WUBWH5ZG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_format_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void CG8MTY1B2G ( ) throws Throwable { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_68b ( ) ) . goodB2GSink ( ) ; }",0
public void B3V7YWOSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__File_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },1
public void YVO6IA2G2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__File_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void KGO3F4KB2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__File_format_68a . data ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void N26GN26 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void V21O1BO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void O5RNY8SG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_format_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void FBGNWBJB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_format_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void FI3X6XNSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },1
public void U4HMQAQG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void OP3DATDB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 00SIERZ ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_format_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 07TBR8X ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void O579HB4G2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_format_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void 47QIL2QB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_format_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void 3JJCGOASink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void UIIUB60G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void VJJPYGYB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 3M3IUJ4 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_format_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void O72Z2RO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void TAUGADJG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_format_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void LOP9I5DB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_format_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void LZDPGTLSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void R7G0NKGG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 4Y0GEE0B2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void KNYHU98 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_format_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void T32QTOZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void SUBTN8SG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_format_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void NCJUDGNB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_format_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void 7V3WPRGSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
"public void PXIHZVEG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",0
"public void 1X5FF56B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 6Y85XYH ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__File_format_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void ZDF6HGO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void CUO3102G2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__File_format_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void HCX72F7B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__File_format_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void RWY9E7OSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void L3M5TIHG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void BZG9CTRB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void JE07HVH ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__File_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__File_format_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 26UL56U ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void V5ZITNRG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__File_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__File_format_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 6T8RIFGB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__File_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__File_format_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void DIY2GBU ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } if ( data != null ) { System . out . printf ( data ) ; } }",1
public void QOG3ECB ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 9B7362OG2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"private void AV7OCVLB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void XUSXJ7S ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void RUG5Y39G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void F1GNQHTG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 7DA0228B2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void WWTGYX1B2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void KZFUXZ1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RUYEJGT ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void NBCNJLZG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void V05EQG6G2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void TNZAUHSB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 2UJ6Z5ZB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void X3E8ET0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void PGWCXZD ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void JX8O7VOG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void YP44DOCG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 9E2KJL4B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void EJX6C41B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void WMC8TIM ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RP5EX9F ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 274Q0K0G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void V38GDI1G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void I80G4BDB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 0CG3KYRB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void F7SUG2D ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void TLPTCB1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 3WFHAFBG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void O238KDGG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 3F8BOCNB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void VC3N44CB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void LIY03GL ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void SI6M7YY ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void D4W2Q72G2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void O1O9TJJG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void KFCX1EDB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void XEY382UB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void L5HMKH1 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void VABAOCP ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void PDUQ95AG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void PL8Z75GG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void GORBVLDB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void UB46K6GB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 2CXO61W ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 3WZCEUN ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void A4PU8KSG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void DB5CUX3G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void BXUHPAMB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void CZWUCGSB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void MA0XH2F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 5CDU9R9 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 4H5RPALG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void GTSUZC8G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void L2OTG83B2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void F372GBSB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 8EBHZ77 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BR6LLYX ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 6IEO0JUG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void MUCV63QG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 9E68YVIB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 2NISJRYB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void ZL3NZ4P ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 4624GK2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",1
"private void P0R1Y14G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WQICWJFB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 1WG4OV3 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void KZ5GVPK ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void FQP3JVTG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 46I8MP2G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void UDCOQ0NB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void TCAE479B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void MP01YMQ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RW0INAP ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 1C8R561G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void YV9MZRLG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 5I130JWB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 8UYG3N7B2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void MN3C1IT ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void LSY7VGS ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void 16OGTVOG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 7H2ECLOG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 1VMQ74GB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
"private void MXZM2C7B2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void 0AY98WZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void X9K7YY5 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",1
"private void LD8C9HPG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",0
"private void R1A6SL3B2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
public void 9HKASGA ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void HUDAX6W ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void GBWGDSPG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void QYD6W9HB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void MLOICKQ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void YOZRDET ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void X9J90D8Sink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },1
public void CPL3C4H ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void TOBA35BB2G1 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void TAG8FXZB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void A0ZYQ8WB2G2 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void GSKS3LSB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 7YQY4SFG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void XY4FG2KG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },0
"public void W6ID57N ( ) throws Throwable { String data = null ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__File_printf_22b ( ) ) . badSink ( data ) ; }",1
public void I3AK5F1 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void RT5ZF7IB2G1 ( ) throws Throwable { String data = null ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__File_printf_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void LXUM8LVB2G2 ( ) throws Throwable { String data = null ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__File_printf_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void GFQMRL4G2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__File_printf_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void P1HDOY5Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__File_printf_22a . badPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },1
"public void JVNIJB2B2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__File_printf_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"public void 5IRT58WB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__File_printf_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void LWNMQPZG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__File_printf_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },0
"public void U4SZC4I ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",1
public void R4I8YLL ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void RZ4E245G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 3VBOMSUB2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
private void C2DG3R2Sink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
"public void IKJMAMK ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void Y18P9R7 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void OA5OAEPG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"private void 8X9NHX0G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void 3TE9FSBB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void OIE3YDQB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String MN8CTA2Source ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void L1C7J63 ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
"private String EA3NS7NG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void QS6VXOMG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private String 8GFZU8RB2GSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"private void 6BJRCUDB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void JK8Y0GY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void NVW551WSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . printf ( data ) ; } },1
"public void O5KANWQ ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void HMPT8FG ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 351VHGKG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void EQNDH7NG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void H1MXL27B2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void 7ORYQ20B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void VGXU5G1 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_51b ( ) ) . badSink ( data ) ; }",1
public void I9T6M6J ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BJOSRHMG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_printf_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 5I6SS2RB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void 6ZWG3OMSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void DUN4JVQG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void V933K0DB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void EE2H4BL ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_52b ( ) ) . badSink ( data ) ; }",1
public void 324N69S ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1Q1BBGAG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_printf_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 4S0BXF2B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void GML3INQSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_52c ( ) ) . badSink ( data ) ; },1
public void Q962M02G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_52c ( ) ) . goodG2BSink ( data ) ; },0
public void LX1WRLFB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_52c ( ) ) . goodB2GSink ( data ) ; },0
public void MKZJAPJSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void CM9JTJBG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void BF5GSMZB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 1AY7JB5 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_53b ( ) ) . badSink ( data ) ; }",1
public void 56GITRC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void O4Q8S7KG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_printf_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void XI4QPNJB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void P2QKMSQSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_53c ( ) ) . badSink ( data ) ; },1
public void DR3HRLTG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_53c ( ) ) . goodG2BSink ( data ) ; },0
public void MS20PD2B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_53c ( ) ) . goodB2GSink ( data ) ; },0
public void 1KETFSZSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_53d ( ) ) . badSink ( data ) ; },1
public void BSS0GWQG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_53d ( ) ) . goodG2BSink ( data ) ; },0
public void MF09B9KB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_53d ( ) ) . goodB2GSink ( data ) ; },0
public void IAMLV7YSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 92W93QBG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void EW3W0NDB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void Y1O02DV ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_54b ( ) ) . badSink ( data ) ; }",1
public void 5HDCFVB ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PSUH20DG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_printf_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void F90KFYFB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void E839PLQSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_54c ( ) ) . badSink ( data ) ; },1
public void HNJMVU8G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_54c ( ) ) . goodG2BSink ( data ) ; },0
public void B508S6XB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_54c ( ) ) . goodB2GSink ( data ) ; },0
public void NF29QFMSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_54d ( ) ) . badSink ( data ) ; },1
public void 2NJ8B6BG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_54d ( ) ) . goodG2BSink ( data ) ; },0
public void EUEPEQIB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_54d ( ) ) . goodB2GSink ( data ) ; },0
public void IU82N7TSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_54e ( ) ) . badSink ( data ) ; },1
public void XOEM2H3G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_54e ( ) ) . goodG2BSink ( data ) ; },0
public void EPPR3VSB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__File_printf_54e ( ) ) . goodB2GSink ( data ) ; },0
public void V7NKGNESink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void W3F3IGAG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 4YS91UXB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void 01SEYVB ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__File_printf_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 3R2LD5I ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void D0HPY0WG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__File_printf_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void 17Z9GJFB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__File_printf_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public String 2XJP5XASource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String TMYKTFTG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String O2W7U27B2GSource ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"public void WW9HK21 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__File_printf_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 07YAA6L ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4D86HD2G2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__File_printf_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void 3VLLSR4B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__File_printf_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void IJA543YSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void M30QH2WG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 4644ZQSB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 4N7VFBX ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__File_printf_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void JM1DCRY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4GLHU1BG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__File_printf_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void T598FZ4B2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__File_printf_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void Y69H2KTSink ( CWE134_Uncontrolled_Format_String__File_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void J8REC9MG2BSink ( CWE134_Uncontrolled_Format_String__File_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void ULOVX2XB2GSink ( CWE134_Uncontrolled_Format_String__File_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void T3L0FWO ( ) throws Throwable { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_68b ( ) ) . badSink ( ) ; }",1
public void 1QKH10B ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BN1J28PG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_printf_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void N7XRJ02B2G ( ) throws Throwable { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_68b ( ) ) . goodB2GSink ( ) ; }",0
public void 50W6CS6Sink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__File_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void PZ9POZ0G2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__File_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void FK9EX40B2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__File_printf_68a . data ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void GSCQPDD ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void JQFUDT6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HSDY28XG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__File_printf_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void PLXRLYKB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__File_printf_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void OC7TCJZSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 8O73JC2G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void YVKLHXRB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 3QF656Q ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_72b ( ) ) . badSink ( dataVector ) ; }",1
public void SO8FC74 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 8UWQ1JCG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void ECAOSJWB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void 76XLWFQSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 4D6OA16G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void U54KRGCB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void CM5279I ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void JV3FPKV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void M6SXLDNG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void 6OWRIJAB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void WVZHX4NSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 6A1IZAUG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 4X4YAVWB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 6GZWRQX ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 1FJMM55 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 3EML4VBG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void Y8AU1TNB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void MDI0B3WSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
"public void CZ1PVH9G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"public void QDW3IV4B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 2X1ADO1 ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void BL7D7BZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 223V7SZG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void 4IERUAGB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__File_printf_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void JCDY74ISink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void IU581JRG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void S4CDXM2B2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 7MQCQ2E ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__File_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__File_printf_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void YU3MGUK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QEHO5MOG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__File_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__File_printf_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 3BWZR7YB2G ( ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__File_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__File_printf_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void MADAWD8 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } if ( data != null ) { System . out . format ( data ) ; } }",1
public void 44HDDCB ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void A0ZJJYHG2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . format ( data ) ; } }",0
"private void 99MT0U3B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void P62JME7 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void WMBJJYBG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void AKGCKCZG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 8NF1LKYB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void QVW0WDZB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void RO2MMJW ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void OKQZMZO ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void OOJ2QV9G2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void OSVX2XHG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 4DMAFFWB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 1YVI3UGB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 5AH8UM4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void ANTENIW ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 4IK0CG2G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void SNNCGG8G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void BEX20XNB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void TAG7UH2B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 1WLBR78 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 1X4V45Z ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void YAHO3NIG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void YVS5RBVG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void GF8WB56B2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void SPPA1D0B2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 1L788F8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void M39Q4EJ ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void HQBE6VOG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void TPNE9KDG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 7ELT0OSB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void RRDJ058B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void H52MED5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BPW7YR3 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void AAF5OPVG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void KVJKUHWG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void X2RUU25B2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void YHXHCLTB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void XHE9BJ0 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void KSQ5J72 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 54F1WR5G2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void BKM2XLQG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void DM94NW9B2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void UGGC3LNB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void VPRAV36 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 51PJY8Q ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void JLD1BMFG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void R4P854DG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void T0GJGLRB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void EEFPO96B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 3D6UUXK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void ZA3RFR5 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void GE3OA70G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 6MGRXKRG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void IYYIX52B2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void W2XU015B2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void OKLL7HA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DBDT5IM ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 74USOXDG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void ADFCY62G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void E3RERBRB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void JDG36DZB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void N431DHG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void A5YKBK4 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",1
"private void PQ3LDVCG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 1BTOM9BB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void YF00RKG ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 1TKKZL4 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void BG7H3GBG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 9FLF8SUG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 9TOBF58B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 4WU2MVQB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 126DRIV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 67GF4LC ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 2OZFYU1G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 2I4Q3V6G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void NU05A89B2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void TBBR0EYB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void K8P53TG ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void FHA1QZ0 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void MGN36HLG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void IX4TEK6G2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void BP2IUNMB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
"private void 8OV2ZWEB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void 3PGRHSD ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void S0TO3E4 ( ) throws Throwable { String data ; while ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",1
"private void DY1R2P2G2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",0
"private void HTCA5GQB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
public void TQJKVW0 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void OO04OR2 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void TDC0QB2G2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void WIUIOGAB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 41BAEGV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 7WLRNG6 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void 3JF5GH8Sink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },1
public void 4YKU8IF ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void K329OAGB2G1 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void RKV2UGJB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 80W2XA9B2G2 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void 7N9NS4NB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 4EM9U9FG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void 311L4E5G2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },0
"public void 8VW27MX ( ) throws Throwable { String data = null ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_22b ( ) ) . badSink ( data ) ; }",1
public void 8TBDUS2 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void U24AEYUB2G1 ( ) throws Throwable { String data = null ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void RY4E492B2G2 ( ) throws Throwable { String data = null ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void F9BEKJ9G2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void 9VX1KU9Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__listen_tcp_format_22a . badPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },1
"public void LOGWJ8YB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__listen_tcp_format_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"public void R2TXEX8B2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__listen_tcp_format_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void D7ZWW36G2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__listen_tcp_format_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },0
"public void 7HFYVZN ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",1
public void 3T8A9PK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void B83PC36G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 1MC9NBXB2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
private void 2HRY45KSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
"public void RSW70FX ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void VS88XHZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 6BQBI17G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"private void M6SPWE6G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void G3MO544B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void MQ9FU3PB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String 7GFLW7ISource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public void 0TGSPPS ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
"private String 26ECL9SG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void 2CDQ4GBG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private String SDWB6B3B2GSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",0
"private void 2VOV7HYB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void M3ZV7G2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void X9BPEK8Sink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . format ( data ) ; } },1
"public void MKJ09AK ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void D7JBIQI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void IYYNEADG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void HZX9ZO7G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void J1BY4IAB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void GP0VGXYB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void DU77VHU ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_51b ( ) ) . badSink ( data ) ; }",1
public void V30F8ZW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void DU2VA0EG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void L6ORNA5B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void MBWOP2TSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void S5ZOW7SG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 8ARF5TYB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void ZDAT6SA ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_52b ( ) ) . badSink ( data ) ; }",1
public void W3IK9A4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void W4HZJQ0G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void LOFIGIGB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void 3F579JNSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_52c ( ) ) . badSink ( data ) ; },1
public void FCUFM3FG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_52c ( ) ) . goodG2BSink ( data ) ; },0
public void WXBR8ZQB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_52c ( ) ) . goodB2GSink ( data ) ; },0
public void 8VY7200Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void 4ZZZWJ3G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void U4L7QZCB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void SAA0X4G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_53b ( ) ) . badSink ( data ) ; }",1
public void 86G8RK1 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void CFE5TT6G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void B107RMHB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void OSCL8IRSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_53c ( ) ) . badSink ( data ) ; },1
public void AK5JAEWG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_53c ( ) ) . goodG2BSink ( data ) ; },0
public void W1THER7B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_53c ( ) ) . goodB2GSink ( data ) ; },0
public void ZPO4W66Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_53d ( ) ) . badSink ( data ) ; },1
public void HZZE9WXG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 8BWJTDEB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_53d ( ) ) . goodB2GSink ( data ) ; },0
public void PP4AG2RSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void N4B9TAEG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void FL62PF1B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void DD5RBBP ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54b ( ) ) . badSink ( data ) ; }",1
public void UY2IA3T ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PK85RJXG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void LUVXQRIB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void 02C50IJSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54c ( ) ) . badSink ( data ) ; },1
public void M0E05QVG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54c ( ) ) . goodG2BSink ( data ) ; },0
public void EX3JDUDB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54c ( ) ) . goodB2GSink ( data ) ; },0
public void M3V1A4WSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54d ( ) ) . badSink ( data ) ; },1
public void 783IBYAG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54d ( ) ) . goodG2BSink ( data ) ; },0
public void D853QHTB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54d ( ) ) . goodB2GSink ( data ) ; },0
public void EN0T9YGSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54e ( ) ) . badSink ( data ) ; },1
public void O0Z9LYXG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54e ( ) ) . goodG2BSink ( data ) ; },0
public void D5E5I6CB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_54e ( ) ) . goodB2GSink ( data ) ; },0
public void 1NMLMJ1Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void R5Z2ARIG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void WYV5R7HB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void BQCNZ8A ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void KPEUTR7 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void H60PKIWG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void 5AQI9J0B2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public String B70JOZGSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public String ILJF0P9G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String LQ5N1MAB2GSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",0
"public void H72DUWH ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_66b ( ) ) . badSink ( dataArray ) ; }",1
public void FRO6C11 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void D8MD6VRG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void JQFJ1OIB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void 0XJVI02Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },1
public void SEJ0THFG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void PKSIJ4EB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void T2QH7RU ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void QZ6RB9A ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void EJ6WO9GG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void W62JRBQB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void 7KZJITDSink ( CWE134_Uncontrolled_Format_String__listen_tcp_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 0M2MZYQG2BSink ( CWE134_Uncontrolled_Format_String__listen_tcp_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void F477ARPB2GSink ( CWE134_Uncontrolled_Format_String__listen_tcp_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void SF9X8O5 ( ) throws Throwable { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_68b ( ) ) . badSink ( ) ; }",1
public void 3H24VK1 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void TF5LI59G2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void TKHOY7EB2G ( ) throws Throwable { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_68b ( ) ) . goodB2GSink ( ) ; }",0
public void NO3LV0RSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__listen_tcp_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },1
public void IP4RYSMG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__listen_tcp_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void LSRN3F3B2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__listen_tcp_format_68a . data ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void JKFRDLS ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void GPFCN7O ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void UETOHXRG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void PIPTRRUB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void OAW9R1NSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },1
public void QP78L53G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 42QKJELB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void VEVYN7W ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 9CBLYN4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void GLX49FWG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void YN6CEETB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void S6J2YIKSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void DIVXK4EG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void Q8OTZPNB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 9DQWGYL ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 0MQHARS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void OYV4643G2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void 9J1SFFFB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void 2F8XN31Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void DFK349QG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void AZ9E9UVB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void MDNR55A ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void KX89V4I ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 0799WSXG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void WMJHPLSB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void IDYCOSTSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
"public void ADXPV5CG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",0
"public void KYKIPO2B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void JSYC94F ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void V2M3NPZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void A6WZ0SMG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void K0J9MTNB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_format_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void CP60R4USink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 9G3MGYLG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void H8RAFUAB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void JF6K80B ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__listen_tcp_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__listen_tcp_format_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void VFCOGDQ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 1PKW4WGG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__listen_tcp_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__listen_tcp_format_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void TG80I6VB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__listen_tcp_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__listen_tcp_format_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void N18SVZX ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } if ( data != null ) { System . out . printf ( data ) ; } }",1
public void X3626YZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void MMC5IH5G2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"private void 3BR22W2B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void OYU58S1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void JV2OTG9G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void ZHLYTSRG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void Z1RMWXGB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 0H3E9DIB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void AOZ15LK ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void HREA293 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void CX7W30LG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void W335GYIG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void I2JTR8SB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void Q3FPYARB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void HH7XK9I ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void EEA8L96 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 0AM5G6CG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 58FO572G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void BRH4RCOB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void RUNJ9WTB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void NZYGQOV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void T68P67Y ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void J09NDE6G2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void EVZV503G2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 65JFDW5B2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void U00BI5JB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 6VSSXUY ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void M4T4603 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void HFPNCR6G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 8ZWZJG2G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void QOR3C2MB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 2IDRKX0B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void H2NCGT3 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DOHCAXB ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void PMPGUY4G2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void EUCRJNLG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void HLFJOINB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void T9FTWVNB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void VI7RG8N ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void CRPIRJ8 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 8ITGIVCG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 5N3Z8NRG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void I24HRB9B2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void T6XXT7KB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 02Q2AV7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 020GC66 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 76758Y2G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 89PHQWHG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void IQYSK6NB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 7V7V2YFB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void LZAMNIU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 90R2SZ9 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void D9A28PCG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void I31WVXSG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void ZOUZAIUB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void EJ9VPVAB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void SSO6VDE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 17N8Y5Y ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 1EYBJ7OG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 669U3YOG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void PB2KL4JB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void CGRK1I5B2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void F1MRMLS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 5AQQV1N ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",1
"private void RI5PPD3G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void XNUYJJYB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void UQVRLAO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void WAA75L8 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void CEYTVICG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 3FNJIHOG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WV5A6D7B2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void MBFR9ENB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void N2O9A1Z ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 87MDESK ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void E7G3UUFG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void J5OHTXGG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void URCCZQ9B2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void JFP4P7VB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 82NYUB5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void WH3VPC1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void I0TD2AAG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void XC5P7NLG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 1W0K1STB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
"private void 9UCCKUSB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void T7M27P6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0XSRJ0F ( ) throws Throwable { String data ; while ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",1
"private void Z8I8HRXG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",0
"private void TIZLEKHB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
public void H64TXCI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 6PS34WI ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void LHGM8PWG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void YYLKICQB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void SAGUYCH ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void NG2F6FK ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void 24J1PZSSink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },1
public void WNUXEWF ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void B3EGW2DB2G1 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void HQJT73CB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 7WRAWJVB2G2 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void 7ESJZ66B2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void NFBZ8S8G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void PBXXV3OG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },0
"public void 6G2OIGJ ( ) throws Throwable { String data = null ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_22b ( ) ) . badSink ( data ) ; }",1
public void PPZWAEL ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void NJ0PWKOB2G1 ( ) throws Throwable { String data = null ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void T01PFCUB2G2 ( ) throws Throwable { String data = null ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void 4FL018QG2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void WA80P7MSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__listen_tcp_printf_22a . badPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },1
"public void 3420CM1B2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__listen_tcp_printf_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"public void DYMEJOOB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__listen_tcp_printf_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void S3OAW66G2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__listen_tcp_printf_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },0
"public void S5074HC ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",1
public void WFAHD89 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void IRB6T2HG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 4Y8RPA3B2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
private void B17UTUCSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
"public void OCWCOPB ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void N4GXFIS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void CXUCF2ZG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"private void YT29XNDG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void JLSSJAPB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void 59QL5VAB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String NF26ENASource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
public void 7T50V1C ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
"private String PIAVRV7G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void LLK6VNRG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private String TE50RH6B2GSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",0
"private void AM4YYXTB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void FA5J04E ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void K0A2894Sink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . printf ( data ) ; } },1
"public void Q84RVJC ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void FNW8DIG ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 8HBQU53G2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void UHXSDJ3G2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void WSCHT5CB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void U4R1RMGB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void I5E7H3X ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_51b ( ) ) . badSink ( data ) ; }",1
public void XOS8BOI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void O6OIZDYG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void QZWTA3KB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void ZO2XMB5Sink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 7413CRTG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void SW3D841B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void WKU6GZS ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_52b ( ) ) . badSink ( data ) ; }",1
public void LFXHEI6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void K3BSOERG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void LUKQEWPB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void DW0HHZQSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_52c ( ) ) . badSink ( data ) ; },1
public void 1ZQKJAIG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_52c ( ) ) . goodG2BSink ( data ) ; },0
public void PBB9MRXB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_52c ( ) ) . goodB2GSink ( data ) ; },0
public void WYQTVSHSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void JMPPR8OG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void KR17FH6B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 6GPV1UJ ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_53b ( ) ) . badSink ( data ) ; }",1
public void 9XYXECF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void O5VRWL3G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 0LB9IWGB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void 2D2ZREGSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_53c ( ) ) . badSink ( data ) ; },1
public void K3J2RJVG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_53c ( ) ) . goodG2BSink ( data ) ; },0
public void V7SPWRBB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_53c ( ) ) . goodB2GSink ( data ) ; },0
public void CF1JRGPSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_53d ( ) ) . badSink ( data ) ; },1
public void ISKSPFPG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 1WHIR5GB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_53d ( ) ) . goodB2GSink ( data ) ; },0
public void 8T9ZKUISink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void G5AFT5WG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 2O6307IB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void D4LV1HX ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54b ( ) ) . badSink ( data ) ; }",1
public void PRWH0ZP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void K1J8E9YG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void ONB740PB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void 69IAT7JSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54c ( ) ) . badSink ( data ) ; },1
public void DR4R9Y0G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54c ( ) ) . goodG2BSink ( data ) ; },0
public void IHU1LZ6B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54c ( ) ) . goodB2GSink ( data ) ; },0
public void 0WRJKZISink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54d ( ) ) . badSink ( data ) ; },1
public void GY3JHZ0G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54d ( ) ) . goodG2BSink ( data ) ; },0
public void OAR89REB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54d ( ) ) . goodB2GSink ( data ) ; },0
public void W0ZSISJSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54e ( ) ) . badSink ( data ) ; },1
public void T6IKQ9BG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54e ( ) ) . goodG2BSink ( data ) ; },0
public void OIRWZ95B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_54e ( ) ) . goodB2GSink ( data ) ; },0
public void SJIKOLHSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void LQ6065MG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void DRUPYLNB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void 212KTSU ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void CSV3DQO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void W95OZYGG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void XLDEX5PB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public String TCQE0UQSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public String 288YHBWG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String A5G59PSB2GSource ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",0
"public void KUHEE6N ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 62E0R5R ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void O4GF9BBG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void P0MS9BVB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void H6VWD55Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void GGBWLI9G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void TPI2BU1B2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void AK846ET ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void KBAAHIB ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HEUE87XG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void BWLMBE8B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void DMZ9TBOSink ( CWE134_Uncontrolled_Format_String__listen_tcp_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 7NRQZBHG2BSink ( CWE134_Uncontrolled_Format_String__listen_tcp_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void LIIAUJQB2GSink ( CWE134_Uncontrolled_Format_String__listen_tcp_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void PMWNIGR ( ) throws Throwable { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_68b ( ) ) . badSink ( ) ; }",1
public void W007KAX ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 5NWOVQ2G2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void I0S6HXJB2G ( ) throws Throwable { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_68b ( ) ) . goodB2GSink ( ) ; }",0
public void I1IALNBSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__listen_tcp_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void H8V0W3BG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__listen_tcp_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void OJDQTGYB2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__listen_tcp_printf_68a . data ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 18R0GAR ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void KTBXOEO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4QIVR1CG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void C2LRIKAB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void MPCHR64Sink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void HTBNXK6G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void FVPVUIJB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void T2DADV4 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 43CYSFD ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void Y8FBA9TG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void MR259LBB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void O9B50FKSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void WCHSCX5G2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void T7RZRRCB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 7M0G8SP ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void FNYYP1I ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QLCTE7KG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void QZYIAXGB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void FR9YB9LSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void XBVMKCTG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void PTQ35M1B2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void JU7VKW4 ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void FRSNQD1 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void E65A1OIG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void N286WP6B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void M5060SSSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
"public void NOWD3S5G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"public void LAYY1T3B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void CTJXCKI ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void M30V12D ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void JB5ALLVG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void NZ5PDQ6B2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__listen_tcp_printf_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 8SNZ0B3Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 42GNGY2G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void QGU1H0LB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void GHKJW3M ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__listen_tcp_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__listen_tcp_printf_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 2DIPJDZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void VWZ6SF9G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__listen_tcp_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__listen_tcp_printf_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void TX9UV7IB2G ( ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__listen_tcp_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__listen_tcp_printf_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void L1UBGB6 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } if ( data != null ) { System . out . format ( data ) ; } }",1
public void SMRB8SQ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PMQOQ64G2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . format ( data ) ; } }",0
"private void D0HIQU0B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void BMX5M2X ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 8CDCW1FG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void VVNJPLVG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 9N7C8AYB2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void XFAVTFPB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void FOTL3BU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void UJ8WQ8Y ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void P6U2Y8DG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void U8FPZHTG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void AAOPYVPB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void O88NZA7B2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void EMYAYXP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void QX40289 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void BMULYGPG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void T2EU7ODG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 7SND31CB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void OC561EOB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void EWAPG1F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void JDWPJBY ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void U3MFN2LG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 8KBXUSCG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void QGD5HH7B2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void S0CJCG9B2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void E5Q7XZ4 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 9TW1G7V ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void AFI47QWG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void GWSQRJVG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void E1NLV47B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 2G5PSHLB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 4U7QWG9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void NQDBDOF ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 2O19K8RG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void YJQEZRVG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void UJPNCOAB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 575D1HEB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void KSY2CZ8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void MEPMXU9 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 7ZIH6IGG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 83AIQCEG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void V9O9IAKB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void KJCWZKDB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void J9M3KHU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void W5AE6VY ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void PZ221Y2G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void FNRJ31OG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 2CYA9JFB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void J0QM3IWB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void TR3IJF8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void A4339YU ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void L9M635HG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void Y4RBNDFG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 4UUG9YZB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void T9LAJ10B2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void ZB39R0R ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 5NOUW2F ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void F7KM0T2G2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void A3D7PZVG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void MNEGZSLB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void R8LBZA1B2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void HK7U9YP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void FPM8QFV ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",1
"private void MSSRKJVG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void GW4TXYEB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void Z9GC887 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void Y1PZ1EL ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void 523GOFEG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 8V6GSKYG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void M6D0BXDB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void PK29R10B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void S0TZ4W7 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RU56SMJ ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void TROGD7AG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void BAIS6W1G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void CEE6WLCB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void G0PS6IDB2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void SATPR23 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void CC34RLC ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void LC9B2A5G2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void RFXKRTNG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void N1LAOXCB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
"private void XNGDAEHB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void QE8WNKO ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void RCV1YCB ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",1
"private void 9Z9X04JG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",0
"private void GWGYOJIB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
public void PSJ17X0 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void RNYN7CZ ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void A5DHJNZG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 68I5RKQB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void VS7AWXR ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void ANT386U ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void NYR91U1Sink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },1
public void 7I4X6GE ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void 3TR1PGXB2G1 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void 01VHR4YB2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 7IZD1LHB2G2 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void H6PJV1FB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void HE8PMIGG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void WHLOYZOG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },0
"public void EUBTQQA ( ) throws Throwable { String data = null ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_22b ( ) ) . badSink ( data ) ; }",1
public void MJPAYMO ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void NL39NNZB2G1 ( ) throws Throwable { String data = null ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void 0LH3295B2G2 ( ) throws Throwable { String data = null ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void XJ42DYKG2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void 63AXCZQSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__PropertiesFile_format_22a . badPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },1
"public void XH96WDVB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__PropertiesFile_format_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"public void GAMF6R7B2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__PropertiesFile_format_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void GRBPECCG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__PropertiesFile_format_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },0
"public void 4UHCF1K ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",1
public void Y0CBJPS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 9EGY7I4G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 2JC34QCB2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
private void 4J54PV9Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
"public void 7EDLTLT ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void 23ATWYN ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void Z8Q2ZBPG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"private void 1RHKWT3G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void U8QIMOEB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void 31IP5I0B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String VMV8H5ZSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void SOFDMEQ ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
"private String GVNX319G2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void AM9SY4UG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private String PUV8T5OB2GSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"private void BVAMSI8B2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void 3L9HPIE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void EC1J9LHSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . format ( data ) ; } },1
"public void 5YSXK5J ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void F4PASC1 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void FI2YPXDG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void TBGJ6MBG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void BHTX7J4B2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void B8ENQ9HB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void NK7XPVL ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_51b ( ) ) . badSink ( data ) ; }",1
public void 8KI7SIH ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 7INVM4UG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void FIP2NHGB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void 2DJBGEESink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void 54S7ILKG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 5C2NINGB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void YA9I0C7 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_52b ( ) ) . badSink ( data ) ; }",1
public void 23UAK61 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QJ7LF2VG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 3EDD3G4B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void WU770UTSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_52c ( ) ) . badSink ( data ) ; },1
public void 18HKO48G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_52c ( ) ) . goodG2BSink ( data ) ; },0
public void MBHZ2HWB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_52c ( ) ) . goodB2GSink ( data ) ; },0
public void CVRGJWISink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void H1BGQ00G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void TGFRNDKB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void OYQV02S ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_53b ( ) ) . badSink ( data ) ; }",1
public void R0RHZTX ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 7QVYDB3G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 8PLBGVOB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void 696KQECSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_53c ( ) ) . badSink ( data ) ; },1
public void 9RUCYE3G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 0P3F1W8B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_53c ( ) ) . goodB2GSink ( data ) ; },0
public void 3PI6GMLSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_53d ( ) ) . badSink ( data ) ; },1
public void 3Y71LG3G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 55QYOJXB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_53d ( ) ) . goodB2GSink ( data ) ; },0
public void 4NL2HC9Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void TV5FRYFG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 0X20JJ8B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void SKTURGV ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54b ( ) ) . badSink ( data ) ; }",1
public void X2NLKUL ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void J2ZJ9J3G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void OZ1TQ5AB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void GS5HIEQSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54c ( ) ) . badSink ( data ) ; },1
public void GJAZMISG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54c ( ) ) . goodG2BSink ( data ) ; },0
public void SNCC2KPB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54c ( ) ) . goodB2GSink ( data ) ; },0
public void BEYMA8OSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54d ( ) ) . badSink ( data ) ; },1
public void P06M2K7G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 5VU3DPHB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54d ( ) ) . goodB2GSink ( data ) ; },0
public void HU39ZQGSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54e ( ) ) . badSink ( data ) ; },1
public void L8J6RP1G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54e ( ) ) . goodG2BSink ( data ) ; },0
public void BZHZROTB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_54e ( ) ) . goodB2GSink ( data ) ; },0
public void 19DXLIZSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void RKWT5BQG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void MA35KPAB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void 53VRV2O ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 8IKS2V3 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void KWO1JKVG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void WLTEYZ4B2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public String E9NH3HISource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String H4AWOJSG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String Q8803YSB2GSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"public void JDW1DI6 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_66b ( ) ) . badSink ( dataArray ) ; }",1
public void U3R5MXS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void SN2ZT5FG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void NVP9QOMB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void WRNQB6NSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },1
public void NUS1PK8G2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void TZZ2VLPB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 4W0TYHM ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 22GSEIJ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void A7OVQJSG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void H978HDNB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void 9F5JZS7Sink ( CWE134_Uncontrolled_Format_String__PropertiesFile_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },1
public void L10JGHNG2BSink ( CWE134_Uncontrolled_Format_String__PropertiesFile_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void HBIAU9YB2GSink ( CWE134_Uncontrolled_Format_String__PropertiesFile_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void G7YBKJE ( ) throws Throwable { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_68b ( ) ) . badSink ( ) ; }",1
public void EH7CXDS ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void Q4XX635G2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void CO72VW6B2G ( ) throws Throwable { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_68b ( ) ) . goodB2GSink ( ) ; }",0
public void BATCJACSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__PropertiesFile_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },1
public void G7HAO8AG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__PropertiesFile_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 6Q7AP33B2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__PropertiesFile_format_68a . data ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void ATJEAP8 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void MG3RJL9 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void S054XHTG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void JY3XA20B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void JZPF6VSSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },1
public void QV7XDE2G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void HF64UHUB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 5QK7GWX ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 7FZHKT5 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 0JX85LAG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void OJMXOU8B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void OR5PBOLSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void MQ873KYG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void Y812T81B2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void QAGYLVQ ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void DKKX07I ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BCNEWDVG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void TUGBK5MB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void KLSV40XSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 0Y3FEZWG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void UOWH600B2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void BZ40TE2 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 4FI05E9 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void U9AQMAYG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void DTF6OXPB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void TZ11ZEOSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
"public void Q78K1L6G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",0
"public void PNXCQBYB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void R6NZ0BW ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 4KPF5GU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void KEUV1Y5G2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void 40G0AWQB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_format_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void W7AAGPISink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 6I7Z2IJG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void P8G9NP1B2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 93QIED9 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__PropertiesFile_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__PropertiesFile_format_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void QQ2952H ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void CL00H29G2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__PropertiesFile_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__PropertiesFile_format_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void F314885B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__PropertiesFile_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__PropertiesFile_format_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void RJR33F8 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } if ( data != null ) { System . out . printf ( data ) ; } }",1
public void KNJSKKE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void APX0QSPG2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"private void 7D5Z0GEB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void L9XA5S7 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 761E98IG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void HX2MHHQG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void MASNJF1B2G1 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void R2TGYUWB2G2 ( ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void IQP8SMV ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 95T51PH ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void YA89BVRG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void TTWK6MUG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void ARB3CO2B2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void J9PBCTOB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void SI0VVKN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void YNUJK11 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 92MFCTGG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void TJWBBWTG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 4H1QECCB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void GTYWB23B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void H3ZDS75 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void ID43T01 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void XAN1DONG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void G66P6MEG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void RYWVJO1B2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void XVZGJS3B2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void IP8QKXZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void A5MMYHS ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void ECUOOBSG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void PUXHQHEG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void XDGSQ25B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 9H2AUJ7B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void S4UC7A8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 4QKBBFV ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void WC3ZTRKG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void PUJ18Y0G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 2M8CLF5B2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void IAUWXC0B2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void TXVC75C ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 9W4SMJQ ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 6FMZTXWG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void KGJFEPOG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 85OUWJJB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void IJSLLRZB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 1I3Z1WR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0PAE9XG ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void UWQGAVWG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void LF4HORGG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 9SXHN1AB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void NIQZLN5B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void U9ZG5DE ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 86JAZH1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void WE01BI6G2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void AO0IP0TG2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void RA4AVBRB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void P6NPK60B2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 88RU8LF ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 97QA8RF ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void I4QLRFEG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void UX23KD5G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 983S1YUB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void LNPB5FMB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void G18ZDO5 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 4AM65LB ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",1
"private void PPF6G7HG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void IQ6LC7GB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void DR27YZV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 4LJ7QNK ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void AU5SUNNG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void HBUDP8JG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void HB7MBCDB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void HE3BA03B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void QDQ5XOH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void U99PE7X ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void NJK82CCG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void YEGTLX6G2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WN6MFAHB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void T926LR2B2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void P2Z1T7L ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void V0D4HSL ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void X7HIRBJG2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void DVROOVFG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 9C7NE7UB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
"private void 1ADGYSUB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void PHR6S0J ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void SC8DCZL ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",1
"private void YGMACPOG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",0
"private void T6XB03VB2G ( ) throws Throwable { String data ; while ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } while ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
public void Z8OQ3HO ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void SAVAEYX ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void WN99QK8G2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void RMRZ2F7B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 2LJS2OU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void L1W4HNQ ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPrivate = true ; badSink ( data ) ; }",1
private void XNAON7ZSink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },1
public void TTPE8QN ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void CM8XU52B2G1 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void JRWNGI3B2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void D2J4T5TB2G2 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void EQ00QQAB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void BYR9A0ZG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void HGCVZT7G2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },0
"public void 77MSRQD ( ) throws Throwable { String data = null ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_22b ( ) ) . badSink ( data ) ; }",1
public void 70FAGK0 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void N7N5S40B2G1 ( ) throws Throwable { String data = null ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void 3RPTZYGB2G2 ( ) throws Throwable { String data = null ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void 4KF4TT7G2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void FHFWVROSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__PropertiesFile_printf_22a . badPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },1
"public void AE6PUA5B2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__PropertiesFile_printf_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"public void 6ZL4YGJB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__PropertiesFile_printf_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void NYHCW03G2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__PropertiesFile_printf_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },0
"public void 6ZPGQVY ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",1
public void MMX7Z2H ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void B1QT9IIG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void NM19MEAB2G ( ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
private void JAH1A1QSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
"public void JJI5KL6 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data ) ; }",1
public void FAYV3KQ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 2N45KEKG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"private void RSWFKTTG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void 4R96ACHB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void M1DF5BKB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } goodB2GSink ( data ) ; }",0
"private String XEPAZBFSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
public void VBMYPPZ ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
"private String PALJFOQG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void EB7F2XKG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private String 1J3J2KPB2GSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"private void FE07LQKB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void 7LW9GY3 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 4329H5KSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . printf ( data ) ; } },1
"public void BTX4DU7 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( ) ; }",1
public void U73YLIC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void AWIPWATG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void KGPFARVG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void R4B4YXIB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void MVPB09UB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void RI5NQ7R ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_51b ( ) ) . badSink ( data ) ; }",1
public void 9ZHD181 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PHTH8I5G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void X6F648MB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void 405F7JHSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 0GB2BBLG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void HTEZRS1B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void BL68X24 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_52b ( ) ) . badSink ( data ) ; }",1
public void WK2N63E ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 2CYUO8PG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void X978FI4B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void 3T6QVBGSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_52c ( ) ) . badSink ( data ) ; },1
public void AYYZ8EEG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_52c ( ) ) . goodG2BSink ( data ) ; },0
public void 80YUZ00B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_52c ( ) ) . goodB2GSink ( data ) ; },0
public void SCHYFRBSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void PJR8645G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void FCXFOTNB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void HDJOYOE ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_53b ( ) ) . badSink ( data ) ; }",1
public void QIEOYKH ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void AYQOEM3G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 9LY3UTAB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void HFP6TT5Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_53c ( ) ) . badSink ( data ) ; },1
public void L2RQJSFG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_53c ( ) ) . goodG2BSink ( data ) ; },0
public void CWN6034B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_53c ( ) ) . goodB2GSink ( data ) ; },0
public void VCP1WR0Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_53d ( ) ) . badSink ( data ) ; },1
public void LBEHY7UG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 75SYFCCB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_53d ( ) ) . goodB2GSink ( data ) ; },0
public void 8ORQXCCSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void UGHAY13G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 5APY6PGB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 9N1QDMN ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54b ( ) ) . badSink ( data ) ; }",1
public void FT2KR49 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void VQGTURMG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 6EWXGYKB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void R3KMNAHSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54c ( ) ) . badSink ( data ) ; },1
public void 8X7T304G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 2XU6CUIB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54c ( ) ) . goodB2GSink ( data ) ; },0
public void KDEL8BDSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54d ( ) ) . badSink ( data ) ; },1
public void 8C46F5YG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 3UIISE9B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54d ( ) ) . goodB2GSink ( data ) ; },0
public void B9ZE2JJSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54e ( ) ) . badSink ( data ) ; },1
public void V88FM5AG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54e ( ) ) . goodG2BSink ( data ) ; },0
public void WCA62VVB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_54e ( ) ) . goodB2GSink ( data ) ; },0
public void F5YBNUJSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void HVF03T9G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void J43ELVIB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void IASA5GA ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void JRV3WFZ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void N70TCVAG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void 4YRQAN4B2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public String 5MSCTGNSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String 41HTJNUG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String F49PE2VB2GSource ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",0
"public void V37X2W1 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_66b ( ) ) . badSink ( dataArray ) ; }",1
public void LIKL4YC ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void D5K3YIJG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void 6YQEU9BB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void 2KYGKNLSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 5Y7KYWGG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void M0PX8GSB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 7QR7JHJ ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void 3XZ8RRK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QBE3N5JG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void HIU4P69B2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void DDCRWE8Sink ( CWE134_Uncontrolled_Format_String__PropertiesFile_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 49O6E0HG2BSink ( CWE134_Uncontrolled_Format_String__PropertiesFile_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void BM2CF73B2GSink ( CWE134_Uncontrolled_Format_String__PropertiesFile_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void KRZCA9S ( ) throws Throwable { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_68b ( ) ) . badSink ( ) ; }",1
public void YPBACIL ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void KVBRZPSG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void GYSCLMXB2G ( ) throws Throwable { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_68b ( ) ) . goodB2GSink ( ) ; }",0
public void XEFEIO0Sink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__PropertiesFile_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void JRB37LZG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__PropertiesFile_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 35BYVC9B2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__PropertiesFile_printf_68a . data ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void SRVDTJ6 ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void 1N5ST1X ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void F3HZ3NSG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void P5CKTALB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void SJ1HX5OSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void KAR9P5AG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void R9JQDXQB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void OF3IVUU ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_72b ( ) ) . badSink ( dataVector ) ; }",1
public void VB7KPSB ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void QC0TNBXG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void DQJCFGZB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void 2SI00N3Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void X75SSULG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 23CRD4QB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void S9FH1QU ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void HGTQ80J ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ZXD3QGBG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void 5TTH9APB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void EJ0HQLOSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void V3177Z5G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void T1OD4M6B2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 5ARXUUG ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void Q04Y321 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 43HMTVLG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void FBFNPCLB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void 42H1KAESink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
"public void PANMDZ0G2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"public void RSW2KE7B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void VACI35X ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void PGRSXTW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void E95DEDXG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void BEL0RPNB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 6BWENWASink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void M4P6CL5G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 3XKX9ZPB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void WKYJM7E ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__PropertiesFile_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void DOX3HR1 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PK8AMIWG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__PropertiesFile_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void E62KBJGB2G ( ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE134_Uncontrolled_Format_String__PropertiesFile_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__PropertiesFile_printf_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void EJVXGFW ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
public void ZTLC39P ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void ITS953LG2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . format ( data ) ; } }",0
"private void YQ5JL0BB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void DTVWVO8 ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void TAN31RYG2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void IXDLUCPG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void O1CNSP0B2G1 ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void ECAHKKBB2G2 ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void XLS4DWZ ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 84A73T2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void D82LZ4RG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void K2UGET0G2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void LU6KOIZB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void QLW8KZEB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void F1E167K ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void BSB9706 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void VMIE2DRG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void L2U76YNG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void N7ZKNFJB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void FPN0CQ3B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void CW0GWKP ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void EZRUWJD ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void FHMRKRQG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 8MIRNCKG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void ICL17Y2B2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void O9RY3TYB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 73GV1AB ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0LMUX4Q ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void TYTNKMWG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void TL2NYI6G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void K8VHUE9B2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void TPT4ZVLB2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void WM2LZSA ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DFSHS27 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void DJNVDYSG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void CI1E3GVG2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void EOGRRQ3B2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 85651RVB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void G6IIYSI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void A7K3T1X ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void IAT0XAKG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void A4KZAYLG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void CKTVQ1XB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void ZHK82GPB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void SS3UZRH ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void DYMBUWL ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void WMTA6WOG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 0WLIT0NG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 3J8D8VKB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 73K8G6GB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 0MFGN4I ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 72WKPP4 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void VGJE81JG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void JE5GP14G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 7PKDDY2B2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 1T6ELGVB2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 6PVRJGC ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void FS80IOI ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void MD1KLTAG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void I09ZXQ9G2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 1LRIZ9DB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void G7N2LXMB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void O55CIFN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 368F7NM ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",1
"private void XFYE0L9G2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( data ) ; } } else { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 6PB7NBCB2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = System . getProperty ( ""user.home"" ) ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 2POCC89 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void AGJAOZ5 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void CQ1PPZ4G2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void SXEI7CJG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 17V5BWRB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void W74WJE9B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void UAEXKL6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 4X5PB3S ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void F255Y2AG2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void N8FU29QG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void TPO0WG2B2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void YLF1DP6B2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void SM8BFLI ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void UPT6J3I ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void 9UFIZZ6G2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 9LAHAYVG2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void 8S5DUBJB2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
"private void SRQ828BB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void F5CI46F ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 750DTTZ ( ) throws Throwable { String data ; while ( true ) { data = System . getProperty ( ""user.home"" ) ; break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",1
"private void 1IKCPRAG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . format ( data ) ; } break ; } }",0
"private void FB2GFJUB2G ( ) throws Throwable { String data ; while ( true ) { data = System . getProperty ( ""user.home"" ) ; break ; } while ( true ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } break ; } }",0
public void AVSHPL3 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 0JTO9LQ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",1
"private void B5JKXPMG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void YYS9EOOB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
public void 6V1A3X4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void A2KEDU7 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; badPrivate = true ; badSink ( data ) ; }",1
private void 756LHCESink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },1
public void EQHNRPN ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void 6XYSYNAB2G1 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void ZRM8097B2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void 0K5Y0VBB2G2 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void Y84B9R8B2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"private void YDGGMK2G2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void K2T976GG2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . format ( data ) ; } } },0
"public void 1B11PG2 ( ) throws Throwable { String data = null ; data = System . getProperty ( ""user.home"" ) ; badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Property_format_22b ( ) ) . badSink ( data ) ; }",1
public void C7EDY7J ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void AY94N1AB2G1 ( ) throws Throwable { String data = null ; data = System . getProperty ( ""user.home"" ) ; goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__Property_format_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void MEPCW1BB2G2 ( ) throws Throwable { String data = null ; data = System . getProperty ( ""user.home"" ) ; goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Property_format_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void A5IURY2G2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Property_format_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void D5CA007Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Property_format_22a . badPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },1
"public void NLR9HQ6B2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Property_format_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"public void XGJ5T0IB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Property_format_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void EOD6SR7G2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Property_format_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },0
"public void W6YEE21 ( ) throws Throwable { String dataCopy ; { String data ; data = System . getProperty ( ""user.home"" ) ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",1
public void 30JHB21 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PAXRJN1G2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( data ) ; } } }",0
"private void 171IFY6B2G ( ) throws Throwable { String dataCopy ; { String data ; data = System . getProperty ( ""user.home"" ) ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
private void 996Z004Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
"public void 01MOXT2 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; badSink ( data ) ; }",1
public void U8Y6CD2 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void PYXNY2MG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"private void M0UXRWZG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void XK0DPSEB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void 1UPPQVDB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; goodB2GSink ( data ) ; }",0
"private String EGBOSUFSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
public void CPHU52A ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
"private String P0Q6TOBG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void A9BTT4DG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private String UBRBP0EB2GSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",0
"private void CVDJC1JB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void UXGJTIK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 3RFXKOXSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . format ( data ) ; } },1
"public void I0QVLO1 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; dataBad = data ; badSink ( ) ; }",1
public void NXX9R7P ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 2K7T0FIG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void C89QOYXG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void PKL7YD5B2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"private void OE8MQU2B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void 9STJI61 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_51b ( ) ) . badSink ( data ) ; }",1
public void TAYGAGE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void GJT7WURG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_format_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void N5I9V9WB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void G16UOW1Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void M6YE13NG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void A4V200ZB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void QBW1JNU ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_52b ( ) ) . badSink ( data ) ; }",1
public void HBCTETE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HWH1ZY1G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_format_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 9I8R1MCB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void F49WJW0Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_52c ( ) ) . badSink ( data ) ; },1
public void I5FUE12G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_52c ( ) ) . goodG2BSink ( data ) ; },0
public void N0XKVPHB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_52c ( ) ) . goodB2GSink ( data ) ; },0
public void BWQ1AC6Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void ZBIU2F8G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void 6DKQQ2KB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void O03VQYE ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_53b ( ) ) . badSink ( data ) ; }",1
public void RNOOZAY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 7L18PTWG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_format_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void AHQGYK8B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void 12CKM2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_53c ( ) ) . badSink ( data ) ; },1
public void 9UICP8YG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_53c ( ) ) . goodG2BSink ( data ) ; },0
public void EA75T8VB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_53c ( ) ) . goodB2GSink ( data ) ; },0
public void OHB5UV4Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_53d ( ) ) . badSink ( data ) ; },1
public void DSBJTWEG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_53d ( ) ) . goodG2BSink ( data ) ; },0
public void FEK2RCOB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_53d ( ) ) . goodB2GSink ( data ) ; },0
public void 7C696HLSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void ECJHSTOG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void AJPVN0NB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 5EKLPFC ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_54b ( ) ) . badSink ( data ) ; }",1
public void BVOD0KK ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BN2EXW5G2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_format_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 1CTUBNBB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void PJPIR34Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_54c ( ) ) . badSink ( data ) ; },1
public void 3WQHAOAG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_54c ( ) ) . goodG2BSink ( data ) ; },0
public void ESQU9K2B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_54c ( ) ) . goodB2GSink ( data ) ; },0
public void K8V9QCXSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_54d ( ) ) . badSink ( data ) ; },1
public void FMN0KEWG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_54d ( ) ) . goodG2BSink ( data ) ; },0
public void FFU62W3B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_54d ( ) ) . goodB2GSink ( data ) ; },0
public void 8M084ICSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_54e ( ) ) . badSink ( data ) ; },1
public void 3OEBB2XG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_54e ( ) ) . goodG2BSink ( data ) ; },0
public void DLEVVWZB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_format_54e ( ) ) . goodB2GSink ( data ) ; },0
public void PVW3O31Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void 5J5FXGBG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void REFU3ECB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void TYK75VU ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Property_format_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void R7EK5NA ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 3J30ZQGG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Property_format_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void AR2CYPOB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Property_format_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public String LSDBC7ESource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
"public String JHNSP9GG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String 0XD2J72B2GSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",0
"public void 3WAK9BJ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Property_format_66b ( ) ) . badSink ( dataArray ) ; }",1
public void 5IW7TW4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BNFCQQUG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Property_format_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void TZUIKXDB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Property_format_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void 2ECVEEOSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },1
public void FX8AVLCG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 94MYVO1B2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void SOXZF43 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Property_format_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void B1PWCGN ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 4UZSPRQG2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Property_format_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void VNV3HZYB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Property_format_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void 1XS1C6WSink ( CWE134_Uncontrolled_Format_String__Property_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },1
public void NQ73Y3PG2BSink ( CWE134_Uncontrolled_Format_String__Property_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void IRGO6D2B2GSink ( CWE134_Uncontrolled_Format_String__Property_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void 3C1NKCT ( ) throws Throwable { data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_68b ( ) ) . badSink ( ) ; }",1
public void A4GS8CF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void GA3A8I6G2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_format_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void BRT4WMMB2G ( ) throws Throwable { data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_68b ( ) ) . goodB2GSink ( ) ; }",0
public void X3ON3SVSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Property_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },1
public void IRM8UTWG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Property_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void JJW3IAUB2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Property_format_68a . data ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void UU0QDZU ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void L6KABTL ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void HR95FEJG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_format_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void VG27JC7B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void QR9WFSJSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },1
public void YSJVT76G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 9KCS3EYB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void JXZR0DM ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_72b ( ) ) . badSink ( dataVector ) ; }",1
public void XUF4L4S ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void UOQLHT3G2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void 1DFK2C3B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void 2C55MU3Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void KZM383FG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void I9GUQ83B2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void ZNYUMGE ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void 76OX56E ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void BZ84C7OG2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void ZO4VXBFB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void 7YJL155Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void DH6YLV4G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void NMIDGY1B2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void CMYT3KJ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void BOUZMU8 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void JB6ATFFG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void 2EQWUVNB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void QN846F8Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
"public void VWX0ODFG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",0
"public void MI8BAEYB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void OPTETKB ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void 8A535YW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void RR29E0FG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void QJAFV8BB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Property_format_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void M5RIAW2Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 5MPSORSG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 3B20P7WB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void VR5S9QP ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; CWE134_Uncontrolled_Format_String__Property_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__Property_format_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void 9UZM4HE ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 32Z9B7KG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__Property_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__Property_format_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void 1Q63ZYJB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; CWE134_Uncontrolled_Format_String__Property_format_81_base baseObject = new CWE134_Uncontrolled_Format_String__Property_format_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
"public void MBLIA2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
public void 8UDGLXY ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void NNN1DF0G2B ( ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"private void R3UOGF9B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void EI8A2QE ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void YF33U60G2B1 ( ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void OVRYYYJG2B2 ( ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 2I1AGECB2G1 ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( false ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 1686GAMB2G2 ( ) throws Throwable { String data ; if ( true ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void C3LEVUS ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void M26PY77 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void KW77RZUG2B1 ( ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void M6RECCUG2B2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 5YU7ODDB2G1 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( 5 != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 4ET8DDAB2G2 ( ) throws Throwable { String data ; if ( 5 == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( 5 == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void OBWED7T ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0ZZJ7Z4 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void TPS8BT3G2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void TTYVBRJG2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void EMPGVREB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 3B20IL9B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 65DKBK9 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void GYZHBA9 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 3DXGQ6KG2B1 ( ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 58K4NTYG2B2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void WC8M3ISB2G1 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 9P3RFRSB2G2 ( ) throws Throwable { String data ; if ( privateTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 5D77RA6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 6B38TXB ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void SSLFCJYG2B1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void TYI8Z78G2B2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 66RW0GOB2G1 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 9QMCAB1B2G2 ( ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void HCL8V75 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void IORUIVB ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void MQAJSMQG2B1 ( ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void SB0HO47G2B2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void SLPC0VOB2G1 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void R2G3U2LB2G2 ( ) throws Throwable { String data ; if ( privateFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 2CXVD01 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 324FDBC ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 4BEDMKSG2B1 ( ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 6D7JBNKG2B2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 5T6VFIOB2G1 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void RZFC12YB2G2 ( ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( privateReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void F0U8TC8 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 2PO6RDV ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void QZQUNQOG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 98GRL1BG2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void QVRPG4XB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FALSE ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void DO5ZGNWB2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_TRUE ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void CFSBZHR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 0N5W8QF ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void KA93R1WG2B1 ( ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void G2XGSE5G2B2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void U7KCS5NB2G1 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFalse ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void PW439T5B2G2 ( ) throws Throwable { String data ; if ( IO . staticTrue ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticTrue ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 27YD3EN ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void OH1NLK7 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 2SX889VG2B1 ( ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void F15KZ3TG2B2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void 18S65VOB2G1 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticReturnsFalse ( ) ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void MVIP98UB2G2 ( ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticReturnsTrue ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void H3WINI6 ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void TX8SEVH ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",1
"private void 2YW9ZAAG2B ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( data ) ; } } else { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void D5IE1H1B2G ( ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = System . getProperty ( ""user.home"" ) ; } else { data = System . getProperty ( ""user.home"" ) ; } if ( IO . staticReturnsTrueOrFalse ( ) ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void 95AXAPX ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 233RJ53 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void GRQGERBG2B1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void RGFV8W0G2B2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void ZQ7R9VUB2G1 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 02EEG75B2G2 ( ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . STATIC_FINAL_FIVE == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void FBVO0YU ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void 1ALII8K ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void A2G9CL5G2B1 ( ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void RK6JFUCG2B2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void A6971UPB2G1 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFive != 5 ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void 5OOMEG7B2G2 ( ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = System . getProperty ( ""user.home"" ) ; } else { data = null ; } if ( IO . staticFive == 5 ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void C8U9JBR ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void FTK5HDC ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",1
"private void HWCFE28G2B1 ( ) throws Throwable { String data ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void WHC7CK7G2B2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
"private void TWOAX58B2G1 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } switch ( 8 ) { case 7 : IO . writeLine ( ""Benign, fixed string"" ) ; break ; default : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
"private void S5LZF6NB2G2 ( ) throws Throwable { String data ; switch ( 6 ) { case 6 : data = System . getProperty ( ""user.home"" ) ; break ; default : data = null ; break ; } switch ( 7 ) { case 7 : if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; default : IO . writeLine ( ""Benign, fixed string"" ) ; break ; } }",0
public void R98969V ( ) throws Throwable { goodG2B1 ( ) ; goodG2B2 ( ) ; goodB2G1 ( ) ; goodB2G2 ( ) ; },0
"public void KEV6FLQ ( ) throws Throwable { String data ; while ( true ) { data = System . getProperty ( ""user.home"" ) ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",1
"private void OO62PCHG2B ( ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( data ) ; } break ; } }",0
"private void LHJMT09B2G ( ) throws Throwable { String data ; while ( true ) { data = System . getProperty ( ""user.home"" ) ; break ; } while ( true ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } break ; } }",0
public void 1W3L9LA ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void A2ZSAQE ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",1
"private void 8Z7AP0UG2B ( ) throws Throwable { String data ; data = ""foo"" ; for ( int j = 0 ; j < 1 ; j ++ ) { if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void VGFQ5QLB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; for ( int k = 0 ; k < 1 ; k ++ ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
public void Q8DYYK6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"public void 02H1TGH ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; badPrivate = true ; badSink ( data ) ; }",1
private void RHW0G2ESink ( String data ) throws Throwable { if ( badPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },1
public void 9WABU26 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void 2LIL68KB2G1 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; goodB2G1Private = false ; goodB2G1Sink ( data ) ; }",0
"private void 5HKNIC6B2G1Sink ( String data ) throws Throwable { if ( goodB2G1Private ) { IO . writeLine ( ""Benign, fixed string"" ) ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void LJU9CZ4B2G2 ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; goodB2G2Private = true ; goodB2G2Sink ( data ) ; }",0
"private void N6L60WGB2G2Sink ( String data ) throws Throwable { if ( goodB2G2Private ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"private void YCY1A4RG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BPrivate = true ; goodG2BSink ( data ) ; }",0
private void F5UBVO5G2BSink ( String data ) throws Throwable { if ( goodG2BPrivate ) { if ( data != null ) { System . out . printf ( data ) ; } } },0
"public void 5JGW0DM ( ) throws Throwable { String data = null ; data = System . getProperty ( ""user.home"" ) ; badPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Property_printf_22b ( ) ) . badSink ( data ) ; }",1
public void 2GTEKC5 ( ) throws Throwable { goodB2G1 ( ) ; goodB2G2 ( ) ; goodG2B ( ) ; },0
"private void PUZQ2M6B2G1 ( ) throws Throwable { String data = null ; data = System . getProperty ( ""user.home"" ) ; goodB2G1PublicStatic = false ; ( new CWE134_Uncontrolled_Format_String__Property_printf_22b ( ) ) . goodB2G1Sink ( data ) ; }",0
"private void HLM2712B2G2 ( ) throws Throwable { String data = null ; data = System . getProperty ( ""user.home"" ) ; goodB2G2PublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Property_printf_22b ( ) ) . goodB2G2Sink ( data ) ; }",0
"private void JHCTUJWG2B ( ) throws Throwable { String data = null ; data = ""foo"" ; goodG2BPublicStatic = true ; ( new CWE134_Uncontrolled_Format_String__Property_printf_22b ( ) ) . goodG2BSink ( data ) ; }",0
public void IKTAPMZSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Property_printf_22a . badPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },1
"public void V86W922B2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Property_printf_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"public void 31B756PB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Property_printf_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void MFN2FOJG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__Property_printf_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },0
"public void HYVY51P ( ) throws Throwable { String dataCopy ; { String data ; data = System . getProperty ( ""user.home"" ) ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",1
public void DVBLAZ8 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 6MCLSRWG2B ( ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( data ) ; } } }",0
"private void UILI39NB2G ( ) throws Throwable { String dataCopy ; { String data ; data = System . getProperty ( ""user.home"" ) ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
private void NKAM8EJSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
"public void 738EOFP ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; badSink ( data ) ; }",1
public void RTS240D ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void 7NTVP63G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"private void 3CTK73IG2B ( ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data ) ; }",0
"private void SBBY456B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void NMD1ZRJB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; goodB2GSink ( data ) ; }",0
"private String 442I50JSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
public void 32L7MX3 ( ) throws Throwable { String data = badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
"private String SH8GUZGG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
private void RIYXHXJG2B ( ) throws Throwable { String data = goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private String VSOI93FB2GSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",0
"private void VAMXAUIB2G ( ) throws Throwable { String data = goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void JN560DL ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void SKE7U2PSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . printf ( data ) ; } },1
"public void DPJHTHC ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; dataBad = data ; badSink ( ) ; }",1
public void PJN8U96 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void B5ZZN5CG2BSink ( ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void WVQZVWCG2B ( ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( ) ; }",0
"private void W40OJ3TB2GSink ( ) throws Throwable { String data = dataGoodB2G ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"private void E6OC5ADB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; dataGoodB2G = data ; goodB2GSink ( ) ; }",0
"public void 1G1W92H ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_51b ( ) ) . badSink ( data ) ; }",1
public void LIRMXZF ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void A9EJZOBG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_printf_51b ( ) ) . goodG2BSink ( data ) ; }",0
"private void JY9WS7FB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_51b ( ) ) . goodB2GSink ( data ) ; }",0
public void BLV8IULSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void NSZV3JJG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 3RIHNLJB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void R0GC78O ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_52b ( ) ) . badSink ( data ) ; }",1
public void U17M7VV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void PGUY3KEG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_printf_52b ( ) ) . goodG2BSink ( data ) ; }",0
"private void FGAITC9B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_52b ( ) ) . goodB2GSink ( data ) ; }",0
public void MBX35VWSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_52c ( ) ) . badSink ( data ) ; },1
public void RYFTD5NG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_52c ( ) ) . goodG2BSink ( data ) ; },0
public void GS4VVB9B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_52c ( ) ) . goodB2GSink ( data ) ; },0
public void 4NSYMFOSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void KRNOUFVG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void LITWI2EB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 90HLIKE ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_53b ( ) ) . badSink ( data ) ; }",1
public void QWBOFOQ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 08Z6OGKG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_printf_53b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 4RW9RZ1B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_53b ( ) ) . goodB2GSink ( data ) ; }",0
public void 9A9NO2ISink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_53c ( ) ) . badSink ( data ) ; },1
public void ON8JT4ZG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_53c ( ) ) . goodG2BSink ( data ) ; },0
public void NKSNA6XB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_53c ( ) ) . goodB2GSink ( data ) ; },0
public void 3O8XLAYSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_53d ( ) ) . badSink ( data ) ; },1
public void R5YE2FYG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 8BOV0REB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_53d ( ) ) . goodB2GSink ( data ) ; },0
public void 1R84QQRSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void FBLB31IG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 8F9D1OOB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void L52FEYZ ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_54b ( ) ) . badSink ( data ) ; }",1
public void 99LNFQD ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void KEZPEDWG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_printf_54b ( ) ) . goodG2BSink ( data ) ; }",0
"private void 7MEVLZZB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_54b ( ) ) . goodB2GSink ( data ) ; }",0
public void VUKH8IOSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_54c ( ) ) . badSink ( data ) ; },1
public void DE9NQYJG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 2RT6QO1B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_54c ( ) ) . goodB2GSink ( data ) ; },0
public void 35K637ESink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_54d ( ) ) . badSink ( data ) ; },1
public void 7B1W0PEG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_54d ( ) ) . goodG2BSink ( data ) ; },0
public void 3Z6KVVGB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_54d ( ) ) . goodB2GSink ( data ) ; },0
public void NK7MIKBSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_54e ( ) ) . badSink ( data ) ; },1
public void NPZEPCLG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_54e ( ) ) . goodG2BSink ( data ) ; },0
public void 77YDFVGB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__Property_printf_54e ( ) ) . goodB2GSink ( data ) ; },0
public void B5EOCV9Sink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 0UUO3FCG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void MSNP2HXB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void MLU3E74 ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Property_printf_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 8H1WD78 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void PNHR2NKG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Property_printf_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void DA65TPJB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__Property_printf_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public String QLC5ZO6Source ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",1
"public String RDZE9GBG2BSource ( ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public String C4FA5OPB2GSource ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; return data ; }",0
"public void EXQ5ZOB ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Property_printf_66b ( ) ) . badSink ( dataArray ) ; }",1
public void E2YX3JN ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void DLSMO4FG2B ( ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Property_printf_66b ( ) ) . goodG2BSink ( dataArray ) ; }",0
"private void 81NKFC8B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE134_Uncontrolled_Format_String__Property_printf_66b ( ) ) . goodB2GSink ( dataArray ) ; }",0
public void S5L2ZHASink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void DJFHZXLG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 5EELCRKB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void LVS0MWS ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Property_printf_67b ( ) ) . badSink ( dataContainer ) ; }",1
public void KHL3WR6 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void DRGAM84G2B ( ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Property_printf_67b ( ) ) . goodG2BSink ( dataContainer ) ; }",0
"private void YINB8CGB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE134_Uncontrolled_Format_String__Property_printf_67b ( ) ) . goodB2GSink ( dataContainer ) ; }",0
public void CIRHXS7Sink ( CWE134_Uncontrolled_Format_String__Property_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void WQDR587G2BSink ( CWE134_Uncontrolled_Format_String__Property_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void GF7BNALB2GSink ( CWE134_Uncontrolled_Format_String__Property_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 6XDSXAL ( ) throws Throwable { data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_68b ( ) ) . badSink ( ) ; }",1
public void Z49NRQV ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 2WO6X7XG2B ( ) throws Throwable { data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_printf_68b ( ) ) . goodG2BSink ( ) ; }",0
"private void KHGFDH5B2G ( ) throws Throwable { data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_68b ( ) ) . goodB2GSink ( ) ; }",0
public void ZWGEYG1Sink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Property_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void A63E5R7G2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Property_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 9ASRW22B2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__Property_printf_68a . data ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void RDPT7KY ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_71b ( ) ) . badSink ( ( Object ) data ) ; }",1
public void DRDHRMR ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void R2UFF8MG2B ( ) throws Throwable { String data ; data = ""foo"" ; ( new CWE134_Uncontrolled_Format_String__Property_printf_71b ( ) ) . goodG2BSink ( ( Object ) data ) ; }",0
"private void PNN2UR8B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_71b ( ) ) . goodB2GSink ( ( Object ) data ) ; }",0
public void QQUDXDBSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void YLH4U18G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 34VIV4PB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 7MEGHRA ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_72b ( ) ) . badSink ( dataVector ) ; }",1
public void 6NE0CPW ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void GGID9SMG2B ( ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_72b ( ) ) . goodG2BSink ( dataVector ) ; }",0
"private void JKXCHTUB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_72b ( ) ) . goodB2GSink ( dataVector ) ; }",0
public void TOF5JBOSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 7EOSI1BG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 4LCCW74B2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void EX27P0Y ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_73b ( ) ) . badSink ( dataLinkedList ) ; }",1
public void VFBVAYP ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 2W9P152G2B ( ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_73b ( ) ) . goodG2BSink ( dataLinkedList ) ; }",0
"private void UIHDUQWB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_73b ( ) ) . goodB2GSink ( dataLinkedList ) ; }",0
public void MGPJJN9Sink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void Y8XOZ91G2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void GZNBIZPB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void T41W9ZN ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_74b ( ) ) . badSink ( dataHashMap ) ; }",1
public void 42Z5MTU ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 6SM8RFNG2B ( ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_74b ( ) ) . goodG2BSink ( dataHashMap ) ; }",0
"private void TA353N7B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_74b ( ) ) . goodB2GSink ( dataHashMap ) ; }",0
"public void XSZYP7TSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
"public void RIGG42PG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"public void DYXTCTUB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void 67RI8TE ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_75b ( ) ) . badSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
public void D6LGBY4 ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void YZJRRNHG2B ( ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_75b ( ) ) . goodG2BSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"private void PDGCRXVB2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE134_Uncontrolled_Format_String__Property_printf_75b ( ) ) . goodB2GSink ( dataSerialized ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 41HLC96Sink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void UTRGPY3G2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void FL5EPGEB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void FSLTCKO ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; CWE134_Uncontrolled_Format_String__Property_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__Property_printf_81_bad ( ) ; baseObject . action ( data ) ; }",1
public void K5X5LXI ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
"private void 7X24QJEG2B ( ) throws Throwable { String data ; data = ""foo"" ; CWE134_Uncontrolled_Format_String__Property_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__Property_printf_81_goodG2B ( ) ; baseObject . action ( data ) ; }",0
"private void OAYL424B2G ( ) throws Throwable { String data ; data = System . getProperty ( ""user.home"" ) ; CWE134_Uncontrolled_Format_String__Property_printf_81_base baseObject = new CWE134_Uncontrolled_Format_String__Property_printf_81_goodB2G ( ) ; baseObject . action ( data ) ; }",0
public void MG3SX1YSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__URLConnection_format_22a . badPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },1
"public void 221JBIKB2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__URLConnection_format_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } }",0
"public void TIV0DFAB2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__URLConnection_format_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void DPJPWMGG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__URLConnection_format_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . format ( data ) ; } } else { data = null ; } },0
private void RS3RR4WSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
private void A83VWDHSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 2SBSOLFSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void IIVT0CKG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void Y9ECLU3B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void M8VITB0Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_52c ( ) ) . badSink ( data ) ; },1
public void T6KMAFKG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_52c ( ) ) . goodG2BSink ( data ) ; },0
public void DCZVII6B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_52c ( ) ) . goodB2GSink ( data ) ; },0
public void N6CJ6XMSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void 2YO138VG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void TMYDZ38B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void 5ES0R1MSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_53c ( ) ) . badSink ( data ) ; },1
public void DUL4QS1G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_53c ( ) ) . goodG2BSink ( data ) ; },0
public void E6ZZ01EB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_53c ( ) ) . goodB2GSink ( data ) ; },0
public void 01ABGLYSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_53d ( ) ) . badSink ( data ) ; },1
public void RW1CJ6CG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_53d ( ) ) . goodG2BSink ( data ) ; },0
public void VVJ2UASB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_53d ( ) ) . goodB2GSink ( data ) ; },0
public void QNV62PNSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void JRE7W2LG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void VP8FUZOB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void MIHHA8LSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_54c ( ) ) . badSink ( data ) ; },1
public void SPIV2WLG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_54c ( ) ) . goodG2BSink ( data ) ; },0
public void 6AFTC0YB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_54c ( ) ) . goodB2GSink ( data ) ; },0
public void HCAS9RGSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_54d ( ) ) . badSink ( data ) ; },1
public void VXFEYLZG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_54d ( ) ) . goodG2BSink ( data ) ; },0
public void H30BAJZB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_54d ( ) ) . goodB2GSink ( data ) ; },0
public void CM8XYCMSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_54e ( ) ) . badSink ( data ) ; },1
public void Q5PQAHRG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_54e ( ) ) . goodG2BSink ( data ) ; },0
public void SOIMY9DB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_format_54e ( ) ) . goodB2GSink ( data ) ; },0
public void PU5TTN8Sink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },1
public void K1QP776G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( data ) ; } },0
"public void G98HAK3B2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void IGK0DYQ ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__URLConnection_format_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 9H0HLGR ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void UPBVE1ZG2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__URLConnection_format_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"private void A2UCZ69B2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__URLConnection_format_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void 6F52LZ9Sink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },1
public void FPDI2WOG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void 2735FT3B2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void TB4RCDASink ( CWE134_Uncontrolled_Format_String__URLConnection_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },1
public void XEW26HBG2BSink ( CWE134_Uncontrolled_Format_String__URLConnection_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void LXMWNHXB2GSink ( CWE134_Uncontrolled_Format_String__URLConnection_format_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void QWP4PVNSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__URLConnection_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },1
public void J6RRB1PG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__URLConnection_format_68a . data ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void ULOF0THB2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__URLConnection_format_68a . data ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void 0LZO96CSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 3KOQ8DAG2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void D56SAF9B2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void 5X27VPZSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void ZAUKOQMG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void V8SP5GIB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
public void ODVW2DWSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },1
public void 6CEAF3AG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } },0
"public void ZTIQQVNB2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void I2BTAQOSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",1
"public void 6NQS98SG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( data ) ; } }",0
"public void 5OVO31XB2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } }",0
"public void L4JK0WBSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 9F78MSGG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void EVAATCHB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . format ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
public void 294H2TSSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__URLConnection_printf_22a . badPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },1
"public void K4UKMH7B2G1Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__URLConnection_printf_22a . goodB2G1PublicStatic ) { data = null ; } else { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } }",0
"public void EWG9226B2G2Sink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__URLConnection_printf_22a . goodB2G2PublicStatic ) { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } else { data = null ; } }",0
public void 6KYFIUCG2BSink ( String data ) throws Throwable { if ( CWE134_Uncontrolled_Format_String__URLConnection_printf_22a . goodG2BPublicStatic ) { if ( data != null ) { System . out . printf ( data ) ; } } else { data = null ; } },0
private void 64ZQPWLSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
private void 139QD8HSink ( ) throws Throwable { String data = dataBad ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void GFVPBOFSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 63OWSRUG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void ARYN2AOB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void 3BBBRRHSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_52c ( ) ) . badSink ( data ) ; },1
public void KJKNMF1G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_52c ( ) ) . goodG2BSink ( data ) ; },0
public void HQFXXGTB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_52c ( ) ) . goodB2GSink ( data ) ; },0
public void 8EBTQXXSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void G5MBDYOG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 6UIK15UB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void PM2D0OESink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_53c ( ) ) . badSink ( data ) ; },1
public void 8V5BUA4G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_53c ( ) ) . goodG2BSink ( data ) ; },0
public void 05EK3HQB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_53c ( ) ) . goodB2GSink ( data ) ; },0
public void NTFLHYBSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_53d ( ) ) . badSink ( data ) ; },1
public void QKFTJJUG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_53d ( ) ) . goodG2BSink ( data ) ; },0
public void 5VN6NIMB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_53d ( ) ) . goodB2GSink ( data ) ; },0
public void VSEHNJZSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void 06V1OI3G2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 5USS6UDB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void IWNSN7JSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_54c ( ) ) . badSink ( data ) ; },1
public void W0UCJF4G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_54c ( ) ) . goodG2BSink ( data ) ; },0
public void UVFHHXIB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_54c ( ) ) . goodB2GSink ( data ) ; },0
public void DM7U0T2Sink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_54d ( ) ) . badSink ( data ) ; },1
public void 3EZ7PV8G2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_54d ( ) ) . goodG2BSink ( data ) ; },0
public void B17H227B2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_54d ( ) ) . goodB2GSink ( data ) ; },0
public void BIGLENQSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_54e ( ) ) . badSink ( data ) ; },1
public void 7S1RPYYG2BSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_54e ( ) ) . goodG2BSink ( data ) ; },0
public void D8TRASEB2GSink ( String data ) throws Throwable { ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_54e ( ) ) . goodB2GSink ( data ) ; },0
public void BQZLN3RSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },1
public void WLIS7BOG2BSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 0IDVXENB2GSink ( String data ) throws Throwable { if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void WXZN88C ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_61b ( ) ) . badSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 2VWJ2SJ ( ) throws Throwable { goodG2B ( ) ; goodB2G ( ) ; },0
private void P0PVRF5G2B ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_61b ( ) ) . goodG2BSource ( ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"private void 3UOQOXPB2G ( ) throws Throwable { String data = ( new CWE134_Uncontrolled_Format_String__URLConnection_printf_61b ( ) ) . goodB2GSource ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void NE4PE1YSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void AQEZ9OJG2BSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 7UKQATGB2GSink ( String dataArray [ ] ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void 40WQMV9Sink ( CWE134_Uncontrolled_Format_String__URLConnection_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 7KTGW8QG2BSink ( CWE134_Uncontrolled_Format_String__URLConnection_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void A4GJ8H6B2GSink ( CWE134_Uncontrolled_Format_String__URLConnection_printf_67a . Container dataContainer ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void TDWIZPESink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__URLConnection_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 9M3BPXVG2BSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__URLConnection_printf_68a . data ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void DUUXMT2B2GSink ( ) throws Throwable { String data = CWE134_Uncontrolled_Format_String__URLConnection_printf_68a . data ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void IQKBADGSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 4I9LIJ2G2BSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void U0PR55DB2GSink ( Object dataObject ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void 7950KY9Sink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void T7NCUOSG2BSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 339HZ1JB2GSink ( Vector < String > dataVector ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
public void UC5EFAVSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },1
public void 995UR3VG2BSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } },0
"public void 50TZTO7B2GSink ( LinkedList < String > dataLinkedList ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void VTS8KE6Sink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",1
"public void FW8FTDNG2BSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( data ) ; } }",0
"public void LL990O8B2GSink ( HashMap < Integer , String > dataHashMap ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } }",0
"public void S9QOSKDSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void V1A6SGTG2BSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void RZ1V4SXB2GSink ( byte [ ] dataSerialized ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { System . out . printf ( ""%s%n"" , data ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
