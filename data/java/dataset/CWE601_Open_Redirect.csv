input,label
"public void UW8RE10 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void J23FI2U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void CKNJUAFG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void O5VL58V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 8Q5AQ02G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void B76FRPYG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void IKSZIF9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void O7C1SB9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void RIW7L9TG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void KH29GUSG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void D8FXDED ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void K7A8Q0S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void EIU3QC4G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void AGP8GDNG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void AQNMVZE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void CJ88G61 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void HI25TJ5G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void TTDVLGWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void VEO9WPL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void RDMATQ6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void FYDRNW7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void F9EZW07G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void JHA0B47 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void JS9ZFTC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void ETYLZKZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void MT3BD3HG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void RV6XPUL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void IHOXPSE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void MCMS2AAG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void BI3NLFTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void AXI6G7B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void K7247OH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void OW8ANZBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void I4H355KG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 3VNVHAJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void FMMM9J4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void C6ROV8BG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void RKC1ERQG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void OY6GX46 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void QZM71CS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 5TVTODWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void SVDSG3LG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void DCPAYJP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PPQBZAQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 3I4OSXBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 49JJ5R9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void L07HN1C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void S4VMVB7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void LM9A2BGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 1ATQS59 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void G33WNZE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void S77U36NG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 1EP7HCDG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 7N44679 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void IYM9G6H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void FPYZYG2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void EYABBSDG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void LN9JT8J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 3AHWCH5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void YPJZ6MXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void NJKS77Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 0U75MV9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"private void KAOIET4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"public void D35ILUE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void SIDAV3J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String IWVM7J8_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public void 9XEG5XB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void SKOPM18G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String 7POH5DUG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void UCFUAKCG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String GJ1TCAXG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void YC1ETM9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_connect_tcp_22b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void P2PJOB6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void H5UN277G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE601_Open_Redirect__Servlet_connect_tcp_22b ( ) ) . goodG2B1Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void CPE83D4G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_connect_tcp_22b ( ) ) . goodG2B2Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String 5L1OREJSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_connect_tcp_22a . badPublicStatic ) { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String NZCA9HSG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_connect_tcp_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String EX57IX7G2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_connect_tcp_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 2Y0ZO2C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"public void FJHA6H7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void IOJ69TQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"private void 8VA7A4USink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 12ODS59 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } badSink ( data , request , response ) ; }",1
"public void 71U7WK3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void B8CS9RFG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void GBBUU8DG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String 8HZEA0RSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public void 8068KEU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String EB9OCSUG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void WS4P0TFG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void M89J0LE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QT6V7IGSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void TW4J33T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void JECH0VF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7OS2XDXG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void HDDIWQ7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void ZLAJWF9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_connect_tcp_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void TVCXKG5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 067TJS9G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 9MI5G26Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void MG2RYTRG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void ZLR3HOB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_connect_tcp_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void HFQW1UH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BXPS1TFG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void PB257FASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7Q6O6C0G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 0E5G5O9Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 9636MIGG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void JNQNTPO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_connect_tcp_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void F3C5J5W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 912R18UG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void MB55LGQSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void ELRUZA9G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void MSPHG3ASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void JP2DGAHG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void D38U2SNSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 52NX9OUG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void QBQ14YA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_connect_tcp_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void V0HA116 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8V1ZM6EG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void GDY31L3Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void BDQ3F37G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void KERMV7ASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void VJQOJCSG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 22GYQJMSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 25SPXTJG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_connect_tcp_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 8VMS2MASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void XEPDZJOG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void UZQTFYQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_connect_tcp_61b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 9L3Z1AJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YPKG04TG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_connect_tcp_61b ( ) ) . goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String EI4XKUDSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } return data ; }",1
"public String H4C44ARG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void YB89CK5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void I2TKYNM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 0RQXGMKG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void TA0Z1SCSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 06LYP3EG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void KBNWEVS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void BVU51XT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KMN0Q7MG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void XDVLHCHSink ( CWE601_Open_Redirect__Servlet_connect_tcp_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void FQSATBFG2BSink ( CWE601_Open_Redirect__Servlet_connect_tcp_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void MHDDSQ2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_connect_tcp_68b ( ) ) . badSink ( request , response ) ; }",1
"public void UPN3K0Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void FPY5ZHLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void B039R5MSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_connect_tcp_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void SW1RFJYG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_connect_tcp_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void YJPURTN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_connect_tcp_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void IJKKV4X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void SQMCXSJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void PGUR1AISink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void N0Y2EUEG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 8NNCCMP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void 6A5ABLX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GCQ3856G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void SFWARB9Sink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void LDZXY2MG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 16BN30K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void ZU90EOV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YAQ2TNDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void J4ZY15JSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 0916CVOG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 3XVO8LL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void QGWNIE3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 353XE7PG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void 3TGZ7GYSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 32YIK13G2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void OX7DGLW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void CHZ1P2Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Q70U2OXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_connect_tcp_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void IQ17R9QSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void ZZ582NAG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 47471HC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { socket = new Socket ( ""host.example.org"" , 39544 ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } } } CWE601_Open_Redirect__Servlet_connect_tcp_81_base baseObject = new CWE601_Open_Redirect__Servlet_connect_tcp_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 54DY5R9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8ON4XWNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE601_Open_Redirect__Servlet_connect_tcp_81_base baseObject = new CWE601_Open_Redirect__Servlet_connect_tcp_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void LWZZO2F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void G2DZ9UG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GMFUV4PG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void LBKA7HO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void CPCUB6EG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void BAYW0OLG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void VFDHEEH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void WK3JKED ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void LO4UO15G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void JEHWYALG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void ISYTZ3F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6CM6SFD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void HZK2MD2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 3K93K7HG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void TT99AEH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6GIKAUW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void OIN0ZK1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 0KH3WKBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void HIP4H8J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void QDUK219 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void JJ34PB1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 4RSSBFEG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 4RH7ARO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4D7DN6E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void WYR46FTG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void VBCXWFLG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void E5UAWNG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 4BU4333 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 44EXZHMG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void KPSW1T6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void OSXAPKW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 5W94SZE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void RNRB8G1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void KVF3KXFG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 7TQBMXA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void QST4FT7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void PH7FS06G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 21Y41HRG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void UOB9WLT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void QVTA1CB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 33JX03DG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void J2OFZHNG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 21X224P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void YHGZSEU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void AREO7CBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void QIWLMFD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void DLS1HPZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void RJ34FZ6G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 0P1X1NYG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 2YQPHJ9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void V6M29MN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void ROB5LXRG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void PO2QAYQG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void MCAWKAX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void LY8HB86 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void NKUIKU2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void RJPVO91G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void L4KGJ5E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void DCACSLL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void BFMH4JNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void ARQQ1OQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void X7QC9D0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"private void Y4D0XFDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"public void 830OLSS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void PMJKBKR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String F7VGOB3_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } return data ; }",1
"public void GVPYFHH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void 85613Y2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String 53RRP9DG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void GGY1CL3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String 9M0E4ETG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void VA7JJ4V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_database_22b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 6RMCQKA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void GWJFKC1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE601_Open_Redirect__Servlet_database_22b ( ) ) . goodG2B1Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void R86K521G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_database_22b ( ) ) . goodG2B2Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String JTEAM6GSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_database_22a . badPublicStatic ) { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } } else { data = null ; } return data ; }",1
"public String YAOJ3W1G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_database_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String ZN9GS66G2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_database_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 83B17LC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"public void VSAO0XX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void C5766A9G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"private void LDAC1V8Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 4911TP5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } badSink ( data , request , response ) ; }",1
"public void YID3BR0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YX1D66CG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void B3TZPW6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String YUU2GSDSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public void 58ORPXB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String NZB5LAHG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void KLH3164G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 7E3BDQK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void R2URA2PSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void L3CER9M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void 0WFHAF4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6HVTGA8G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void MSTYCXJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void NSV4NWR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE601_Open_Redirect__Servlet_database_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void AY8ZTYH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void G5AOS3QG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_database_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void I6LIZP4Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 6OSBTOFG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void M94M6HA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE601_Open_Redirect__Servlet_database_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void MJKS66H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void R0NEHXCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_database_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void T2TWOAESink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7WCO2NOG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void ANIZ5QISink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void OP3IB1AG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void CRMTG32 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE601_Open_Redirect__Servlet_database_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void YLBMMML ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KIJUTCZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_database_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void WVQ785HSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void L9SEIJUG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void TDJLFSKSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void MGWMNAUG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void BABHEW5Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void N2E5AJCG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void GQ4RSQ1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE601_Open_Redirect__Servlet_database_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void K5XWZ19 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void CN9FF7AG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_database_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void TESAL33Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void WM0HWIZG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void X4G4SSTSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void CIRVKT1G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void SEPTQ2ASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void LYHEHC5G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_database_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void NW2JQDOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void TW9LJNYG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void LVY2ZKN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_database_61b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void JOSVTP4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JVW08HDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_database_61b ( ) ) . goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String 2L60CX7Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } return data ; }",1
"public String R1JTYYAG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void IDOV1CV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_database_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void 3PS9CQQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Z0KKIUAG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_database_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void 9TW18A5Sink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void BQW1ZXMG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void N4WR6LX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_database_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void 72D5QLL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 5I60CNFG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_database_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void ZNZ2IFBSink ( CWE601_Open_Redirect__Servlet_database_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void MTWMUNPG2BSink ( CWE601_Open_Redirect__Servlet_database_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void TTK0ANV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE601_Open_Redirect__Servlet_database_68b ( ) ) . badSink ( request , response ) ; }",1
"public void 66OC7BJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JE39TN5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_database_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void 0WRHPYUSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_database_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void K5TH188G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_database_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void EMSAM50 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ( new CWE601_Open_Redirect__Servlet_database_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void IFAOGL8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YJFV7P0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_database_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void 9HJUFLVSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 9697ROKG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void HUBAPKC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_database_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void 49QJAKU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void MY9LCXJG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_database_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void PYY1XX2Sink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void UTHOSD9G2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void ULDJTBV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_database_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void 6HDO6JY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NRQKEICG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_database_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void AQ2ZDD8Sink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void TL7XPYPG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void U01APKU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_database_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void S3CTWN1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Q6N40RDG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_database_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void 2CEJ341Sink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void KU2H0A8G2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void EXM4I1F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_database_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void E3ZGVID ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2YRNARLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_database_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void GLW2XIHSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void GA4W9KFG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 19ZKLMA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Connection connection = null ; PreparedStatement preparedStatement = null ; ResultSet resultSet = null ; try { connection = IO . getDBConnection ( ) ; preparedStatement = connection . prepareStatement ( ""select name from users where id=0"" ) ; resultSet = preparedStatement . executeQuery ( ) ; data = resultSet . getString ( 1 ) ; } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error with SQL statement"" , exceptSql ) ; } finally { try { if ( resultSet != null ) { resultSet . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing ResultSet"" , exceptSql ) ; } try { if ( preparedStatement != null ) { preparedStatement . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing PreparedStatement"" , exceptSql ) ; } try { if ( connection != null ) { connection . close ( ) ; } } catch ( SQLException exceptSql ) { IO . logger . log ( Level . WARNING , ""Error closing Connection"" , exceptSql ) ; } } } CWE601_Open_Redirect__Servlet_database_81_base baseObject = new CWE601_Open_Redirect__Servlet_database_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 24VHRV5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void LU9CVSRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE601_Open_Redirect__Servlet_database_81_base baseObject = new CWE601_Open_Redirect__Servlet_database_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void D867TLE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void TG4EJ8P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void OE7SRN5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void BGDL98H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void RPKHPDPG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void EKQN3LAG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 4507B36 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void SB90E4J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void P5V26TEG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void VV5XT9YG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void E5I6LZR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void IA662TW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void EEWZ5KRG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 7171WPGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void A45N912 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void OA2DWIK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 62LB1VCG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void GNPAZCJG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void TSWLC3B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6G85SSB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void ONKZDZAG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void ZYFSYX1G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void JMIRXWT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void T7R875Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 6KO6B64G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void IM5Z54TG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void N774V2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void MPWRZQT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void DEGS428G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void NI93CPBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void IX78YIN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void VKMYSR0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 4SS9JSDG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void P70QGSIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 1EBM707 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void BH88485 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 8JBF6MAG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void CMUNEBOG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 4JPD93Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void W5V3I2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void HVIY2HMG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void DKNPZ0DG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void MBWN5TJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XUGYQ0W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 9XAOHSGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void NHQZ5OX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 9VWPFIX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void NT04ARPG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void IJDY1Q6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void LTB78SK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void VV7SLFX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void MQ2LIA6G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void P56322UG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void MZLU9H7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XOPMPSF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void ILNPYW6G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void B3C4LSRG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void B614LJI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void FLR7ZI7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void AAQO0Q2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 7V6HIP8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void D36R1C5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"private void 58W6O08G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"public void BDBUB1T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void T8CT6ZC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String E7EJ495_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public void A3F0IC1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void GX04W8BG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String US93TVOG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void Y8QBMTIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String 6WRIKUTG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void O6GU7GW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_File_22b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void ONSBPL6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void VWBG3E7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE601_Open_Redirect__Servlet_File_22b ( ) ) . goodG2B1Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void HGVM5QWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_File_22b ( ) ) . goodG2B2Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String ZG85TJXSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_File_22a . badPublicStatic ) { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String MNLSWO0G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_File_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String VH0B4EDG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_File_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void O3M1VMY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"public void JMPCQXF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void DENTEJVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"private void 08WFLVISink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 13URCH1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data , request , response ) ; }",1
"public void FJZVZR8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QHT1GCKG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void NPKNHIRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String EAMHSR4Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public void AQWPN3T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String YQBKSHBG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void M0OE9D6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void GW3ZJSH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 90V8I9QSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void JFZT6VI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void 11812IW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void L4SFSSVG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 6GFS6J0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void RXQP69B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_File_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void MGQU9NX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VXGCNVLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_File_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void GU1JNLFSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void I13XSTTG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 6DHLL1I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_File_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void ISQDOZ5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void EX73EPAG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_File_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void WHLCYX1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 3178BUVG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void QV7IU9PSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 579LVLSG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void VROF15N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_File_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void ZCCC756 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void WFUO25NG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_File_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 5UYYHCESink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 9TK1VIRG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void FZ3UXPOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void Y5SOLLKG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void TMZNOK1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void ZHZHBPBG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void A1ROEIL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_File_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void M4BS6F6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 0JGYIQMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_File_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void HDT1FNDSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 56R5JD4G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 86K2LSDSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 6GFOAZQG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void UIGHB77Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void SW0BVKEG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_File_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void GPYM580Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 284QKR0G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void ZL378ZG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_File_61b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 8D5M21L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1RZKOWRG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_File_61b ( ) ) . goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String S1NSC6ZSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String MCYJ4SDG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void DDZMNU3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_File_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void JVE5TI5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 3GDQPHUG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_File_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void JB9NSNRSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void F9WKI9WG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void RY215PT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_File_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void 8FZGR2E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QUWNCY7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_File_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void VL3BQ3JSink ( CWE601_Open_Redirect__Servlet_File_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void HW0S49GG2BSink ( CWE601_Open_Redirect__Servlet_File_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void HBKFN0F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_File_68b ( ) ) . badSink ( request , response ) ; }",1
"public void MM8FB4G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void HBGYB41G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_File_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void 5I4GVFNSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_File_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void UX0R70BG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_File_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void GV29484 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_File_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void NJ7Y8NC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8G0X0CBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_File_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void TPUXTB9Sink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void P0AD1FRG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 1HQKMJ1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_File_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void WMEDNT1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void HUTCUDSG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_File_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void GFDTYCVSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 58DLB1JG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void IOZBEEM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_File_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void 0WHDMS3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7GYA959G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_File_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void W8M65GLSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void W54DOORG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 1U92ISK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_File_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void GXS03LY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GQFHWHOG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_File_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void ENSXOJDSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void G4SDQ7MG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void Y5OU8RP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_File_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void EB7CZI6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2FJAMU4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_File_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 2GZ1MX6Sink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void BJXZ390G2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void XH05474 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { File file = new File ( ""C:\\data.txt"" ) ; FileInputStream streamFileInput = null ; InputStreamReader readerInputStream = null ; BufferedReader readerBuffered = null ; try { streamFileInput = new FileInputStream ( file ) ; readerInputStream = new InputStreamReader ( streamFileInput , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE601_Open_Redirect__Servlet_File_81_base baseObject = new CWE601_Open_Redirect__Servlet_File_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void NDASZV4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BTWZRUQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE601_Open_Redirect__Servlet_File_81_base baseObject = new CWE601_Open_Redirect__Servlet_File_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void KRDYSUN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void V9GLTYX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void E9PV07LG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void XJDED0R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void WTDUR9UG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void MHEERA6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void YVG8HGO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void GZCF3DQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void FASAV1OG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void H775JNTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void ENND6G0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void G2Z38KF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void I6JFE45G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void T1UCP8QG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void MD2GDFE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void ZO183HC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 8EVBG0VG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void N7T3W0WG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void GW6EMUQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 11QGT6W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void T1FUBSDG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void FGC92Q4G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void CYM11L7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void C737GAO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void GVKNXWNG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void VX0Y6J7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 3CCEJAO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void QDOFBEJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 9WVF7F5G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void ENPLA1DG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void L0I1G9Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void A4A9CSQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void RJEY8UCG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void BVL182HG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 4YDNWLA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void HF1KMR2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void U1TRIR3G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void NHUGGPTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void TKXMF4N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void MJYY21C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void CJUINNKG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void PE290M4G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void MT6Z7HJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void TY7L1CX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void ZKI88C3G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void EX5AHVY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void L5FWBMF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 2AYEV7GG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 6B13XYFG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void IUL8621 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 8BMMMV6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 2O70GGIG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void AYRLEMLG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void IRSZH6X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void LJWDOBX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 4DHB1F0G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 8XNJ5UYG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void HI13LHH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 8E27IMM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void RNHO61BG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void UE7WGP1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void QHRMAXU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"private void 1QZGVHYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"public void P0W010J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void TJENBL3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String 51JDQRG_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } return data ; }",1
"public void WUK2T5J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void IEQX2QMG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String QRMJTIAG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void MRJRPTQG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String A0XEF2XG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void TTZS5AJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_22b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 960NW3J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void VKFI9O8G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 0OD5G8WG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String F7D2G5HSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_getCookies_Servlet_22a . badPublicStatic ) { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } } else { data = null ; } return data ; }",1
"public String S8N6WJXG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_getCookies_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String IMHRWJ5G2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_getCookies_Servlet_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 8WGMDQ0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"public void ZCONP6X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1GEK6J2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"private void QEJ9MUUSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 87XHFJM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } badSink ( data , request , response ) ; }",1
"public void 9J3Z2QP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void AOFQ5GMG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void LJ7M6BVG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String FHL7B6BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",1
"public void H3679TV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String BJWGIMMG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void L44IJ20G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void HYOUVH7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6FET2MZSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void C9ZMLVE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } dataBad = data ; badSink ( request , response ) ; }",1
"public void UCZV375 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void J9XLUSIG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 5RB3450G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void WCIIJB8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void BMH289K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void SSS7XDNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 9XMLZJ7Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 5R4KYN8G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void N7ORAMO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 3VE5I0G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GX7ASB4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void BBRRSGOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void I5SVJ9TG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void RRW3C6ZSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void LZBMEAIG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void FE7VHLN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void JB4CSYP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void W2NUNXLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void D7D987TSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void YIGK8BSG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void SVV8JMOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void LLGYJD6G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void QEITPLOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 03G1OI3G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void Q87EAG4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void F5J89X5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void CDS9GNCG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void B7H967ASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void C0SAFFIG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void AKM0ZRQSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void KHM5GVSG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 62OS4KQSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void DEZOC91G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void EKZ8IFNSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void LB5Z9UKG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 55B68HJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_61b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void IAGYBQY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7C1N6HPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String 1T8JWWDSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } return data ; }",1
"public String MM8TB1EG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void XI47A22 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void S0PL5BJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Q7QTA41G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void SF7ZV4LSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void V39XYI9G2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void JDFEMUD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void PGOO9DY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void HN5MGAWG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void W7YFFZ0Sink ( CWE601_Open_Redirect__Servlet_getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void HTD1F56G2BSink ( CWE601_Open_Redirect__Servlet_getCookies_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void IU2K1Z3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void X33ZO7I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VUV7C5CG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void QPTN3RLSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_getCookies_Servlet_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 2AVI9LAG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_getCookies_Servlet_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void IEF01XW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void G6LVBYH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void IPSUSFBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void GSITH32Sink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void PCXQLMBG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void QI93GTF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void MD4IY20 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QC8JNWQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void HTEXAYHSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void JE8YG0GG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 5Q3OV4N ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void 4TVW5FI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YBSJ7ODG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void OERNUUXSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 82ZLTFGG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void O7VCDEU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void ULGNO58 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 85B9U2DG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void G631SNFSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void DIDJKHMG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void PDWOFVS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void Z4X43NP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void I49GGI2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_getCookies_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void G4S2DFPSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 34E22B6G2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void AUVLCLO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Cookie cookieSources [ ] = request . getCookies ( ) ; if ( cookieSources != null ) { data = cookieSources [ 0 ] . getValue ( ) ; } } CWE601_Open_Redirect__Servlet_getCookies_Servlet_81_base baseObject = new CWE601_Open_Redirect__Servlet_getCookies_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void WYI2R40 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1KODBG0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE601_Open_Redirect__Servlet_getCookies_Servlet_81_base baseObject = new CWE601_Open_Redirect__Servlet_getCookies_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void 1QSHXTP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void KZY6VXB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void APF6N35G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void XK2LYZ8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 04RKGUAG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void HQR9EA5G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 3PCAFUB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void TMJL986 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void N5BABP0G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void TDE09EBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void RR2TUG7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6WDM8NF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void A1L78CIG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void DFTGWDPG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void D28216P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void CY456C9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void ULWI6S0G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void LFONW2FG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void NBUDC57 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 44QPXF5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 2LTQ3XHG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void FTT0VKKG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void AIE8RCY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void SV3DW6O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void N0XWKCPG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 00ZNAQNG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 2JON6TS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void TQ6PUY6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void POZJ72LG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void QLND2SUG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void RMI3MLI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 34D509Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void XHG30Z8G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void RYMKS4QG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void DQH0ISL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void EWWXQIO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void RAUZPZ2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 0YHNIXIG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 5PP84CP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void FJK1GTT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void VF33O05G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 9HACJMTG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 6QPDZ4T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 53E0UAI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = request . getParameter ( ""name"" ) ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 578P83GG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void SSY33K6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void KFTW203 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void SUPSXNAG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 9014G47G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void GV2N50C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 0QY0GOC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void HM0OKKXG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void PW16TXQG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void FEHVART ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6B425CX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = request . getParameter ( ""name"" ) ; break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void QB2DNCSG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void IQQH11RG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 4HMFB1T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void C1RG85K ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = request . getParameter ( ""name"" ) ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 6Q65GAZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void WDT5J0C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 2226XJW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"private void Y2KLE61G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"public void EID1J28 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 066X90S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String LFLR1P5_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } return data ; }",1
"public void 25ZF723 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void 6MGRAY8G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String LKBU6T8G2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void PXX0ZOSG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String BN3RL06G2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void 7D1ATJH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_22b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void BJWHIZF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void 1QGSWBPG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void Z9C5ZEPG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String 9K7K5BGSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_getParameter_Servlet_22a . badPublicStatic ) { data = request . getParameter ( ""name"" ) ; } else { data = null ; } return data ; }",1
"public String UH6P2S1G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_getParameter_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String ORRSRNEG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_getParameter_Servlet_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void NL5VK1G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = request . getParameter ( ""name"" ) ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"public void ZMYJ4SF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KQBRYJNG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"private void 94XOAPLSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void Q0F8HSF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; badSink ( data , request , response ) ; }",1
"public void YS6KOZ1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void O0D08VSG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void QRHA0WXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String BOUFONASource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",1
"public void JWEYX9A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String YWNURZHG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void JUVSFM5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void IM3W72U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void PVSBE5VSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void LQATF59 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; dataBad = data ; badSink ( request , response ) ; }",1
"public void GSKBWFR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void AFJ84IDG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 9OCG5DLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void RFZ9RJD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void N34SKK8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void GRCKBC6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 84CYV33Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 7DN04VAG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void DM6G2VG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 2IQDLL4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 0KAUWWMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void DVR6DUFSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void F9BKF8IG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void MRZJYKNSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void L6RC9C5G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void FVGSSOB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void XTNTPBG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void RISRNI8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void Q3KCFKFSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 490BYTUG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 4JGHP23Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7TJ42G5G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void FI7Z92GSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void KTCP4GXG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void Z20NU7P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void K5ISLTK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void XNB5LWTG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void X4O3WU4Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void OQWRO4YG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 8BGFDD4Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void KP2XHZPG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 1NK082DSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void F3U5M6NG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void K6RY7D3Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void FT7UVA5G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 92SJJQX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_61b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void HRJWV5I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void FR49V05G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String KB49VFISource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; return data ; }",1
"public String 1ZA03FJG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 41A3640 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void 7SAX5YX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ZUGP4H2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void DKC86A1Sink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void Y22G99YG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void ON9SO2C ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void Q037L7X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 27PJQW2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void 7RT6P3QSink ( CWE601_Open_Redirect__Servlet_getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void WG31UY3G2BSink ( CWE601_Open_Redirect__Servlet_getParameter_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void H2O9B5X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = request . getParameter ( ""name"" ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void 5BTICAR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VL4ZA1IG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void E4J25XRSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_getParameter_Servlet_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 9F7A14KG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_getParameter_Servlet_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void VLUY5E6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void 79JRBI9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void XR3TRH0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void COWMLSUSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void NWKMYRKG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void PPI3KLM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void 7K883QA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void PBGPN25G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void QY6V3BPSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void TWHEPNVG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void QTK3FR3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void MAPMNM7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void R9JOV5MG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void 8L15CU1Sink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void SE4TC1ZG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void PVS6ZKG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void E4YZ5EH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YGMSSF6G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void 602P6C6Sink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void Q19N6OXG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void FMTEOZ0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void Q6SDB38 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7972MZMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_getParameter_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void HA0BP1JSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void H5K6HKYG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 1GLC7QO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = request . getParameter ( ""name"" ) ; CWE601_Open_Redirect__Servlet_getParameter_Servlet_81_base baseObject = new CWE601_Open_Redirect__Servlet_getParameter_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 6IA41GE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BUOIZLQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE601_Open_Redirect__Servlet_getParameter_Servlet_81_base baseObject = new CWE601_Open_Redirect__Servlet_getParameter_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void 73PLJ7Z ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void BCCSJ3S ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 12P4CUXG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void NG4YDAR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void N3R07QVG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void HBQ1PCYG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void HLS8QKZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6UZQAVI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 5DX67R1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void D7TRVLBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 5ESZIJH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void VMDVBDL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void KO7ABW1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void E9BKAW9G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void Y9A39F6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XMKM5MV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void EUZIBW2G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void IXMXW6DG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void CYVV3WJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 50FZ7JP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void FRRN2Q1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void ZH7ZH0OG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 70E2XDC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void GSJM4Q1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void KZO3HFMG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 9VRM8EKG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 3GFLEKY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void XC2ALVD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void TN8ARGWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 9KGBCJDG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 3VUD02L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 0PTBYQC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void UD3XJCIG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void EEIGCE7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void QTBVBBP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 5HGFX6F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 32HURA1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void PRCYT2YG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void QRXKE4B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 99FHYJG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 3B7WXEGG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void NES4L8WG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void KXNQWVJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void CICYYGE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 49M72TGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 3GAAB8F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void YB89ZUM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void CT7ET2GG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void CMFP204G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 3BXSBZC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PQQ19GI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void YWRMSM6G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 5MUDIQWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void L4PUCKC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void GS8UIFI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void H2VBY5EG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 761YXU1G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 0CON2UG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void UXSUUH1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void HIN9IJEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void J6I9AX4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void PT9UF7R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"private void 94Q1QWMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"public void MB2ZBPB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void WHURJU1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String E54KOSW_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } return data ; }",1
"public void 8ZL15SM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void RM66VSOG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String E6QY1YMG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void 3BLTMA7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String 5JEHI90G2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void ZP48KNJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_22b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 8ZITIP2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void U7J1NGMG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_22b ( ) ) . goodG2B1Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 1EPX9ZFG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_22b ( ) ) . goodG2B2Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String F0HYHS1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_getQueryString_Servlet_22a . badPublicStatic ) { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } } else { data = null ; } return data ; }",1
"public String X8WKIITG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_getQueryString_Servlet_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String ASLWKWIG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_getQueryString_Servlet_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void Z1ZXV0U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"public void REJV8Q3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 3V01P8AG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"private void 956GH2TSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void QR4H24P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } badSink ( data , request , response ) ; }",1
"public void J6KYRGI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void OAX2BIEG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void R7RJFHYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String 1AOSESMSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",1
"public void L3C83RD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String S0309G4G2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void IS8FEB0G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void RG8O0UX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NUQVSG7Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void FXA26ZQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void T9H4KN3 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void JUZ5KAUG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void EXRWNPLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void CYUBOMY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void FLS5L9X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QLXHAUYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void LK2CDE2Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 8Y00ERLG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void APIVZP1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 8ZN2HHT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VVZCWMGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void ZPST17VSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void S2HUJKRG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void GIX798BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void A60U3GKG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void KYWGNKU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void LHJYS4P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void KSZ4X3PG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void PO9VRY9Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void NI0YKU8G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void TXHG33ZSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void S6GMODSG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void Z8DOL1DSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void KR8U16ZG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void K5ORTOF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void VEJ0NYH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void L0WRTTEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void JKDG5Q3Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void XBB0A82G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void D6XVLV3Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 9E3S6YFG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void SNZ6D38Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 6KRMHGKG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void SI143K1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void VOOUGXPG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void ZREX2K8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_61b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void Z3RO1I1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 9ZUAEQTG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_61b ( ) ) . goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String 7U0KW9OSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } return data ; }",1
"public String 02HOLXCG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void M0QLHTA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void BJSE7V4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void AEMAW5IG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void SFAYE13Sink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 1CB6J1WG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 4D74G6R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void C4LO60Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 14OM7OGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void 564QMFXSink ( CWE601_Open_Redirect__Servlet_getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void PCI8P45G2BSink ( CWE601_Open_Redirect__Servlet_getQueryString_Servlet_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void N0P2TMA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_68b ( ) ) . badSink ( request , response ) ; }",1
"public void EBT48AE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void BA67OEGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void N57R77VSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_getQueryString_Servlet_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 9WPFGC4G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_getQueryString_Servlet_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void DLKCLXZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void PB23G5M ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QCS1RAZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void SX1S8PMSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 6XTTW2XG2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void SIPP10Q ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void GC6K5I0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void SJ273Q3G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void 3XRHI09Sink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void LLTDIZ6G2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 9VFZC4A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void OWYE8V8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 38PVXEMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void 51FEC3NSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void Q6XUA7QG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void LSPGARH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void 4QYG0QV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 5BE2KH8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void 6KKL5PVSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void PILGOWFG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void OODZAPS ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void SO05PBP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 3V37BOMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void YFNDFR7Sink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void M6L6T0KG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void MJHUDAM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { StringTokenizer tokenizer = new StringTokenizer ( request . getQueryString ( ) , ""&"" ) ; while ( tokenizer . hasMoreTokens ( ) ) { String token = tokenizer . nextToken ( ) ; if ( token . startsWith ( ""id="" ) ) { data = token . substring ( 3 ) ; break ; } } } CWE601_Open_Redirect__Servlet_getQueryString_Servlet_81_base baseObject = new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void FOPV5AL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 20XVHVUG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE601_Open_Redirect__Servlet_getQueryString_Servlet_81_base baseObject = new CWE601_Open_Redirect__Servlet_getQueryString_Servlet_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void TB3OLM1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void VITSV30 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void VM6SB91G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 87FW4ZO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void TSBWR45G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void REP8KWGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void Y7VWWPB ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 3WIEMM1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void KYNBJ5WG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void LTNW1YSG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void FMWZA6W ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void GK30IYR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 3172AWEG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void KWANEUNG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 1D9OFZC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PTGTJ59 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void BC4CIZNG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void MDZVCHPG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void X8AJD7X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 1H82S2U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void XU9UZDWG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void IPB8F47G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void Q21LT93 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void WQ214OA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void BCQ1TS6G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void G4EPAW7G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void W7KA6MR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 8MXHE0Q ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 9O0DJ8PG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void J8NHS4MG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void H5G3VFY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void X8DKZ7G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void G0UTGJAG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void S6P7PLWG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 1Y2LII1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void AYFMN2X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void K8MSRHPG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void CRF1A3GG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 6P08B1U ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void EGMCN0G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 69R356ZG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void C5FZL17G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 1DPI41A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void PCLA8U2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void IOA1G8FG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void LG2TLZK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void UW88UCQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void XX314JBG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void HSMDHX3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void FJSCJ7R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void URT7YQ6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 060JADYG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void U7NAK2OG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void EI5FNQC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void LN5H6TQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void YGR5Q38G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 5B2XL4FG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 526Z1OY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 7TXT2K4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void LTCORF2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 612DOAL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 1695K22 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"private void XWXRKERG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"public void 06H5RJU ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void LZQD55L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String Z1M0ZZ6_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public void T9FGBXG ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void ESQQF0XG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String 22Z0A3TG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void 20JYZQNG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String OEFEKPJG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void GLQ5UQD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_listen_tcp_22b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void W96XNB2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void 63XUO01G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE601_Open_Redirect__Servlet_listen_tcp_22b ( ) ) . goodG2B1Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void T1OGU79G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_listen_tcp_22b ( ) ) . goodG2B2Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String VIDTHKPSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_listen_tcp_22a . badPublicStatic ) { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String 48RZEVOG2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_listen_tcp_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String C1K19EQG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_listen_tcp_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void NNOME7T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"public void OH0WPEA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void YHIYBA7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"private void ZJ6HWO7Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 1234C3H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } badSink ( data , request , response ) ; }",1
"public void F51OAFI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8EYYDYYG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void N0920Q7G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String 7R0UGJNSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public void NHMHTKF ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String REJL47QG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void C4CS53HG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void H20FYZJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void X7GE7W6Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void FHT1JDV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void WLIR9XD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void DBLBS4FG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 5ZKVJ3MG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void BT9CMTH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_listen_tcp_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void JONMPCN ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void RY7W59TG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void ON3LTQISink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void P8AK1GEG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void VWDQ9N6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_listen_tcp_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void GWE5S4H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void XYYN355G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void YIMXOZOSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void CQGLGXVG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void P9EGN7RSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void KB3ETDEG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void JYHB5EI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_listen_tcp_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7GUZ8TE ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6GRMS8DG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void VSWOS9SSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void U33LMIRG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void C83466RSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void A69ZQ4IG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 9K42GI1Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void Z27UV5IG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 98CIH8J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_listen_tcp_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void IJG0A7A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Z02R3HHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 296LNG8Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void 7XDSCKDG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 98STXPUSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void EJNJEQUG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void MYE2XERSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void B7ADDERG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_listen_tcp_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void PHOO1D9Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 2K4CK7KG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 93YKUPY ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_listen_tcp_61b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void UXABX8D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void IPT50PTG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_listen_tcp_61b ( ) ) . goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String 244E6EYSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } return data ; }",1
"public String 5Z6HJ21G2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void 3JHZRCD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void GAYSVK0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8MUBZIMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void 8GCBX7CSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 4VBQ88NG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void L99E8PW ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void 0Z0BO4V ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1B6BL2EG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void 0VFJLCHSink ( CWE601_Open_Redirect__Servlet_listen_tcp_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void DTWFNPBG2BSink ( CWE601_Open_Redirect__Servlet_listen_tcp_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 98KGI3X ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_listen_tcp_68b ( ) ) . badSink ( request , response ) ; }",1
"public void MKGU3BL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void WJ7FIJBG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void ETN1F4VSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_listen_tcp_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void ZE54KEXG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_listen_tcp_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 95W2LNZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_listen_tcp_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void UQUYMYX ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void UL7KCVMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void V7YEYTWSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void B58JFT4G2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void I95Y337 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void AX1NOBJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void IXBSBUMG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void 2AVQVFISink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void VHBZSHKG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void CY3WYQ8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void N6KMCUR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void HCGKSEEG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void OLJEFIXSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void FKGR0RKG2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void C77WG47 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void MMQWTQ8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void NS2FJP8G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void QDQT37OSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 7BEF7LRG2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void CJOGEPR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void S6GS5RH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void E7KUHXPG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_listen_tcp_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void QRTQY40Sink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void JMR4RU7G2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void 52PXO1D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { ServerSocket listener = null ; Socket socket = null ; BufferedReader readerBuffered = null ; InputStreamReader readerInputStream = null ; try { listener = new ServerSocket ( 39543 ) ; socket = listener . accept ( ) ; readerInputStream = new InputStreamReader ( socket . getInputStream ( ) , ""UTF-8"" ) ; readerBuffered = new BufferedReader ( readerInputStream ) ; data = readerBuffered . readLine ( ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( readerBuffered != null ) { readerBuffered . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing BufferedReader"" , exceptIO ) ; } try { if ( readerInputStream != null ) { readerInputStream . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing InputStreamReader"" , exceptIO ) ; } try { if ( socket != null ) { socket . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing Socket"" , exceptIO ) ; } try { if ( listener != null ) { listener . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ServerSocket"" , exceptIO ) ; } } } CWE601_Open_Redirect__Servlet_listen_tcp_81_base baseObject = new CWE601_Open_Redirect__Servlet_listen_tcp_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 7D0MBRH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Y3J6VLGG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE601_Open_Redirect__Servlet_listen_tcp_81_base baseObject = new CWE601_Open_Redirect__Servlet_listen_tcp_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void 5ZFR9BM ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void EM1NHET ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ZJ8NU34G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 07Y7A87 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void BMO5MG7G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( false ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void N15RROCG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( true ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void YKD178B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void RBT1PDK ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void GX9WGD4G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 990HQXPG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( 5 == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 1YE9AAP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 0H503F8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void TP2T40CG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void DQCK4UZG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void BQ7GO7A ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 9U098IC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void Q7NV1A1G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void K4TLTN3G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void EGFYZ39 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 3Y9ZE98 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void RJTWJLGG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void JK12NKFG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( PRIVATE_STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 91PIV4R ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void JRV61PD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void RE24CK0G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void YPWGG2HG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void QU0PIBH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void F9QUEN2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void X6P4TQIG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 859CEQGG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( privateReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 2ISJOQ2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 9019Q05 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void LTOIM73G2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FALSE ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void VSFS7N6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_TRUE ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void HAC0KIR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void U5LGD3J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void GFRQO4BG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFalse ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void AWZJEQ6G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticTrue ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void ORD1ZL8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6WP3YEL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void G6KQX3SG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsFalse ( ) ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void KSV6PROG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrue ( ) ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void IL9O9ND ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void DZ0C07T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void GONBGC9G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticReturnsTrueOrFalse ( ) ) { data = ""foo"" ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 1RL01XC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void 54RP8WZ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 3JXJSLUG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void PP7FR7RG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . STATIC_FINAL_FIVE == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void HJSHSV4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 20H20NO ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void U20VSUCG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive != 5 ) { data = null ; } else { data = ""foo"" ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void 3YSKZ42G2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( IO . staticFive == 5 ) { data = ""foo"" ; } else { data = null ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 9F7MW1O ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void GWJWWN6 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void 3NA6C2EG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 5 ) { case 6 : data = null ; break ; default : data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void F6B1ZUBG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; switch ( 6 ) { case 6 : data = ""foo"" ; break ; default : data = null ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void Y0HM22T ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"public void 6NZ5A3H ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private void UX2GC22G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; while ( true ) { data = ""foo"" ; break ; } if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void LH5IU8I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void ZU540PI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"private void 9IFIUD4G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; for ( int i = 0 ; i < 1 ; i ++ ) { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"public void W7CVZU1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"public void NJ2QCGQ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPrivate = true ; data = bad_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String 2MSHNKH_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( badPrivate ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public void MMMAN9P ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void N89PB5VG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1_private = false ; data = goodG2B1_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String USSXVHIG2B1_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B1_private ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"private void FW9AXQRG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2_private = true ; data = goodG2B2_source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private String QOCQG6QG2B2_source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = null ; if ( goodG2B2_private ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void JCP57BT ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_PropertiesFile_22b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void PBEQQR5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void TIGQYIJG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE601_Open_Redirect__Servlet_PropertiesFile_22b ( ) ) . goodG2B1Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void XJ74HSFG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_PropertiesFile_22b ( ) ) . goodG2B2Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String A4TZPQISource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_PropertiesFile_22a . badPublicStatic ) { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } } else { data = null ; } return data ; }",1
"public String 5RGRUL3G2B1Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_PropertiesFile_22a . goodG2B1PublicStatic ) { data = null ; } else { data = ""foo"" ; } return data ; }",0
"public String YA1HOSKG2B2Source ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; if ( CWE601_Open_Redirect__Servlet_PropertiesFile_22a . goodG2B2PublicStatic ) { data = ""foo"" ; } else { data = null ; } return data ; }",0
"public void FZUIQ8E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",1
"public void J056IJ8 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 8LA5AG2G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String dataCopy ; { String data ; data = ""foo"" ; dataCopy = data ; } { String data = dataCopy ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } }",0
"private void J2SRAH0Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void SA6TO11 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } badSink ( data , request , response ) ; }",1
"public void CLFS2OA ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7RVDPP4G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void QGQYZAQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; goodG2BSink ( data , request , response ) ; }",0
"private String UQ34JMHSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public void RWBUQAC ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"private String M8N8B4OG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"private void 26VRQ7NG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void RYAR9Z5 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void FRS19Q5Sink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataBad ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void H1C8C0E ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } dataBad = data ; badSink ( request , response ) ; }",1
"public void GBDMQA9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void T5KFBK5G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataGoodG2B ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void KTHGXN9G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; dataGoodG2B = data ; goodG2BSink ( request , response ) ; }",0
"public void JUFX37Y ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_PropertiesFile_51b ( ) ) . badSink ( data , request , response ) ; }",1
"public void NCIHE6F ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void Q9X77JYG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_51b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void YRIT0GCSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void Q5YGSWYG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void J8HQIXH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_PropertiesFile_52b ( ) ) . badSink ( data , request , response ) ; }",1
"public void SGK7UML ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void QAD4XFLG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_52b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void OJBZ28NSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void W7ADMNVG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 86M0TQJSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 97SFF6UG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 83P79O7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_PropertiesFile_53b ( ) ) . badSink ( data , request , response ) ; }",1
"public void 5RXQYZ9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7303YVQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_53b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void Y1RY08TSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void ANMURDYG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void D3C1D4SSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void KZ5PDDGG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void JKXT8IBSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void LPEZI7XG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void HVDPMUL ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_PropertiesFile_54b ( ) ) . badSink ( data , request , response ) ; }",1
"public void MMZNLPD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 5HZ1RDOG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_54b ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void YEAFSITSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void BQQEHDSG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void CQDK88QSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void W5K6708G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void KOIBTMJSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 1VZ6M7UG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_PropertiesFile_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void VRNL119Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void DJ00P27G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 6X3CNVH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_PropertiesFile_61b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void DGIP6ON ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 2V8MQ1XG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_PropertiesFile_61b ( ) ) . goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public String DUHXKQVSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } return data ; }",1
"public String M6BDGYNG2BSource ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; return data ; }",0
"public void M3EMSPI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_66b ( ) ) . badSink ( dataArray , request , response ) ; }",1
"public void 6PJIDGV ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void B2BKUUTG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; String [ ] dataArray = new String [ 5 ] ; dataArray [ 2 ] = data ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_66b ( ) ) . goodG2BSink ( dataArray , request , response ) ; }",0
"public void 4HHQODTSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void BSYDAOBG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 9ZTD51G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_67b ( ) ) . badSink ( dataContainer , request , response ) ; }",1
"public void L4IIH2G ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 3QJW3YHG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Container dataContainer = new Container ( ) ; dataContainer . containerOne = data ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_67b ( ) ) . goodG2BSink ( dataContainer , request , response ) ; }",0
"public void 7PI7ZBUSink ( CWE601_Open_Redirect__Servlet_PropertiesFile_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void Y9QI868G2BSink ( CWE601_Open_Redirect__Servlet_PropertiesFile_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 7WFVDQ9 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_PropertiesFile_68b ( ) ) . badSink ( request , response ) ; }",1
"public void 7WQ1RNP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 0DPZQ98G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_68b ( ) ) . goodG2BSink ( request , response ) ; }",0
"public void CPSG5UESink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_PropertiesFile_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void KFWLE7DG2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_PropertiesFile_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void RKQMN2L ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ( new CWE601_Open_Redirect__Servlet_PropertiesFile_71b ( ) ) . badSink ( ( Object ) data , request , response ) ; }",1
"public void R31Q7O0 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 7FZVE5TG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_71b ( ) ) . goodG2BSink ( ( Object ) data , request , response ) ; }",0
"public void 6DI6MKMSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void LBXHXN6G2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void R836N7I ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_72b ( ) ) . badSink ( dataVector , request , response ) ; }",1
"public void QMQ543D ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void D884XEQG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; Vector < String > dataVector = new Vector < String > ( 5 ) ; dataVector . add ( 0 , data ) ; dataVector . add ( 1 , data ) ; dataVector . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_72b ( ) ) . goodG2BSink ( dataVector , request , response ) ; }",0
"public void S7HF1GQSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 1B784KFG2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void ITQ6M8Q ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_73b ( ) ) . badSink ( dataLinkedList , request , response ) ; }",1
"public void JQZ91CI ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void ZJ9E79ZG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; LinkedList < String > dataLinkedList = new LinkedList < String > ( ) ; dataLinkedList . add ( 0 , data ) ; dataLinkedList . add ( 1 , data ) ; dataLinkedList . add ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_73b ( ) ) . goodG2BSink ( dataLinkedList , request , response ) ; }",0
"public void RAR0PZ6Sink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void VS4WPI4G2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void U4GO1T4 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_74b ( ) ) . badSink ( dataHashMap , request , response ) ; }",1
"public void J1IJ147 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 6O6BZ2CG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; HashMap < Integer , String > dataHashMap = new HashMap < Integer , String > ( ) ; dataHashMap . put ( 0 , data ) ; dataHashMap . put ( 1 , data ) ; dataHashMap . put ( 2 , data ) ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_74b ( ) ) . goodG2BSink ( dataHashMap , request , response ) ; }",0
"public void BTOQSKOSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void UDBTUO7G2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void MWOKZOJ ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_75b ( ) ) . badSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",1
"public void JNT6LWR ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void X3VLHXFG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; ByteArrayOutputStream streamByteArrayOutput = null ; ObjectOutput outputObject = null ; try { streamByteArrayOutput = new ByteArrayOutputStream ( ) ; outputObject = new ObjectOutputStream ( streamByteArrayOutput ) ; outputObject . writeObject ( data ) ; byte [ ] dataSerialized = streamByteArrayOutput . toByteArray ( ) ; ( new CWE601_Open_Redirect__Servlet_PropertiesFile_75b ( ) ) . goodG2BSink ( dataSerialized , request , response ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in serialization"" , exceptIO ) ; } finally { try { if ( outputObject != null ) { outputObject . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectOutputStream"" , exceptIO ) ; } try { if ( streamByteArrayOutput != null ) { streamByteArrayOutput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayOutputStream"" , exceptIO ) ; } } }",0
"public void 3WN0JXJSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 8TRD5A4G2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
"public void X38BQ8J ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = """" ; { Properties properties = new Properties ( ) ; FileInputStream streamFileInput = null ; try { streamFileInput = new FileInputStream ( ""../common/config.properties"" ) ; properties . load ( streamFileInput ) ; data = properties . getProperty ( ""data"" ) ; } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error with stream reading"" , exceptIO ) ; } finally { try { if ( streamFileInput != null ) { streamFileInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing FileInputStream"" , exceptIO ) ; } } } CWE601_Open_Redirect__Servlet_PropertiesFile_81_base baseObject = new CWE601_Open_Redirect__Servlet_PropertiesFile_81_bad ( ) ; baseObject . action ( data , request , response ) ; }",1
"public void 55894QH ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void HF463K5G2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; data = ""foo"" ; CWE601_Open_Redirect__Servlet_PropertiesFile_81_base baseObject = new CWE601_Open_Redirect__Servlet_PropertiesFile_81_goodG2B ( ) ; baseObject . action ( data , request , response ) ; }",0
"public void 2GOWLAP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; badPublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_URLConnection_22b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void PN3LNKD ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B1 ( request , response ) ; goodG2B2 ( request , response ) ; }",0
"private void K0NDOTOG2B1 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B1PublicStatic = false ; data = ( new CWE601_Open_Redirect__Servlet_URLConnection_22b ( ) ) . goodG2B1Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"private void I8HPAEXG2B2 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data ; goodG2B2PublicStatic = true ; data = ( new CWE601_Open_Redirect__Servlet_URLConnection_22b ( ) ) . goodG2B2Source ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void DFTSQVBSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void K1IWA7XG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void P7DE1W8Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_52c ( ) ) . badSink ( data , request , response ) ; }",1
"public void ASP7OHYG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_52c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 7O5495QSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 1E59WL8G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 458FMCTSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_53c ( ) ) . badSink ( data , request , response ) ; }",1
"public void OKI9TW6G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_53c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void 4SQOOAHSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_53d ( ) ) . badSink ( data , request , response ) ; }",1
"public void J7PLMQVG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_53d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void YLW2ZUASink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void LSWUSR8G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void JZAS62HSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_54c ( ) ) . badSink ( data , request , response ) ; }",1
"public void ONAJ9TLG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_54c ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void MOFJ2QVSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_54d ( ) ) . badSink ( data , request , response ) ; }",1
"public void 8L8ZQKPG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_54d ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void NFQ9HB6Sink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_54e ( ) ) . badSink ( data , request , response ) ; }",1
"public void 4Y79FLBG2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ( new CWE601_Open_Redirect__Servlet_URLConnection_54e ( ) ) . goodG2BSink ( data , request , response ) ; }",0
"public void XXKNYNZSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void F0SVMY6G2BSink ( String data , HttpServletRequest request , HttpServletResponse response ) throws Throwable { if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 37MZHW7 ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_URLConnection_61b ( ) ) . badSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 356FOWP ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { goodG2B ( request , response ) ; }",0
"private void 1E0MSORG2B ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( new CWE601_Open_Redirect__Servlet_URLConnection_61b ( ) ) . goodG2BSource ( request , response ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void NMFOJITSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void N6CQV5ZG2BSink ( String dataArray [ ] , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataArray [ 2 ] ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 04BX1ENSink ( CWE601_Open_Redirect__Servlet_URLConnection_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 5J2JAUGG2BSink ( CWE601_Open_Redirect__Servlet_URLConnection_67a . Container dataContainer , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataContainer . containerOne ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 9OXUIQSSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_URLConnection_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void X5EMVI5G2BSink ( HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = CWE601_Open_Redirect__Servlet_URLConnection_68a . data ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void A57Q4BOSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void M53EQA3G2BSink ( Object dataObject , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = ( String ) dataObject ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void TIB1K89Sink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 5TKSWV1G2BSink ( Vector < String > dataVector , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataVector . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void PYP30TZSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 3R1V515G2BSink ( LinkedList < String > dataLinkedList , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataLinkedList . remove ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void 6ZL891BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",1
"public void 4XRJGU2G2BSink ( HashMap < Integer , String > dataHashMap , HttpServletRequest request , HttpServletResponse response ) throws Throwable { String data = dataHashMap . get ( 2 ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } }",0
"public void NQVJX2JSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",1
"public void 6IY6DKEG2BSink ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) throws Throwable { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; try { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String data = ( String ) streamObjectInput . readObject ( ) ; if ( data != null ) { URI uri ; try { uri = new URI ( data ) ; } catch ( URISyntaxException exceptURISyntax ) { response . getWriter ( ) . write ( ""Invalid redirect URL"" ) ; return ; } response . sendRedirect ( data ) ; return ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""IOException in deserialization"" , exceptIO ) ; } catch ( ClassNotFoundException exceptClassNotFound ) { IO . logger . log ( Level . WARNING , ""ClassNotFoundException in deserialization"" , exceptClassNotFound ) ; } finally { try { if ( streamObjectInput != null ) { streamObjectInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ObjectInputStream"" , exceptIO ) ; } try { if ( streamByteArrayInput != null ) { streamByteArrayInput . close ( ) ; } } catch ( IOException exceptIO ) { IO . logger . log ( Level . WARNING , ""Error closing ByteArrayInputStream"" , exceptIO ) ; } } }",0
